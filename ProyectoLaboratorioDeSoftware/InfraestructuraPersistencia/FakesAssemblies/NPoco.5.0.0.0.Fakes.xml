<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NPoco.5.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.NPocoDelegates">
            <summary>Contiene delegados personalizados usados para los stubs y shims de NPoco</summary>
        </member>
        <member name="T:NPoco.ArrayExtensions.Fakes.ShimArrayExtensions">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ArrayExtensions.ArrayExtensions</summary>
        </member>
        <member name="M:NPoco.ArrayExtensions.Fakes.ShimArrayExtensions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.ArrayExtensions.Fakes.ShimArrayExtensions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.ArrayExtensions.Fakes.ShimArrayExtensions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.ArrayExtensions.Fakes.ShimArrayExtensions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.ArrayExtensions.Fakes.ShimArrayExtensions.ForEachArrayActionOfArrayInt32Array">
            <summary>Establecer el shim de ArrayExtensions.ForEach(Array array, Action`2&lt;Array,Int32[]&gt; action)</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.DatabaseTypes.FirebirdDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.#ctor(NPoco.DatabaseTypes.FirebirdDatabaseType)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.AdjustSqlInsertCommandTextDbCommandString">
            <summary>Establecer el shim de FirebirdDatabaseType.AdjustSqlInsertCommandText(DbCommand cmd, String primaryKeyName)</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.AllInstances.AdjustSqlInsertCommandTextDbCommandString">
            <summary>Establecer el shim de FirebirdDatabaseType.AdjustSqlInsertCommandText(DbCommand cmd, String primaryKeyName)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.AllInstances.BuildPageQueryInt64Int64PagingHelperSQLPartsObjectArrayRef">
            <summary>Establecer el shim de FirebirdDatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.AllInstances.EscapeSqlIdentifierString">
            <summary>Establecer el shim de FirebirdDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.AllInstances.EscapeTableNameString">
            <summary>Establecer el shim de FirebirdDatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.AllInstances.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseTypes.FirebirdDatabaseType,NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de FirebirdDatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.AllInstances.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseTypes.FirebirdDatabaseType,NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer el shim de FirebirdDatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.AllInstances.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseTypes.FirebirdDatabaseType,NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer el shim de FirebirdDatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.AllInstances.GetDefaultInsertSqlStringStringBooleanStringArrayStringArray">
            <summary>Establecer el shim de FirebirdDatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.AllInstances.GetParameterPrefixString">
            <summary>Establecer el shim de FirebirdDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.AllInstances.GetProviderName">
            <summary>Establecer el shim de FirebirdDatabaseType.GetProviderName()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.AllInstances.PreExecuteDbCommand">
            <summary>Establecer el shim de FirebirdDatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.BuildPageQueryInt64Int64PagingHelperSQLPartsObjectArrayRef">
            <summary>Establecer el shim de FirebirdDatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.Constructor">
            <summary>Establecer el shim de FirebirdDatabaseType.FirebirdDatabaseType()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.EscapeSqlIdentifierString">
            <summary>Establecer el shim de FirebirdDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.EscapeTableNameString">
            <summary>Establecer el shim de FirebirdDatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de FirebirdDatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer el shim de FirebirdDatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer el shim de FirebirdDatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.GetDefaultInsertSqlStringStringBooleanStringArrayStringArray">
            <summary>Establecer el shim de FirebirdDatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.GetParameterPrefixString">
            <summary>Establecer el shim de FirebirdDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.GetProviderName">
            <summary>Establecer el shim de FirebirdDatabaseType.GetProviderName()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimFirebirdDatabaseType.PreExecuteDbCommand">
            <summary>Establecer el shim de FirebirdDatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.DatabaseTypes.MySqlDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.#ctor(NPoco.DatabaseTypes.MySqlDatabaseType)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.AllInstances.EscapeSqlIdentifierString">
            <summary>Establecer el shim de MySqlDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.AllInstances.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseTypes.MySqlDatabaseType,NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer el shim de MySqlDatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.AllInstances.GetDefaultInsertSqlStringStringBooleanStringArrayStringArray">
            <summary>Establecer el shim de MySqlDatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.AllInstances.GetDefaultTransactionIsolationLevel">
            <summary>Establecer el shim de MySqlDatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.AllInstances.GetExistsSql">
            <summary>Establecer el shim de MySqlDatabaseType.GetExistsSql()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.AllInstances.GetParameterPrefixString">
            <summary>Establecer el shim de MySqlDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.AllInstances.GetProviderName">
            <summary>Establecer el shim de MySqlDatabaseType.GetProviderName()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.AllInstances.PreExecuteDbCommand">
            <summary>Establecer el shim de MySqlDatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.Constructor">
            <summary>Establecer el shim de MySqlDatabaseType.MySqlDatabaseType()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.EscapeSqlIdentifierString">
            <summary>Establecer el shim de MySqlDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer el shim de MySqlDatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.GetDefaultInsertSqlStringStringBooleanStringArrayStringArray">
            <summary>Establecer el shim de MySqlDatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.GetDefaultTransactionIsolationLevel">
            <summary>Establecer el shim de MySqlDatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.GetExistsSql">
            <summary>Establecer el shim de MySqlDatabaseType.GetExistsSql()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.GetParameterPrefixString">
            <summary>Establecer el shim de MySqlDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.GetProviderName">
            <summary>Establecer el shim de MySqlDatabaseType.GetProviderName()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimMySqlDatabaseType.PreExecuteDbCommand">
            <summary>Establecer el shim de MySqlDatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.DatabaseTypes.OracleDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.#ctor(NPoco.DatabaseTypes.OracleDatabaseType)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.AdjustSqlInsertCommandTextDbCommandString">
            <summary>Establecer el shim de OracleDatabaseType.AdjustSqlInsertCommandText(DbCommand cmd, String primaryKeyName)</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.AllInstances.AdjustSqlInsertCommandTextDbCommandString">
            <summary>Establecer el shim de OracleDatabaseType.AdjustSqlInsertCommandText(DbCommand cmd, String primaryKeyName)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.AllInstances.BuildPageQueryInt64Int64PagingHelperSQLPartsObjectArrayRef">
            <summary>Establecer el shim de OracleDatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.AllInstances.EscapeSqlIdentifierString">
            <summary>Establecer el shim de OracleDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.AllInstances.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseTypes.OracleDatabaseType,NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de OracleDatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.AllInstances.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseTypes.OracleDatabaseType,NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer el shim de OracleDatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.AllInstances.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseTypes.OracleDatabaseType,NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer el shim de OracleDatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.AllInstances.GetAutoIncrementExpressionTableInfo">
            <summary>Establecer el shim de OracleDatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.AllInstances.GetParameterPrefixString">
            <summary>Establecer el shim de OracleDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.AllInstances.GetProviderName">
            <summary>Establecer el shim de OracleDatabaseType.GetProviderName()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.AllInstances.PreExecuteDbCommand">
            <summary>Establecer el shim de OracleDatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.BuildPageQueryInt64Int64PagingHelperSQLPartsObjectArrayRef">
            <summary>Establecer el shim de OracleDatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.Constructor">
            <summary>Establecer el shim de OracleDatabaseType.OracleDatabaseType()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.EscapeSqlIdentifierString">
            <summary>Establecer el shim de OracleDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de OracleDatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer el shim de OracleDatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer el shim de OracleDatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.GetAutoIncrementExpressionTableInfo">
            <summary>Establecer el shim de OracleDatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.GetParameterPrefixString">
            <summary>Establecer el shim de OracleDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.GetProviderName">
            <summary>Establecer el shim de OracleDatabaseType.GetProviderName()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleDatabaseType.PreExecuteDbCommand">
            <summary>Establecer el shim de OracleDatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.ShimOracleManagedDatabaseType">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.DatabaseTypes.OracleManagedDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimOracleManagedDatabaseType.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimOracleManagedDatabaseType.#ctor(NPoco.DatabaseTypes.OracleManagedDatabaseType)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.ShimOracleManagedDatabaseType.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleManagedDatabaseType.AllInstances.GetProviderName">
            <summary>Establecer el shim de OracleManagedDatabaseType.GetProviderName()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimOracleManagedDatabaseType.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimOracleManagedDatabaseType.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleManagedDatabaseType.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleManagedDatabaseType.Constructor">
            <summary>Establecer el shim de OracleManagedDatabaseType.OracleManagedDatabaseType()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimOracleManagedDatabaseType.GetProviderName">
            <summary>Establecer el shim de OracleManagedDatabaseType.GetProviderName()</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.DatabaseTypes.PostgreSQLDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.#ctor(NPoco.DatabaseTypes.PostgreSQLDatabaseType)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.AdjustSqlInsertCommandTextDbCommandString">
            <summary>Establecer el shim de PostgreSQLDatabaseType.AdjustSqlInsertCommandText(DbCommand cmd, String primaryKeyName)</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.AllInstances.AdjustSqlInsertCommandTextDbCommandString">
            <summary>Establecer el shim de PostgreSQLDatabaseType.AdjustSqlInsertCommandText(DbCommand cmd, String primaryKeyName)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.AllInstances.EscapeSqlIdentifierString">
            <summary>Establecer el shim de PostgreSQLDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.AllInstances.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseTypes.PostgreSQLDatabaseType,NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de PostgreSQLDatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.AllInstances.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseTypes.PostgreSQLDatabaseType,NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer el shim de PostgreSQLDatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.AllInstances.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseTypes.PostgreSQLDatabaseType,NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer el shim de PostgreSQLDatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.AllInstances.GetParameterPrefixString">
            <summary>Establecer el shim de PostgreSQLDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.AllInstances.GetProviderName">
            <summary>Establecer el shim de PostgreSQLDatabaseType.GetProviderName()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.AllInstances.MapParameterValueObject">
            <summary>Establecer el shim de PostgreSQLDatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.Constructor">
            <summary>Establecer el shim de PostgreSQLDatabaseType.PostgreSQLDatabaseType()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.EscapeSqlIdentifierString">
            <summary>Establecer el shim de PostgreSQLDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de PostgreSQLDatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer el shim de PostgreSQLDatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer el shim de PostgreSQLDatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.GetParameterPrefixString">
            <summary>Establecer el shim de PostgreSQLDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.GetProviderName">
            <summary>Establecer el shim de PostgreSQLDatabaseType.GetProviderName()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimPostgreSQLDatabaseType.MapParameterValueObject">
            <summary>Establecer el shim de PostgreSQLDatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.DatabaseTypes.SQLiteDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.#ctor(NPoco.DatabaseTypes.SQLiteDatabaseType)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.AdjustSqlInsertCommandTextDbCommand">
            <summary>Establecer el shim de SQLiteDatabaseType.AdjustSqlInsertCommandText(DbCommand cmd)</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.AllInstances.AdjustSqlInsertCommandTextDbCommand">
            <summary>Establecer el shim de SQLiteDatabaseType.AdjustSqlInsertCommandText(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.AllInstances.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseTypes.SQLiteDatabaseType,NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de SQLiteDatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.AllInstances.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseTypes.SQLiteDatabaseType,NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer el shim de SQLiteDatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.AllInstances.GetDefaultTransactionIsolationLevel">
            <summary>Establecer el shim de SQLiteDatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.AllInstances.GetExistsSql">
            <summary>Establecer el shim de SQLiteDatabaseType.GetExistsSql()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.AllInstances.GetProviderName">
            <summary>Establecer el shim de SQLiteDatabaseType.GetProviderName()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.AllInstances.GetSQLForTransactionLevelIsolationLevel">
            <summary>Establecer el shim de SQLiteDatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.AllInstances.MapParameterValueObject">
            <summary>Establecer el shim de SQLiteDatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.Constructor">
            <summary>Establecer el shim de SQLiteDatabaseType.SQLiteDatabaseType()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de SQLiteDatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer el shim de SQLiteDatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.GetDefaultTransactionIsolationLevel">
            <summary>Establecer el shim de SQLiteDatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.GetExistsSql">
            <summary>Establecer el shim de SQLiteDatabaseType.GetExistsSql()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.GetProviderName">
            <summary>Establecer el shim de SQLiteDatabaseType.GetProviderName()</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.GetSQLForTransactionLevelIsolationLevel">
            <summary>Establecer el shim de SQLiteDatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.ShimSQLiteDatabaseType.MapParameterValueObject">
            <summary>Establecer el shim de SQLiteDatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType">
            <summary>Tipo stub de NPoco.DatabaseTypes.FirebirdDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.BuildPageQuery(System.Int64,System.Int64,NPoco.PagingHelper.SQLParts,System.Object[]@)">
            <summary>Establecer el stub de FirebirdDatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.BuildPageQueryInt64Int64PagingHelperSQLPartsObjectArrayRef">
            <summary>Establecer el stub de FirebirdDatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.EscapeSqlIdentifier(System.String)">
            <summary>Establecer el stub de FirebirdDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.EscapeSqlIdentifierString">
            <summary>Establecer el stub de FirebirdDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.EscapeTableName(System.String)">
            <summary>Establecer el stub de FirebirdDatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.EscapeTableNameString">
            <summary>Establecer el stub de FirebirdDatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.ExecuteInsert``1(NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[])">
            <summary>Establecer el stub de FirebirdDatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.ExecuteInsertAsync``1(NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[])">
            <summary>Establecer el stub de FirebirdDatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer stubs de ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer stubs de ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.ExecuteNonQueryAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.ExecuteNonQueryAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.ExecuteReaderAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.ExecuteReaderAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.ExecuteScalarAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.ExecuteScalarAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.ExpressionVisitor``1(NPoco.IDatabase,NPoco.PocoData,System.Boolean)">
            <summary>Establecer el stub de FirebirdDatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer stubs de ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.FormatCommand(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.FormatCommand(System.String,System.Object[])">
            <summary>Establecer el stub de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.FormatCommandDbCommand">
            <summary>Establecer el stub de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.FormatCommandStringObjectArray">
            <summary>Establecer el stub de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetAutoIncrementExpression(NPoco.TableInfo)">
            <summary>Establecer el stub de DatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetAutoIncrementExpressionTableInfo">
            <summary>Establecer el stub de DatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetDefaultInsertSql(System.String,System.String,System.Boolean,System.String[],System.String[])">
            <summary>Establecer el stub de FirebirdDatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetDefaultInsertSqlStringStringBooleanStringArrayStringArray">
            <summary>Establecer el stub de FirebirdDatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetDefaultTransactionIsolationLevel">
            <summary>Establecer el stub de DatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetDefaultTransactionIsolationLevel01">
            <summary>Establecer el stub de DatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetExistsSql">
            <summary>Establecer el stub de DatabaseType.GetExistsSql()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetExistsSql01">
            <summary>Establecer el stub de DatabaseType.GetExistsSql()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetInsertOutputClause(System.String,System.Boolean)">
            <summary>Establecer el stub de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetInsertOutputClauseStringBoolean">
            <summary>Establecer el stub de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetParameterPrefix(System.String)">
            <summary>Establecer el stub de FirebirdDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetParameterPrefixString">
            <summary>Establecer el stub de FirebirdDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetProviderName">
            <summary>Establecer el stub de FirebirdDatabaseType.GetProviderName()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetProviderName01">
            <summary>Establecer el stub de FirebirdDatabaseType.GetProviderName()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetSQLForTransactionLevel(System.Data.IsolationLevel)">
            <summary>Establecer el stub de DatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.GetSQLForTransactionLevelIsolationLevel">
            <summary>Establecer el stub de DatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubFirebirdDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.InsertBulk``1(NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de DatabaseType.InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.InsertBulkAsync``1(NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de DatabaseType.InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.InsertBulkAsyncOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions,System.Threading.Tasks.Task})">
            <summary>Establecer stubs de InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.InsertBulkOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions})">
            <summary>Establecer stubs de InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.LookupDbType(System.Type,System.String)">
            <summary>Establecer el stub de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.LookupDbTypeTypeString">
            <summary>Establecer el stub de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.MapParameterValue(System.Object)">
            <summary>Establecer el stub de DatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.MapParameterValueObject">
            <summary>Establecer el stub de DatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.PreExecute(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de FirebirdDatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.PreExecuteDbCommand">
            <summary>Establecer el stub de FirebirdDatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.ProcessDefaultMappings(NPoco.PocoColumn,System.Object)">
            <summary>Establecer el stub de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.ProcessDefaultMappingsPocoColumnObject">
            <summary>Establecer el stub de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.UseColumnAliases">
            <summary>Establecer el stub de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubFirebirdDatabaseType.UseColumnAliases01">
            <summary>Establecer el stub de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType">
            <summary>Tipo stub de NPoco.DatabaseTypes.MySqlDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.BuildPageQuery(System.Int64,System.Int64,NPoco.PagingHelper.SQLParts,System.Object[]@)">
            <summary>Establecer el stub de DatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.BuildPageQueryInt64Int64PagingHelperSQLPartsObjectArrayRef">
            <summary>Establecer el stub de DatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.EscapeSqlIdentifier(System.String)">
            <summary>Establecer el stub de MySqlDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.EscapeSqlIdentifierString">
            <summary>Establecer el stub de MySqlDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.EscapeTableName(System.String)">
            <summary>Establecer el stub de DatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.EscapeTableNameString">
            <summary>Establecer el stub de DatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.ExecuteInsert``1(NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[])">
            <summary>Establecer el stub de DatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.ExecuteInsertAsync``1(NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[])">
            <summary>Establecer el stub de DatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer stubs de ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer stubs de ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.ExecuteNonQueryAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.ExecuteNonQueryAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.ExecuteReaderAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.ExecuteReaderAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.ExecuteScalarAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.ExecuteScalarAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.ExpressionVisitor``1(NPoco.IDatabase,NPoco.PocoData,System.Boolean)">
            <summary>Establecer el stub de MySqlDatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer stubs de ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.FormatCommand(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.FormatCommand(System.String,System.Object[])">
            <summary>Establecer el stub de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.FormatCommandDbCommand">
            <summary>Establecer el stub de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.FormatCommandStringObjectArray">
            <summary>Establecer el stub de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetAutoIncrementExpression(NPoco.TableInfo)">
            <summary>Establecer el stub de DatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetAutoIncrementExpressionTableInfo">
            <summary>Establecer el stub de DatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetDefaultInsertSql(System.String,System.String,System.Boolean,System.String[],System.String[])">
            <summary>Establecer el stub de MySqlDatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetDefaultInsertSqlStringStringBooleanStringArrayStringArray">
            <summary>Establecer el stub de MySqlDatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetDefaultTransactionIsolationLevel">
            <summary>Establecer el stub de MySqlDatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetDefaultTransactionIsolationLevel01">
            <summary>Establecer el stub de MySqlDatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetExistsSql">
            <summary>Establecer el stub de MySqlDatabaseType.GetExistsSql()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetExistsSql01">
            <summary>Establecer el stub de MySqlDatabaseType.GetExistsSql()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetInsertOutputClause(System.String,System.Boolean)">
            <summary>Establecer el stub de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetInsertOutputClauseStringBoolean">
            <summary>Establecer el stub de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetParameterPrefix(System.String)">
            <summary>Establecer el stub de MySqlDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetParameterPrefixString">
            <summary>Establecer el stub de MySqlDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetProviderName">
            <summary>Establecer el stub de MySqlDatabaseType.GetProviderName()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetProviderName01">
            <summary>Establecer el stub de MySqlDatabaseType.GetProviderName()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetSQLForTransactionLevel(System.Data.IsolationLevel)">
            <summary>Establecer el stub de DatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.GetSQLForTransactionLevelIsolationLevel">
            <summary>Establecer el stub de DatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMySqlDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.InsertBulk``1(NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de DatabaseType.InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.InsertBulkAsync``1(NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de DatabaseType.InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.InsertBulkAsyncOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions,System.Threading.Tasks.Task})">
            <summary>Establecer stubs de InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.InsertBulkOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions})">
            <summary>Establecer stubs de InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.LookupDbType(System.Type,System.String)">
            <summary>Establecer el stub de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.LookupDbTypeTypeString">
            <summary>Establecer el stub de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.MapParameterValue(System.Object)">
            <summary>Establecer el stub de DatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.MapParameterValueObject">
            <summary>Establecer el stub de DatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.PreExecute(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de MySqlDatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.PreExecuteDbCommand">
            <summary>Establecer el stub de MySqlDatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.ProcessDefaultMappings(NPoco.PocoColumn,System.Object)">
            <summary>Establecer el stub de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.ProcessDefaultMappingsPocoColumnObject">
            <summary>Establecer el stub de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.UseColumnAliases">
            <summary>Establecer el stub de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubMySqlDatabaseType.UseColumnAliases01">
            <summary>Establecer el stub de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType">
            <summary>Tipo stub de NPoco.DatabaseTypes.OracleDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.BuildPageQuery(System.Int64,System.Int64,NPoco.PagingHelper.SQLParts,System.Object[]@)">
            <summary>Establecer el stub de OracleDatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.BuildPageQueryInt64Int64PagingHelperSQLPartsObjectArrayRef">
            <summary>Establecer el stub de OracleDatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.EscapeSqlIdentifier(System.String)">
            <summary>Establecer el stub de OracleDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.EscapeSqlIdentifierString">
            <summary>Establecer el stub de OracleDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.EscapeTableName(System.String)">
            <summary>Establecer el stub de DatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.EscapeTableNameString">
            <summary>Establecer el stub de DatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.ExecuteInsert``1(NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[])">
            <summary>Establecer el stub de OracleDatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.ExecuteInsertAsync``1(NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[])">
            <summary>Establecer el stub de OracleDatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer stubs de ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer stubs de ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.ExecuteNonQueryAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.ExecuteNonQueryAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.ExecuteReaderAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.ExecuteReaderAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.ExecuteScalarAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.ExecuteScalarAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.ExpressionVisitor``1(NPoco.IDatabase,NPoco.PocoData,System.Boolean)">
            <summary>Establecer el stub de OracleDatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer stubs de ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.FormatCommand(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.FormatCommand(System.String,System.Object[])">
            <summary>Establecer el stub de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.FormatCommandDbCommand">
            <summary>Establecer el stub de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.FormatCommandStringObjectArray">
            <summary>Establecer el stub de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetAutoIncrementExpression(NPoco.TableInfo)">
            <summary>Establecer el stub de OracleDatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetAutoIncrementExpressionTableInfo">
            <summary>Establecer el stub de OracleDatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetDefaultInsertSql(System.String,System.String,System.Boolean,System.String[],System.String[])">
            <summary>Establecer el stub de DatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetDefaultInsertSqlStringStringBooleanStringArrayStringArray">
            <summary>Establecer el stub de DatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetDefaultTransactionIsolationLevel">
            <summary>Establecer el stub de DatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetDefaultTransactionIsolationLevel01">
            <summary>Establecer el stub de DatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetExistsSql">
            <summary>Establecer el stub de DatabaseType.GetExistsSql()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetExistsSql01">
            <summary>Establecer el stub de DatabaseType.GetExistsSql()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetInsertOutputClause(System.String,System.Boolean)">
            <summary>Establecer el stub de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetInsertOutputClauseStringBoolean">
            <summary>Establecer el stub de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetParameterPrefix(System.String)">
            <summary>Establecer el stub de OracleDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetParameterPrefixString">
            <summary>Establecer el stub de OracleDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetProviderName">
            <summary>Establecer el stub de OracleDatabaseType.GetProviderName()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetProviderName01">
            <summary>Establecer el stub de OracleDatabaseType.GetProviderName()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetSQLForTransactionLevel(System.Data.IsolationLevel)">
            <summary>Establecer el stub de DatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.GetSQLForTransactionLevelIsolationLevel">
            <summary>Establecer el stub de DatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubOracleDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.InsertBulk``1(NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de DatabaseType.InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.InsertBulkAsync``1(NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de DatabaseType.InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.InsertBulkAsyncOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions,System.Threading.Tasks.Task})">
            <summary>Establecer stubs de InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.InsertBulkOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions})">
            <summary>Establecer stubs de InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.LookupDbType(System.Type,System.String)">
            <summary>Establecer el stub de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.LookupDbTypeTypeString">
            <summary>Establecer el stub de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.MapParameterValue(System.Object)">
            <summary>Establecer el stub de DatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.MapParameterValueObject">
            <summary>Establecer el stub de DatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.PreExecute(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de OracleDatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.PreExecuteDbCommand">
            <summary>Establecer el stub de OracleDatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.ProcessDefaultMappings(NPoco.PocoColumn,System.Object)">
            <summary>Establecer el stub de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.ProcessDefaultMappingsPocoColumnObject">
            <summary>Establecer el stub de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.UseColumnAliases">
            <summary>Establecer el stub de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleDatabaseType.UseColumnAliases01">
            <summary>Establecer el stub de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType">
            <summary>Tipo stub de NPoco.DatabaseTypes.OracleManagedDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.BuildPageQuery(System.Int64,System.Int64,NPoco.PagingHelper.SQLParts,System.Object[]@)">
            <summary>Establecer el stub de OracleDatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.BuildPageQueryInt64Int64PagingHelperSQLPartsObjectArrayRef">
            <summary>Establecer el stub de OracleDatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.EscapeSqlIdentifier(System.String)">
            <summary>Establecer el stub de OracleDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.EscapeSqlIdentifierString">
            <summary>Establecer el stub de OracleDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.EscapeTableName(System.String)">
            <summary>Establecer el stub de DatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.EscapeTableNameString">
            <summary>Establecer el stub de DatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.ExecuteInsert``1(NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[])">
            <summary>Establecer el stub de OracleDatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.ExecuteInsertAsync``1(NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[])">
            <summary>Establecer el stub de OracleDatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer stubs de ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer stubs de ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.ExecuteNonQueryAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.ExecuteNonQueryAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.ExecuteReaderAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.ExecuteReaderAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.ExecuteScalarAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.ExecuteScalarAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.ExpressionVisitor``1(NPoco.IDatabase,NPoco.PocoData,System.Boolean)">
            <summary>Establecer el stub de OracleDatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer stubs de ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.FormatCommand(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.FormatCommand(System.String,System.Object[])">
            <summary>Establecer el stub de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.FormatCommandDbCommand">
            <summary>Establecer el stub de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.FormatCommandStringObjectArray">
            <summary>Establecer el stub de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetAutoIncrementExpression(NPoco.TableInfo)">
            <summary>Establecer el stub de OracleDatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetAutoIncrementExpressionTableInfo">
            <summary>Establecer el stub de OracleDatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetDefaultInsertSql(System.String,System.String,System.Boolean,System.String[],System.String[])">
            <summary>Establecer el stub de DatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetDefaultInsertSqlStringStringBooleanStringArrayStringArray">
            <summary>Establecer el stub de DatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetDefaultTransactionIsolationLevel">
            <summary>Establecer el stub de DatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetDefaultTransactionIsolationLevel01">
            <summary>Establecer el stub de DatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetExistsSql">
            <summary>Establecer el stub de DatabaseType.GetExistsSql()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetExistsSql01">
            <summary>Establecer el stub de DatabaseType.GetExistsSql()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetInsertOutputClause(System.String,System.Boolean)">
            <summary>Establecer el stub de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetInsertOutputClauseStringBoolean">
            <summary>Establecer el stub de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetParameterPrefix(System.String)">
            <summary>Establecer el stub de OracleDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetParameterPrefixString">
            <summary>Establecer el stub de OracleDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetProviderName">
            <summary>Establecer el stub de OracleManagedDatabaseType.GetProviderName()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetProviderName01">
            <summary>Establecer el stub de OracleManagedDatabaseType.GetProviderName()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetSQLForTransactionLevel(System.Data.IsolationLevel)">
            <summary>Establecer el stub de DatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.GetSQLForTransactionLevelIsolationLevel">
            <summary>Establecer el stub de DatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubOracleManagedDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.InsertBulk``1(NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de DatabaseType.InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.InsertBulkAsync``1(NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de DatabaseType.InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.InsertBulkAsyncOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions,System.Threading.Tasks.Task})">
            <summary>Establecer stubs de InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.InsertBulkOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions})">
            <summary>Establecer stubs de InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.LookupDbType(System.Type,System.String)">
            <summary>Establecer el stub de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.LookupDbTypeTypeString">
            <summary>Establecer el stub de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.MapParameterValue(System.Object)">
            <summary>Establecer el stub de DatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.MapParameterValueObject">
            <summary>Establecer el stub de DatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.PreExecute(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de OracleDatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.PreExecuteDbCommand">
            <summary>Establecer el stub de OracleDatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.ProcessDefaultMappings(NPoco.PocoColumn,System.Object)">
            <summary>Establecer el stub de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.ProcessDefaultMappingsPocoColumnObject">
            <summary>Establecer el stub de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.UseColumnAliases">
            <summary>Establecer el stub de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubOracleManagedDatabaseType.UseColumnAliases01">
            <summary>Establecer el stub de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType">
            <summary>Tipo stub de NPoco.DatabaseTypes.PostgreSQLDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.BuildPageQuery(System.Int64,System.Int64,NPoco.PagingHelper.SQLParts,System.Object[]@)">
            <summary>Establecer el stub de DatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.BuildPageQueryInt64Int64PagingHelperSQLPartsObjectArrayRef">
            <summary>Establecer el stub de DatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.EscapeSqlIdentifier(System.String)">
            <summary>Establecer el stub de PostgreSQLDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.EscapeSqlIdentifierString">
            <summary>Establecer el stub de PostgreSQLDatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.EscapeTableName(System.String)">
            <summary>Establecer el stub de DatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.EscapeTableNameString">
            <summary>Establecer el stub de DatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.ExecuteInsert``1(NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[])">
            <summary>Establecer el stub de PostgreSQLDatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.ExecuteInsertAsync``1(NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[])">
            <summary>Establecer el stub de PostgreSQLDatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer stubs de ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer stubs de ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.ExecuteNonQueryAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.ExecuteNonQueryAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.ExecuteReaderAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.ExecuteReaderAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.ExecuteScalarAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.ExecuteScalarAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.ExpressionVisitor``1(NPoco.IDatabase,NPoco.PocoData,System.Boolean)">
            <summary>Establecer el stub de PostgreSQLDatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer stubs de ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.FormatCommand(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.FormatCommand(System.String,System.Object[])">
            <summary>Establecer el stub de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.FormatCommandDbCommand">
            <summary>Establecer el stub de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.FormatCommandStringObjectArray">
            <summary>Establecer el stub de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetAutoIncrementExpression(NPoco.TableInfo)">
            <summary>Establecer el stub de DatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetAutoIncrementExpressionTableInfo">
            <summary>Establecer el stub de DatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetDefaultInsertSql(System.String,System.String,System.Boolean,System.String[],System.String[])">
            <summary>Establecer el stub de DatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetDefaultInsertSqlStringStringBooleanStringArrayStringArray">
            <summary>Establecer el stub de DatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetDefaultTransactionIsolationLevel">
            <summary>Establecer el stub de DatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetDefaultTransactionIsolationLevel01">
            <summary>Establecer el stub de DatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetExistsSql">
            <summary>Establecer el stub de DatabaseType.GetExistsSql()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetExistsSql01">
            <summary>Establecer el stub de DatabaseType.GetExistsSql()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetInsertOutputClause(System.String,System.Boolean)">
            <summary>Establecer el stub de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetInsertOutputClauseStringBoolean">
            <summary>Establecer el stub de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetParameterPrefix(System.String)">
            <summary>Establecer el stub de PostgreSQLDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetParameterPrefixString">
            <summary>Establecer el stub de PostgreSQLDatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetProviderName">
            <summary>Establecer el stub de PostgreSQLDatabaseType.GetProviderName()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetProviderName01">
            <summary>Establecer el stub de PostgreSQLDatabaseType.GetProviderName()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetSQLForTransactionLevel(System.Data.IsolationLevel)">
            <summary>Establecer el stub de DatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.GetSQLForTransactionLevelIsolationLevel">
            <summary>Establecer el stub de DatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPostgreSQLDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.InsertBulk``1(NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de DatabaseType.InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.InsertBulkAsync``1(NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de DatabaseType.InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.InsertBulkAsyncOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions,System.Threading.Tasks.Task})">
            <summary>Establecer stubs de InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.InsertBulkOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions})">
            <summary>Establecer stubs de InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.LookupDbType(System.Type,System.String)">
            <summary>Establecer el stub de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.LookupDbTypeTypeString">
            <summary>Establecer el stub de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.MapParameterValue(System.Object)">
            <summary>Establecer el stub de PostgreSQLDatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.MapParameterValueObject">
            <summary>Establecer el stub de PostgreSQLDatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.PreExecute(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.PreExecuteDbCommand">
            <summary>Establecer el stub de DatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.ProcessDefaultMappings(NPoco.PocoColumn,System.Object)">
            <summary>Establecer el stub de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.ProcessDefaultMappingsPocoColumnObject">
            <summary>Establecer el stub de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.UseColumnAliases">
            <summary>Establecer el stub de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubPostgreSQLDatabaseType.UseColumnAliases01">
            <summary>Establecer el stub de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="T:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType">
            <summary>Tipo stub de NPoco.DatabaseTypes.SQLiteDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.BuildPageQuery(System.Int64,System.Int64,NPoco.PagingHelper.SQLParts,System.Object[]@)">
            <summary>Establecer el stub de DatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.BuildPageQueryInt64Int64PagingHelperSQLPartsObjectArrayRef">
            <summary>Establecer el stub de DatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.EscapeSqlIdentifier(System.String)">
            <summary>Establecer el stub de DatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.EscapeSqlIdentifierString">
            <summary>Establecer el stub de DatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.EscapeTableName(System.String)">
            <summary>Establecer el stub de DatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.EscapeTableNameString">
            <summary>Establecer el stub de DatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.ExecuteInsert``1(NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[])">
            <summary>Establecer el stub de SQLiteDatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.ExecuteInsertAsync``1(NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[])">
            <summary>Establecer el stub de SQLiteDatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer stubs de ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer stubs de ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.ExecuteNonQueryAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.ExecuteNonQueryAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.ExecuteReaderAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.ExecuteReaderAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.ExecuteScalarAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.ExecuteScalarAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.ExpressionVisitor``1(NPoco.IDatabase,NPoco.PocoData,System.Boolean)">
            <summary>Establecer el stub de DatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer stubs de ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.FormatCommand(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.FormatCommand(System.String,System.Object[])">
            <summary>Establecer el stub de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.FormatCommandDbCommand">
            <summary>Establecer el stub de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.FormatCommandStringObjectArray">
            <summary>Establecer el stub de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetAutoIncrementExpression(NPoco.TableInfo)">
            <summary>Establecer el stub de DatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetAutoIncrementExpressionTableInfo">
            <summary>Establecer el stub de DatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetDefaultInsertSql(System.String,System.String,System.Boolean,System.String[],System.String[])">
            <summary>Establecer el stub de DatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetDefaultInsertSqlStringStringBooleanStringArrayStringArray">
            <summary>Establecer el stub de DatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetDefaultTransactionIsolationLevel">
            <summary>Establecer el stub de SQLiteDatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetDefaultTransactionIsolationLevel01">
            <summary>Establecer el stub de SQLiteDatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetExistsSql">
            <summary>Establecer el stub de SQLiteDatabaseType.GetExistsSql()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetExistsSql01">
            <summary>Establecer el stub de SQLiteDatabaseType.GetExistsSql()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetInsertOutputClause(System.String,System.Boolean)">
            <summary>Establecer el stub de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetInsertOutputClauseStringBoolean">
            <summary>Establecer el stub de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetParameterPrefix(System.String)">
            <summary>Establecer el stub de DatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetParameterPrefixString">
            <summary>Establecer el stub de DatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetProviderName">
            <summary>Establecer el stub de SQLiteDatabaseType.GetProviderName()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetProviderName01">
            <summary>Establecer el stub de SQLiteDatabaseType.GetProviderName()</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetSQLForTransactionLevel(System.Data.IsolationLevel)">
            <summary>Establecer el stub de SQLiteDatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.GetSQLForTransactionLevelIsolationLevel">
            <summary>Establecer el stub de SQLiteDatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSQLiteDatabaseType</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.InsertBulk``1(NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de DatabaseType.InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.InsertBulkAsync``1(NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de DatabaseType.InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.InsertBulkAsyncOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions,System.Threading.Tasks.Task})">
            <summary>Establecer stubs de InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.InsertBulkOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions})">
            <summary>Establecer stubs de InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.LookupDbType(System.Type,System.String)">
            <summary>Establecer el stub de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.LookupDbTypeTypeString">
            <summary>Establecer el stub de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.MapParameterValue(System.Object)">
            <summary>Establecer el stub de SQLiteDatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.MapParameterValueObject">
            <summary>Establecer el stub de SQLiteDatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.PreExecute(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.PreExecuteDbCommand">
            <summary>Establecer el stub de DatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.ProcessDefaultMappings(NPoco.PocoColumn,System.Object)">
            <summary>Establecer el stub de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.ProcessDefaultMappingsPocoColumnObject">
            <summary>Establecer el stub de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="M:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.UseColumnAliases">
            <summary>Establecer el stub de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="F:NPoco.DatabaseTypes.Fakes.StubSQLiteDatabaseType.UseColumnAliases01">
            <summary>Establecer el stub de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimDefaultSqlExpression`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.DefaultSqlExpression`1</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimDefaultSqlExpression`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimDefaultSqlExpression`1.#ctor(NPoco.Expressions.DefaultSqlExpression{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimDefaultSqlExpression`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimDefaultSqlExpression`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimDefaultSqlExpression`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimDefaultSqlExpression`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimDefaultSqlExpression`1.Bind(NPoco.Expressions.ISqlExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimDefaultSqlExpression`1.ConstructorIDatabase">
            <summary>Establecer el shim de DefaultSqlExpression`1.DefaultSqlExpression`1(IDatabase database)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimDefaultSqlExpression`1.ConstructorIDatabaseBoolean">
            <summary>Establecer el shim de DefaultSqlExpression`1.DefaultSqlExpression`1(IDatabase database, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimDefaultSqlExpression`1.ConstructorIDatabasePocoData">
            <summary>Establecer el shim de DefaultSqlExpression`1.DefaultSqlExpression`1(IDatabase database, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimDefaultSqlExpression`1.ConstructorIDatabasePocoDataBoolean">
            <summary>Establecer el shim de DefaultSqlExpression`1.DefaultSqlExpression`1(IDatabase database, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimEnumMemberAccess">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.EnumMemberAccess</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimEnumMemberAccess.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimEnumMemberAccess.#ctor(NPoco.Expressions.EnumMemberAccess)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimEnumMemberAccess.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimEnumMemberAccess.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimEnumMemberAccess.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimEnumMemberAccess.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimEnumMemberAccess.ConstructorPocoColumnPocoColumnArrayStringType">
            <summary>Establecer el shim de EnumMemberAccess.EnumMemberAccess(PocoColumn pocoColumn, PocoColumn[] pocoColumns, String text, Type type)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimExpressionVisitor">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.ExpressionVisitor</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimExpressionVisitor.#ctor(NPoco.Expressions.ExpressionVisitor)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitBinaryBinaryExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitBindingListReadOnlyCollectionOfMemberBinding">
            <summary>Establecer el shim de ExpressionVisitor.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitBindingMemberBinding">
            <summary>Establecer el shim de ExpressionVisitor.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitConditionalConditionalExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitConditional(ConditionalExpression c)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitConstantConstantExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitElementInitializerElementInit">
            <summary>Establecer el shim de ExpressionVisitor.VisitElementInitializer(ElementInit initializer)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitElementInitializerListReadOnlyCollectionOfElementInit">
            <summary>Establecer el shim de ExpressionVisitor.VisitElementInitializerList(ReadOnlyCollection`1&lt;ElementInit&gt; original)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitExpression">
            <summary>Establecer el shim de ExpressionVisitor.Visit(Expression exp)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitExpressionListReadOnlyCollectionOfExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitInvocationInvocationExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitInvocation(InvocationExpression iv)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitLambdaLambdaExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitListInitListInitExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitListInit(ListInitExpression init)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitMemberAccessMemberExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitMemberAssignmentMemberAssignment">
            <summary>Establecer el shim de ExpressionVisitor.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitMemberInitMemberInitExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitMemberListBindingMemberListBinding">
            <summary>Establecer el shim de ExpressionVisitor.VisitMemberListBinding(MemberListBinding binding)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Establecer el shim de ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitMethodCallMethodCallExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitNewArrayNewArrayExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitNewNewExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitParameterParameterExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitTypeIsTypeBinaryExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitTypeIs(TypeBinaryExpression b)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.AllInstances.VisitUnaryUnaryExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimExpressionVisitor.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimExpressionVisitor.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.Constructor">
            <summary>Establecer el shim de ExpressionVisitor.ExpressionVisitor()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitBinaryBinaryExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitBindingListReadOnlyCollectionOfMemberBinding">
            <summary>Establecer el shim de ExpressionVisitor.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitBindingMemberBinding">
            <summary>Establecer el shim de ExpressionVisitor.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitConditionalConditionalExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitConditional(ConditionalExpression c)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitConstantConstantExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitElementInitializerElementInit">
            <summary>Establecer el shim de ExpressionVisitor.VisitElementInitializer(ElementInit initializer)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitElementInitializerListReadOnlyCollectionOfElementInit">
            <summary>Establecer el shim de ExpressionVisitor.VisitElementInitializerList(ReadOnlyCollection`1&lt;ElementInit&gt; original)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitExpression">
            <summary>Establecer el shim de ExpressionVisitor.Visit(Expression exp)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitExpressionListReadOnlyCollectionOfExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitInvocationInvocationExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitInvocation(InvocationExpression iv)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitLambdaLambdaExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitListInitListInitExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitListInit(ListInitExpression init)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitMemberAccessMemberExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitMemberAssignmentMemberAssignment">
            <summary>Establecer el shim de ExpressionVisitor.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitMemberInitMemberInitExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitMemberListBindingMemberListBinding">
            <summary>Establecer el shim de ExpressionVisitor.VisitMemberListBinding(MemberListBinding binding)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Establecer el shim de ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitMethodCallMethodCallExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitNewArrayNewArrayExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitNewNewExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitParameterParameterExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitTypeIsTypeBinaryExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitTypeIs(TypeBinaryExpression b)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimExpressionVisitor.VisitUnaryUnaryExpression">
            <summary>Establecer el shim de ExpressionVisitor.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimFirebirdSqlExpression`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.FirebirdSqlExpression`1</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimFirebirdSqlExpression`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimFirebirdSqlExpression`1.#ctor(NPoco.Expressions.FirebirdSqlExpression{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimFirebirdSqlExpression`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimFirebirdSqlExpression`1.AllInstances.GetDateTimeSqlStringObject">
            <summary>Establecer el shim de FirebirdSqlExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimFirebirdSqlExpression`1.AllInstances.SubstringStatementPartialSqlStringInt32Int32">
            <summary>Establecer el shim de FirebirdSqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimFirebirdSqlExpression`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimFirebirdSqlExpression`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimFirebirdSqlExpression`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimFirebirdSqlExpression`1.Bind(NPoco.Expressions.ISqlExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimFirebirdSqlExpression`1.ConstructorIDatabasePocoData">
            <summary>Establecer el shim de FirebirdSqlExpression`1.FirebirdSqlExpression`1(IDatabase database, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimFirebirdSqlExpression`1.ConstructorIDatabasePocoDataBoolean">
            <summary>Establecer el shim de FirebirdSqlExpression`1.FirebirdSqlExpression`1(IDatabase database, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimFirebirdSqlExpression`1.GetDateTimeSqlStringObject">
            <summary>Establecer el shim de FirebirdSqlExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimFirebirdSqlExpression`1.SubstringStatementPartialSqlStringInt32Int32">
            <summary>Establecer el shim de FirebirdSqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimGeneralMember">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.GeneralMember</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimGeneralMember.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimGeneralMember.#ctor(NPoco.Expressions.GeneralMember)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimGeneralMember.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimGeneralMember.AllInstances.EntityTypeGet">
            <summary>Establecer el shim de GeneralMember.get_EntityType()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimGeneralMember.AllInstances.EntityTypeSetType">
            <summary>Establecer el shim de GeneralMember.set_EntityType(Type value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimGeneralMember.AllInstances.PocoColumnGet">
            <summary>Establecer el shim de GeneralMember.get_PocoColumn()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimGeneralMember.AllInstances.PocoColumnSetPocoColumn">
            <summary>Establecer el shim de GeneralMember.set_PocoColumn(PocoColumn value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimGeneralMember.AllInstances.PocoColumnsGet">
            <summary>Establecer el shim de GeneralMember.get_PocoColumns()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimGeneralMember.AllInstances.PocoColumnsSetPocoColumnArray">
            <summary>Establecer el shim de GeneralMember.set_PocoColumns(PocoColumn[] value)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimGeneralMember.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimGeneralMember.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimGeneralMember.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimGeneralMember.Constructor">
            <summary>Establecer el shim de GeneralMember.GeneralMember()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimGeneralMember.EntityTypeGet">
            <summary>Establecer el shim de GeneralMember.get_EntityType()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimGeneralMember.EntityTypeSetType">
            <summary>Establecer el shim de GeneralMember.set_EntityType(Type value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimGeneralMember.PocoColumnGet">
            <summary>Establecer el shim de GeneralMember.get_PocoColumn()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimGeneralMember.PocoColumnSetPocoColumn">
            <summary>Establecer el shim de GeneralMember.set_PocoColumn(PocoColumn value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimGeneralMember.PocoColumnsGet">
            <summary>Establecer el shim de GeneralMember.get_PocoColumns()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimGeneralMember.PocoColumnsSetPocoColumnArray">
            <summary>Establecer el shim de GeneralMember.set_PocoColumns(PocoColumn[] value)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimLinqExtensions">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.LinqExtensions</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimLinqExtensions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimLinqExtensions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimLinqExtensions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimLinqExtensions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimLinqExtensions.GetConstantValueOf1Expression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,``0})">
            <summary>Establecer el shim de LinqExtensions.GetConstantValue(Expression exp)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimMemberAccessString">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.MemberAccessString</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimMemberAccessString.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimMemberAccessString.#ctor(NPoco.Expressions.MemberAccessString)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimMemberAccessString.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberAccessString.AllInstances.PocoColumnGet">
            <summary>Establecer el shim de MemberAccessString.get_PocoColumn()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberAccessString.AllInstances.PocoColumnSetPocoColumn">
            <summary>Establecer el shim de MemberAccessString.set_PocoColumn(PocoColumn value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberAccessString.AllInstances.PocoColumnsGet">
            <summary>Establecer el shim de MemberAccessString.get_PocoColumns()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberAccessString.AllInstances.PocoColumnsSetPocoColumnArray">
            <summary>Establecer el shim de MemberAccessString.set_PocoColumns(PocoColumn[] value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberAccessString.AllInstances.TypeGet">
            <summary>Establecer el shim de MemberAccessString.get_Type()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberAccessString.AllInstances.TypeSetType">
            <summary>Establecer el shim de MemberAccessString.set_Type(Type value)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimMemberAccessString.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimMemberAccessString.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberAccessString.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberAccessString.ConstructorPocoColumnPocoColumnArrayStringType">
            <summary>Establecer el shim de MemberAccessString.MemberAccessString(PocoColumn pocoColumn, PocoColumn[] pocoColumns, String text, Type type)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberAccessString.PocoColumnGet">
            <summary>Establecer el shim de MemberAccessString.get_PocoColumn()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberAccessString.PocoColumnSetPocoColumn">
            <summary>Establecer el shim de MemberAccessString.set_PocoColumn(PocoColumn value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberAccessString.PocoColumnsGet">
            <summary>Establecer el shim de MemberAccessString.get_PocoColumns()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberAccessString.PocoColumnsSetPocoColumnArray">
            <summary>Establecer el shim de MemberAccessString.set_PocoColumns(PocoColumn[] value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberAccessString.TypeGet">
            <summary>Establecer el shim de MemberAccessString.get_Type()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberAccessString.TypeSetType">
            <summary>Establecer el shim de MemberAccessString.set_Type(Type value)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimMemberChainHelper">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.MemberChainHelper</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimMemberChainHelper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimMemberChainHelper.#ctor(NPoco.Expressions.MemberChainHelper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimMemberChainHelper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimMemberChainHelper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimMemberChainHelper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberChainHelper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberChainHelper.Constructor">
            <summary>Establecer el shim de MemberChainHelper.MemberChainHelper()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberChainHelper.GetMemberExpressionExpression">
            <summary>Establecer el shim de MemberChainHelper.GetMemberExpression(Expression method)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMemberChainHelper.GetMembersExpression">
            <summary>Establecer el shim de MemberChainHelper.GetMembers(Expression expression)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimMySqlSqlExpression`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.MySqlSqlExpression`1</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimMySqlSqlExpression`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimMySqlSqlExpression`1.#ctor(NPoco.Expressions.MySqlSqlExpression{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimMySqlSqlExpression`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMySqlSqlExpression`1.AllInstances.EscapeParamObject">
            <summary>Establecer el shim de MySqlSqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMySqlSqlExpression`1.AllInstances.GetDateTimeSqlStringObject">
            <summary>Establecer el shim de MySqlSqlExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimMySqlSqlExpression`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimMySqlSqlExpression`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMySqlSqlExpression`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimMySqlSqlExpression`1.Bind(NPoco.Expressions.ISqlExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMySqlSqlExpression`1.ConstructorIDatabasePocoData">
            <summary>Establecer el shim de MySqlSqlExpression`1.MySqlSqlExpression`1(IDatabase database, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMySqlSqlExpression`1.ConstructorIDatabasePocoDataBoolean">
            <summary>Establecer el shim de MySqlSqlExpression`1.MySqlSqlExpression`1(IDatabase database, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMySqlSqlExpression`1.EscapeParamObject">
            <summary>Establecer el shim de MySqlSqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimMySqlSqlExpression`1.GetDateTimeSqlStringObject">
            <summary>Establecer el shim de MySqlSqlExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimNullableMemberAccess">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.NullableMemberAccess</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimNullableMemberAccess.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimNullableMemberAccess.#ctor(NPoco.Expressions.NullableMemberAccess)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimNullableMemberAccess.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimNullableMemberAccess.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimNullableMemberAccess.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimNullableMemberAccess.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimNullableMemberAccess.ConstructorPocoColumnPocoColumnArrayStringType">
            <summary>Establecer el shim de NullableMemberAccess.NullableMemberAccess(PocoColumn pocoColumn, PocoColumn[] pocoColumns, String text, Type type)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimOracleExpression`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.OracleExpression`1</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimOracleExpression`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimOracleExpression`1.#ctor(NPoco.Expressions.OracleExpression{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimOracleExpression`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOracleExpression`1.AllInstances.GetDateTimeSqlStringObject">
            <summary>Establecer el shim de OracleExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimOracleExpression`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimOracleExpression`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOracleExpression`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimOracleExpression`1.Bind(NPoco.Expressions.ISqlExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOracleExpression`1.ConstructorIDatabasePocoDataBoolean">
            <summary>Establecer el shim de OracleExpression`1.OracleExpression`1(IDatabase database, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOracleExpression`1.GetDateTimeSqlStringObject">
            <summary>Establecer el shim de OracleExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimOrderByMember">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.OrderByMember</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimOrderByMember.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimOrderByMember.#ctor(NPoco.Expressions.OrderByMember)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimOrderByMember.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.AllInstances.AscDescGet">
            <summary>Establecer el shim de OrderByMember.get_AscDesc()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.AllInstances.AscDescSetString">
            <summary>Establecer el shim de OrderByMember.set_AscDesc(String value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.AllInstances.EntityTypeGet">
            <summary>Establecer el shim de OrderByMember.get_EntityType()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.AllInstances.EntityTypeSetType">
            <summary>Establecer el shim de OrderByMember.set_EntityType(Type value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.AllInstances.PocoColumnGet">
            <summary>Establecer el shim de OrderByMember.get_PocoColumn()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.AllInstances.PocoColumnSetPocoColumn">
            <summary>Establecer el shim de OrderByMember.set_PocoColumn(PocoColumn value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.AllInstances.PocoColumnsGet">
            <summary>Establecer el shim de OrderByMember.get_PocoColumns()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.AllInstances.PocoColumnsSetPocoColumnArray">
            <summary>Establecer el shim de OrderByMember.set_PocoColumns(PocoColumn[] value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.AscDescGet">
            <summary>Establecer el shim de OrderByMember.get_AscDesc()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.AscDescSetString">
            <summary>Establecer el shim de OrderByMember.set_AscDesc(String value)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimOrderByMember.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimOrderByMember.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.Constructor">
            <summary>Establecer el shim de OrderByMember.OrderByMember()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.EntityTypeGet">
            <summary>Establecer el shim de OrderByMember.get_EntityType()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.EntityTypeSetType">
            <summary>Establecer el shim de OrderByMember.set_EntityType(Type value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.PocoColumnGet">
            <summary>Establecer el shim de OrderByMember.get_PocoColumn()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.PocoColumnSetPocoColumn">
            <summary>Establecer el shim de OrderByMember.set_PocoColumn(PocoColumn value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.PocoColumnsGet">
            <summary>Establecer el shim de OrderByMember.get_PocoColumns()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimOrderByMember.PocoColumnsSetPocoColumnArray">
            <summary>Establecer el shim de OrderByMember.set_PocoColumns(PocoColumn[] value)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimParameterRebinder">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.ParameterRebinder</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimParameterRebinder.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimParameterRebinder.#ctor(NPoco.Expressions.ParameterRebinder)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimParameterRebinder.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimParameterRebinder.AllInstances.VisitParameterParameterExpression">
            <summary>Establecer el shim de ParameterRebinder.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimParameterRebinder.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimParameterRebinder.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimParameterRebinder.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimParameterRebinder.ConstructorDictionaryOfParameterExpressionParameterExpression">
            <summary>Establecer el shim de ParameterRebinder.ParameterRebinder(Dictionary`2&lt;ParameterExpression,ParameterExpression&gt; map)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimParameterRebinder.ReplaceParametersDictionaryOfParameterExpressionParameterExpressionExpression">
            <summary>Establecer el shim de ParameterRebinder.ReplaceParameters(Dictionary`2&lt;ParameterExpression,ParameterExpression&gt; map, Expression exp)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimParameterRebinder.VisitParameterParameterExpression">
            <summary>Establecer el shim de ParameterRebinder.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimPartialSqlString">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.PartialSqlString</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPartialSqlString.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPartialSqlString.#ctor(NPoco.Expressions.PartialSqlString)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimPartialSqlString.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimPartialSqlString.AllInstances.TextGet">
            <summary>Establecer el shim de PartialSqlString.get_Text()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimPartialSqlString.AllInstances.TextSetString">
            <summary>Establecer el shim de PartialSqlString.set_Text(String value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimPartialSqlString.AllInstances.ToString01">
            <summary>Establecer el shim de PartialSqlString.ToString()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPartialSqlString.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPartialSqlString.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimPartialSqlString.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimPartialSqlString.ConstructorString">
            <summary>Establecer el shim de PartialSqlString.PartialSqlString(String text)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimPartialSqlString.TextGet">
            <summary>Establecer el shim de PartialSqlString.get_Text()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimPartialSqlString.TextSetString">
            <summary>Establecer el shim de PartialSqlString.set_Text(String value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimPartialSqlString.ToString">
            <summary>Establecer el shim de PartialSqlString.ToString()</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimPostgreSQLExpression`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.PostgreSQLExpression`1</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPostgreSQLExpression`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPostgreSQLExpression`1.#ctor(NPoco.Expressions.PostgreSQLExpression{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimPostgreSQLExpression`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimPostgreSQLExpression`1.AllInstances.GetDateTimeSqlStringObject">
            <summary>Establecer el shim de PostgreSQLExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPostgreSQLExpression`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPostgreSQLExpression`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimPostgreSQLExpression`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPostgreSQLExpression`1.Bind(NPoco.Expressions.ISqlExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimPostgreSQLExpression`1.ConstructorIDatabasePocoDataBoolean">
            <summary>Establecer el shim de PostgreSQLExpression`1.PostgreSQLExpression`1(IDatabase database, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimPostgreSQLExpression`1.GetDateTimeSqlStringObject">
            <summary>Establecer el shim de PostgreSQLExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimPredicateBuilder">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.PredicateBuilder</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPredicateBuilder.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPredicateBuilder.AndOf1ExpressionOfFuncOfM0BooleanExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}})">
            <summary>Establecer el shim de PredicateBuilder.And(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; first, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; second)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPredicateBuilder.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPredicateBuilder.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimPredicateBuilder.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPredicateBuilder.ComposeOf1ExpressionOfM0ExpressionOfM0FuncOfExpressionExpressionExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression{``0},System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression},System.Linq.Expressions.Expression{``0}})">
            <summary>Establecer el shim de PredicateBuilder.Compose(Expression`1&lt;!!0&gt; first, Expression`1&lt;!!0&gt; second, Func`3&lt;Expression,Expression,Expression&gt; merge)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPredicateBuilder.CreateOf1ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}})">
            <summary>Establecer el shim de PredicateBuilder.Create(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPredicateBuilder.FalseOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}})">
            <summary>Establecer el shim de PredicateBuilder.False()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPredicateBuilder.NotOf1ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}})">
            <summary>Establecer el shim de PredicateBuilder.Not(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; expression)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPredicateBuilder.OrOf1ExpressionOfFuncOfM0BooleanExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}})">
            <summary>Establecer el shim de PredicateBuilder.Or(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; first, Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; second)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimPredicateBuilder.TrueOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}})">
            <summary>Establecer el shim de PredicateBuilder.True()</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimS">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.S</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimS.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimS.AsOf1M0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Object,System.String})">
            <summary>Establecer el shim de S.As(!!0 value, Object asValue)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimS.AvgOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Establecer el shim de S.Avg(!!0 value)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimS.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimS.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimS.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimS.CountOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Establecer el shim de S.Count(!!0 value)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimS.DescOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String})">
            <summary>Establecer el shim de S.Desc(!!0 value)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimS.InOf1M0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Establecer el shim de S.In(!!0 value, IEnumerable`1&lt;!!0&gt; list)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimS.MaxOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Establecer el shim de S.Max(!!0 value)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimS.MinOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Establecer el shim de S.Min(!!0 value)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimS.SumOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Establecer el shim de S.Sum(!!0 value)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimSelectMember">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.SelectMember</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSelectMember.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSelectMember.#ctor(NPoco.Expressions.SelectMember)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimSelectMember.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.AllInstances.EntityTypeGet">
            <summary>Establecer el shim de SelectMember.get_EntityType()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.AllInstances.EntityTypeSetType">
            <summary>Establecer el shim de SelectMember.set_EntityType(Type value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.AllInstances.EqualsObject">
            <summary>Establecer el shim de SelectMember.Equals(Object obj)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.AllInstances.EqualsSelectMember">
            <summary>Establecer el shim de SelectMember.Equals(SelectMember other)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.AllInstances.GetHashCode01">
            <summary>Establecer el shim de SelectMember.GetHashCode()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.AllInstances.PocoColumnGet">
            <summary>Establecer el shim de SelectMember.get_PocoColumn()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.AllInstances.PocoColumnSetPocoColumn">
            <summary>Establecer el shim de SelectMember.set_PocoColumn(PocoColumn value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.AllInstances.PocoColumnsGet">
            <summary>Establecer el shim de SelectMember.get_PocoColumns()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.AllInstances.PocoColumnsSetPocoColumnArray">
            <summary>Establecer el shim de SelectMember.set_PocoColumns(PocoColumn[] value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.AllInstances.SelectSqlGet">
            <summary>Establecer el shim de SelectMember.get_SelectSql()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.AllInstances.SelectSqlSetString">
            <summary>Establecer el shim de SelectMember.set_SelectSql(String value)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSelectMember.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSelectMember.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSelectMember.Bind(System.IEquatable{NPoco.Expressions.SelectMember})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.Constructor">
            <summary>Establecer el shim de SelectMember.SelectMember()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.EntityTypeGet">
            <summary>Establecer el shim de SelectMember.get_EntityType()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.EntityTypeSetType">
            <summary>Establecer el shim de SelectMember.set_EntityType(Type value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.EqualsObject">
            <summary>Establecer el shim de SelectMember.Equals(Object obj)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.EqualsSelectMember">
            <summary>Establecer el shim de SelectMember.Equals(SelectMember other)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.GetHashCode">
            <summary>Establecer el shim de SelectMember.GetHashCode()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.PocoColumnGet">
            <summary>Establecer el shim de SelectMember.get_PocoColumn()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.PocoColumnSetPocoColumn">
            <summary>Establecer el shim de SelectMember.set_PocoColumn(PocoColumn value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.PocoColumnsGet">
            <summary>Establecer el shim de SelectMember.get_PocoColumns()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.PocoColumnsSetPocoColumnArray">
            <summary>Establecer el shim de SelectMember.set_PocoColumns(PocoColumn[] value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.SelectSqlGet">
            <summary>Establecer el shim de SelectMember.get_SelectSql()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSelectMember.SelectSqlSetString">
            <summary>Establecer el shim de SelectMember.set_SelectSql(String value)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimSqlExpression`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.SqlExpression`1</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.#ctor(NPoco.Expressions.SqlExpression{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.AndExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de SqlExpression`1.And(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.ApplyPagingStringIEnumerableOfPocoColumnArrayDictionaryOfStringJoinData">
            <summary>Establecer el shim de SqlExpression`1.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.BindOperantExpressionType">
            <summary>Establecer el shim de SqlExpression`1.BindOperant(ExpressionType e)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.BuildInStatementExpressionObject">
            <summary>Establecer el shim de SqlExpression`1.BuildInStatement(Expression m, Object quotedColName)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.BuildOrderByClauseInternal">
            <summary>Establecer el shim de SqlExpression`1.BuildOrderByClauseInternal()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.BuildSelectExpressionListOfSelectMemberBoolean">
            <summary>Establecer el shim de SqlExpression`1.BuildSelectExpression(List`1&lt;SelectMember&gt; fields, Boolean distinct)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.CanBeEvaluatedLocallyExpression">
            <summary>Establecer el shim de SqlExpression`1.CanBeEvaluatedLocally(Expression expression)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.ContextGet">
            <summary>Establecer el shim de SqlExpression`1.get_Context()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.ContextSetSqlExpressionSqlExpressionContextOfT0">
            <summary>Establecer el shim de SqlExpression`1.set_Context(SqlExpressionContext&lt;!0&gt; value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.CreateLikeStatementPartialSqlStringString">
            <summary>Establecer el shim de SqlExpression`1.CreateLikeStatement(PartialSqlString expression, String param)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.CreateParamObject">
            <summary>Establecer el shim de SqlExpression`1.CreateParam(Object value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.CreateTrimStatementPartialSqlStringBooleanBoolean">
            <summary>Establecer el shim de SqlExpression`1.CreateTrimStatement(PartialSqlString expression, Boolean start, Boolean end)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.EscapeParamObject">
            <summary>Establecer el shim de SqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.FlattenListListOfObjectObject">
            <summary>Establecer el shim de SqlExpression`1.FlattenList(List`1&lt;Object&gt; inArgs, Object partialSqlString)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.GeneralMembersNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_GeneralMembers()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.GetAllMembers">
            <summary>Establecer el shim de SqlExpression`1.GetAllMembers()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.GetCorrectTypeMemberExpression">
            <summary>Establecer el shim de SqlExpression`1.GetCorrectType(MemberExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.GetDateTimeSqlStringObject">
            <summary>Establecer el shim de SqlExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.GetFalseExpression">
            <summary>Establecer el shim de SqlExpression`1.GetFalseExpression()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.GetQuotedColumnNameString">
            <summary>Establecer el shim de SqlExpression`1.GetQuotedColumnName(String memberName)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.GetQuotedFalseValue">
            <summary>Establecer el shim de SqlExpression`1.GetQuotedFalseValue()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.GetQuotedTrueValue">
            <summary>Establecer el shim de SqlExpression`1.GetQuotedTrueValue()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.GetSelectExpressionBoolean">
            <summary>Establecer el shim de SqlExpression`1.GetSelectExpression(Boolean distinct)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.GetTrueExpression">
            <summary>Establecer el shim de SqlExpression`1.GetTrueExpression()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.GroupByExpressionGet">
            <summary>Establecer el shim de SqlExpression`1.get_GroupByExpression()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.GroupByExpressionSetString">
            <summary>Establecer el shim de SqlExpression`1.set_GroupByExpression(String value)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.GroupByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Expressions.SqlExpression{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer el shim de SqlExpression`1.GroupBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.HavingExpressionGet">
            <summary>Establecer el shim de SqlExpression`1.get_HavingExpression()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.HavingExpressionSetString">
            <summary>Establecer el shim de SqlExpression`1.set_HavingExpression(String value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.IsColumnAccessMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.IsColumnAccess(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.IsEnumerableMethodMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.IsEnumerableMethod(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.IsStaticArrayMethodMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.IsStaticArrayMethod(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.LimitExpressionGet">
            <summary>Establecer el shim de SqlExpression`1.get_LimitExpression()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.LimitInt32">
            <summary>Establecer el shim de SqlExpression`1.Limit(Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.LimitInt32Int32">
            <summary>Establecer el shim de SqlExpression`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.ModelDefGet">
            <summary>Establecer el shim de SqlExpression`1.get_ModelDef()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.ModelDefSetPocoData">
            <summary>Establecer el shim de SqlExpression`1.set_ModelDef(PocoData value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.NPocoExpressionsISqlExpressionApplyPagingStringIEnumerableOfPocoColumnArrayDictionaryOfStringJoinData">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.OnOf1ExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Expressions.SqlExpression{`0},System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}},System.String})">
            <summary>Establecer el shim de SqlExpression`1.On(Expression`1&lt;Func`3&lt;!0,!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.OrderByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Expressions.SqlExpression{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer el shim de SqlExpression`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.OrderByExpressionGet">
            <summary>Establecer el shim de SqlExpression`1.get_OrderByExpression()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.OrderByExpressionSetString">
            <summary>Establecer el shim de SqlExpression`1.set_OrderByExpression(String value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.OrderByMembersNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_OrderByMembers()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.OrderByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Expressions.SqlExpression{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer el shim de SqlExpression`1.OrderBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.ParamsNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_Params()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.PrefixFieldWithTableNameGet">
            <summary>Establecer el shim de SqlExpression`1.get_PrefixFieldWithTableName()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.PrefixFieldWithTableNameSetBoolean">
            <summary>Establecer el shim de SqlExpression`1.set_PrefixFieldWithTableName(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.ProcessInternalExpressionExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de SqlExpression`1.ProcessInternalExpression(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.ProcessMethodSearchRecursivelyExpressionBooleanRef">
            <summary>Establecer el shim de SqlExpression`1.ProcessMethodSearchRecursively(Expression args, Boolean&amp; found)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.RemoveQuoteFromAliasString">
            <summary>Establecer el shim de SqlExpression`1.RemoveQuoteFromAlias(String exp)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.RowsGet">
            <summary>Establecer el shim de SqlExpression`1.get_Rows()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.RowsNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_Rows()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.RowsSetNullableOfInt32">
            <summary>Establecer el shim de SqlExpression`1.set_Rows(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.SelectDistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Expressions.SqlExpression{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer el shim de SqlExpression`1.SelectDistinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.SelectMembersNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_SelectMembers()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.SelectOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Expressions.SqlExpression{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer el shim de SqlExpression`1.Select(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.SelectProjectionOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Expressions.SqlExpression{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer el shim de SqlExpression`1.SelectProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.SkipGet">
            <summary>Establecer el shim de SqlExpression`1.get_Skip()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.SkipNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_Skip()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.SkipSetNullableOfInt32">
            <summary>Establecer el shim de SqlExpression`1.set_Skip(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.SubstringStatementPartialSqlStringInt32Int32">
            <summary>Establecer el shim de SqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.ThenByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Expressions.SqlExpression{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer el shim de SqlExpression`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.ThenByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Expressions.SqlExpression{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer el shim de SqlExpression`1.ThenBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.ToDeleteStatement">
            <summary>Establecer el shim de SqlExpression`1.ToDeleteStatement()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.ToSelectStatementBooleanBoolean">
            <summary>Establecer el shim de SqlExpression`1.ToSelectStatement(Boolean applyPaging, Boolean isDistinct)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.ToUpdateStatementT0">
            <summary>Establecer el shim de SqlExpression`1.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.ToUpdateStatementT0Boolean">
            <summary>Establecer el shim de SqlExpression`1.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.ToWhereStatement">
            <summary>Establecer el shim de SqlExpression`1.ToWhereStatement()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.TypeNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_Type()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.UpdateOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Expressions.SqlExpression{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer el shim de SqlExpression`1.Update(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitBinaryBinaryExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitBindingListReadOnlyCollectionOfMemberBinding">
            <summary>Establecer el shim de SqlExpression`1.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitBindingMemberBinding">
            <summary>Establecer el shim de SqlExpression`1.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitColumnAccessMethodMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitColumnAccessMethod(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitConditionalConditionalExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitConditional(ConditionalExpression conditional)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitConstantConstantExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitConstantListReadOnlyCollectionOfExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitConstantList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitEnumerableMethodCallMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitEnumerableMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitExpression">
            <summary>Establecer el shim de SqlExpression`1.Visit(Expression exp)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitExpressionListReadOnlyCollectionOfExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitInnerMethodCallMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitInnerMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitLambdaLambdaExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitMemberAccessMemberExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitMemberAssignmentMemberAssignment">
            <summary>Establecer el shim de SqlExpression`1.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitMemberInitMemberInitExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Establecer el shim de SqlExpression`1.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitMethodCallMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitNewArrayFromExpressionListNewArrayExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitNewArrayFromExpressionList(NewArrayExpression na)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitNewArrayNewArrayExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitNewNewExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitParameterParameterExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitSqlMethodCallMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitSqlMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitStaticArrayMethodCallMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitStaticArrayMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.VisitUnaryUnaryExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.WhereExpressionGet">
            <summary>Establecer el shim de SqlExpression`1.get_WhereExpression()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de SqlExpression`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.WhereExpressionSetString">
            <summary>Establecer el shim de SqlExpression`1.set_WhereExpression(String value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.WhereSqlNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_WhereSql()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.WhereStringObjectArray">
            <summary>Establecer el shim de SqlExpression`1.Where(String sqlFilter, Object[] filterParams)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances._ApplyPagingb__141_1PocoColumnArray">
            <summary>Establecer el shim de SqlExpression`1.&lt;ApplyPaging&gt;b__141_1(PocoColumn[] x)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances._BuildOrderByClauseInternalb__57_0OrderByMember">
            <summary>Establecer el shim de SqlExpression`1.&lt;BuildOrderByClauseInternal&gt;b__57_0(OrderByMember x)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances._BuildSelectExpressionb__139_0KeyValuePairOfStringPocoColumn">
            <summary>Establecer el shim de SqlExpression`1.&lt;BuildSelectExpression&gt;b__139_0(KeyValuePair`2&lt;String,PocoColumn&gt; x)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances._BuildSelectExpressionb__139_1SelectMember">
            <summary>Establecer el shim de SqlExpression`1.&lt;BuildSelectExpression&gt;b__139_1(SelectMember x)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances._GetSelectExpressionb__66_1SelectMember">
            <summary>Establecer el shim de SqlExpression`1.&lt;GetSelectExpression&gt;b__66_1(SelectMember x)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances._ProcessMethodSearchRecursivelyb__121_0KeyValuePairOfStringPocoColumn">
            <summary>Establecer el shim de SqlExpression`1.&lt;ProcessMethodSearchRecursively&gt;b__121_0(KeyValuePair`2&lt;String,PocoColumn&gt; x)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances._ToUpdateStatementb__63_0PocoColumnObject">
            <summary>Establecer el shim de SqlExpression`1.&lt;ToUpdateStatement&gt;b__63_0(PocoColumn pocoColumn, Object val)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances._typeGet">
            <summary>Establecer el shim de SqlExpression`1.get__type()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances._typeSetType">
            <summary>Establecer el shim de SqlExpression`1.set__type(Type value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AllInstances.appendSqlFilterString">
            <summary>Establecer el shim de SqlExpression`1.appendSqlFilter(String sqlFilter)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.AndExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de SqlExpression`1.And(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ApplyPagingStringIEnumerableOfPocoColumnArrayDictionaryOfStringJoinData">
            <summary>Establecer el shim de SqlExpression`1.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.Bind(NPoco.Expressions.ISqlExpression)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.BindOperantExpressionType">
            <summary>Establecer el shim de SqlExpression`1.BindOperant(ExpressionType e)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.BuildInStatementExpressionObject">
            <summary>Establecer el shim de SqlExpression`1.BuildInStatement(Expression m, Object quotedColName)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.BuildOrderByClauseInternal">
            <summary>Establecer el shim de SqlExpression`1.BuildOrderByClauseInternal()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.BuildSelectExpressionListOfSelectMemberBoolean">
            <summary>Establecer el shim de SqlExpression`1.BuildSelectExpression(List`1&lt;SelectMember&gt; fields, Boolean distinct)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.CanBeEvaluatedLocallyExpression">
            <summary>Establecer el shim de SqlExpression`1.CanBeEvaluatedLocally(Expression expression)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ConstructorIDatabasePocoDataBoolean">
            <summary>Establecer el shim de SqlExpression`1.SqlExpression`1(IDatabase database, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ContextGet">
            <summary>Establecer el shim de SqlExpression`1.get_Context()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ContextSetSqlExpressionSqlExpressionContextOfT0">
            <summary>Establecer el shim de SqlExpression`1.set_Context(SqlExpressionContext&lt;!0&gt; value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.CreateLikeStatementPartialSqlStringString">
            <summary>Establecer el shim de SqlExpression`1.CreateLikeStatement(PartialSqlString expression, String param)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.CreateParamObject">
            <summary>Establecer el shim de SqlExpression`1.CreateParam(Object value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.CreateTrimStatementPartialSqlStringBooleanBoolean">
            <summary>Establecer el shim de SqlExpression`1.CreateTrimStatement(PartialSqlString expression, Boolean start, Boolean end)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.EscapeParamObject">
            <summary>Establecer el shim de SqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.FixExpressionForVbBinaryExpression">
            <summary>Establecer el shim de SqlExpression`1.FixExpressionForVb(BinaryExpression b)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.FlattenListListOfObjectObject">
            <summary>Establecer el shim de SqlExpression`1.FlattenList(List`1&lt;Object&gt; inArgs, Object partialSqlString)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.FormatParametersObjectObject">
            <summary>Establecer el shim de SqlExpression`1.FormatParameters(Object partialSqlString, Object e)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.GeneralMembersNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_GeneralMembers()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.GetAllMembers">
            <summary>Establecer el shim de SqlExpression`1.GetAllMembers()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.GetCorrectTypeMemberExpression">
            <summary>Establecer el shim de SqlExpression`1.GetCorrectType(MemberExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.GetDateTimeSqlStringObject">
            <summary>Establecer el shim de SqlExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.GetFalseExpression">
            <summary>Establecer el shim de SqlExpression`1.GetFalseExpression()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.GetMemberInfoTypeForEnumPocoColumn">
            <summary>Establecer el shim de SqlExpression`1.GetMemberInfoTypeForEnum(PocoColumn pc)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.GetQuotedColumnNameString">
            <summary>Establecer el shim de SqlExpression`1.GetQuotedColumnName(String memberName)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.GetQuotedFalseValue">
            <summary>Establecer el shim de SqlExpression`1.GetQuotedFalseValue()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.GetQuotedTrueValue">
            <summary>Establecer el shim de SqlExpression`1.GetQuotedTrueValue()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.GetSelectExpressionBoolean">
            <summary>Establecer el shim de SqlExpression`1.GetSelectExpression(Boolean distinct)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.GetTrueExpression">
            <summary>Establecer el shim de SqlExpression`1.GetTrueExpression()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.GroupByExpressionGet">
            <summary>Establecer el shim de SqlExpression`1.get_GroupByExpression()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.GroupByExpressionSetString">
            <summary>Establecer el shim de SqlExpression`1.set_GroupByExpression(String value)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.GroupByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer el shim de SqlExpression`1.GroupBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.HavingExpressionGet">
            <summary>Establecer el shim de SqlExpression`1.get_HavingExpression()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.HavingExpressionSetString">
            <summary>Establecer el shim de SqlExpression`1.set_HavingExpression(String value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.IsColumnAccessMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.IsColumnAccess(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.IsEnumerableMethodMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.IsEnumerableMethod(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.IsNullableMemberMemberExpression">
            <summary>Establecer el shim de SqlExpression`1.IsNullableMember(MemberExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.IsStaticArrayMethodMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.IsStaticArrayMethod(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.LimitExpressionGet">
            <summary>Establecer el shim de SqlExpression`1.get_LimitExpression()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.LimitInt32">
            <summary>Establecer el shim de SqlExpression`1.Limit(Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.LimitInt32Int32">
            <summary>Establecer el shim de SqlExpression`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ModelDefGet">
            <summary>Establecer el shim de SqlExpression`1.get_ModelDef()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ModelDefSetPocoData">
            <summary>Establecer el shim de SqlExpression`1.set_ModelDef(PocoData value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.NPocoExpressionsISqlExpressionApplyPagingStringIEnumerableOfPocoColumnArrayDictionaryOfStringJoinData">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.OnOf1ExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0,System.Boolean}},System.String})">
            <summary>Establecer el shim de SqlExpression`1.On(Expression`1&lt;Func`3&lt;!0,!!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.OrderByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer el shim de SqlExpression`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.OrderByExpressionGet">
            <summary>Establecer el shim de SqlExpression`1.get_OrderByExpression()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.OrderByExpressionSetString">
            <summary>Establecer el shim de SqlExpression`1.set_OrderByExpression(String value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.OrderByMembersNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_OrderByMembers()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.OrderByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer el shim de SqlExpression`1.OrderBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ParamsNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_Params()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.PrefixFieldWithTableNameGet">
            <summary>Establecer el shim de SqlExpression`1.get_PrefixFieldWithTableName()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.PrefixFieldWithTableNameSetBoolean">
            <summary>Establecer el shim de SqlExpression`1.set_PrefixFieldWithTableName(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ProcessInternalExpressionExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de SqlExpression`1.ProcessInternalExpression(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ProcessMethodSearchRecursivelyExpressionBooleanRef">
            <summary>Establecer el shim de SqlExpression`1.ProcessMethodSearchRecursively(Expression args, Boolean&amp; found)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.RemoveQuoteFromAliasString">
            <summary>Establecer el shim de SqlExpression`1.RemoveQuoteFromAlias(String exp)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.RowsGet">
            <summary>Establecer el shim de SqlExpression`1.get_Rows()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.RowsNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_Rows()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.RowsSetNullableOfInt32">
            <summary>Establecer el shim de SqlExpression`1.set_Rows(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.SelectDistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer el shim de SqlExpression`1.SelectDistinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.SelectMembersNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_SelectMembers()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.SelectOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer el shim de SqlExpression`1.Select(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.SelectProjectionOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer el shim de SqlExpression`1.SelectProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Expressions.SqlExpression`1+SqlExpressionContext</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.#ctor(NPoco.Expressions.SqlExpression{`0}.SqlExpressionContext)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.AllInstances.ParamsGet">
            <summary>Establecer el shim de SqlExpressionContext.get_Params()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.AllInstances.ToDeleteStatement">
            <summary>Establecer el shim de SqlExpressionContext.ToDeleteStatement()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.AllInstances.ToSelectStatement">
            <summary>Establecer el shim de SqlExpressionContext.ToSelectStatement()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.AllInstances.ToSelectStatementBooleanBoolean">
            <summary>Establecer el shim de SqlExpressionContext.ToSelectStatement(Boolean applyPaging, Boolean distinct)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.AllInstances.ToUpdateStatementT0">
            <summary>Establecer el shim de SqlExpressionContext.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.AllInstances.ToUpdateStatementT0Boolean">
            <summary>Establecer el shim de SqlExpressionContext.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.AllInstances.ToUpdateStatementT0BooleanBoolean">
            <summary>Establecer el shim de SqlExpressionContext.ToUpdateStatement(!0 item, Boolean excludeDefaults, Boolean allFields)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.AllInstances.ToWhereStatement">
            <summary>Establecer el shim de SqlExpressionContext.ToWhereStatement()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.AllInstances.UpdateFieldsGet">
            <summary>Establecer el shim de SqlExpressionContext.get_UpdateFields()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.AllInstances.UpdateFieldsSetListOfString">
            <summary>Establecer el shim de SqlExpressionContext.set_UpdateFields(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.ConstructorSqlExpressionOfT0">
            <summary>Establecer el shim de SqlExpressionContext.SqlExpressionContext(SqlExpression`1&lt;!0&gt; expression)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.ParamsGet">
            <summary>Establecer el shim de SqlExpressionContext.get_Params()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.ToDeleteStatement">
            <summary>Establecer el shim de SqlExpressionContext.ToDeleteStatement()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.ToSelectStatement">
            <summary>Establecer el shim de SqlExpressionContext.ToSelectStatement()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.ToSelectStatementBooleanBoolean">
            <summary>Establecer el shim de SqlExpressionContext.ToSelectStatement(Boolean applyPaging, Boolean distinct)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.ToUpdateStatementT0">
            <summary>Establecer el shim de SqlExpressionContext.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.ToUpdateStatementT0Boolean">
            <summary>Establecer el shim de SqlExpressionContext.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.ToUpdateStatementT0BooleanBoolean">
            <summary>Establecer el shim de SqlExpressionContext.ToUpdateStatement(!0 item, Boolean excludeDefaults, Boolean allFields)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.ToWhereStatement">
            <summary>Establecer el shim de SqlExpressionContext.ToWhereStatement()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.UpdateFieldsGet">
            <summary>Establecer el shim de SqlExpressionContext.get_UpdateFields()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ShimSqlExpressionContext.UpdateFieldsSetListOfString">
            <summary>Establecer el shim de SqlExpressionContext.set_UpdateFields(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.SkipGet">
            <summary>Establecer el shim de SqlExpression`1.get_Skip()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.SkipNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_Skip()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.SkipSetNullableOfInt32">
            <summary>Establecer el shim de SqlExpression`1.set_Skip(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.SubstringStatementPartialSqlStringInt32Int32">
            <summary>Establecer el shim de SqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.ThenByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer el shim de SqlExpression`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.ThenByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer el shim de SqlExpression`1.ThenBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ToDeleteStatement">
            <summary>Establecer el shim de SqlExpression`1.ToDeleteStatement()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ToSelectStatementBooleanBoolean">
            <summary>Establecer el shim de SqlExpression`1.ToSelectStatement(Boolean applyPaging, Boolean isDistinct)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ToUpdateStatementT0">
            <summary>Establecer el shim de SqlExpression`1.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ToUpdateStatementT0Boolean">
            <summary>Establecer el shim de SqlExpression`1.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.ToWhereStatement">
            <summary>Establecer el shim de SqlExpression`1.ToWhereStatement()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.TypeNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_Type()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.ShimSqlExpression`1.UpdateOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer el shim de SqlExpression`1.Update(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitBinaryBinaryExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitBindingListReadOnlyCollectionOfMemberBinding">
            <summary>Establecer el shim de SqlExpression`1.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitBindingMemberBinding">
            <summary>Establecer el shim de SqlExpression`1.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitColumnAccessMethodMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitColumnAccessMethod(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitConditionalConditionalExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitConditional(ConditionalExpression conditional)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitConstantConstantExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitConstantListReadOnlyCollectionOfExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitConstantList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitEnumerableMethodCallMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitEnumerableMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitExpression">
            <summary>Establecer el shim de SqlExpression`1.Visit(Expression exp)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitExpressionListReadOnlyCollectionOfExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitInnerMethodCallMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitInnerMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitLambdaLambdaExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitMemberAccessMemberExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitMemberAssignmentMemberAssignment">
            <summary>Establecer el shim de SqlExpression`1.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitMemberInitMemberInitExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Establecer el shim de SqlExpression`1.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitMethodCallMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitNewArrayFromExpressionListNewArrayExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitNewArrayFromExpressionList(NewArrayExpression na)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitNewArrayNewArrayExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitNewNewExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitParameterParameterExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitSqlMethodCallMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitSqlMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitStaticArrayMethodCallMethodCallExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitStaticArrayMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.VisitUnaryUnaryExpression">
            <summary>Establecer el shim de SqlExpression`1.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.WhereExpressionGet">
            <summary>Establecer el shim de SqlExpression`1.get_WhereExpression()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de SqlExpression`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.WhereExpressionSetString">
            <summary>Establecer el shim de SqlExpression`1.set_WhereExpression(String value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.WhereSqlNPocoExpressionsISqlExpressionget">
            <summary>Establecer el shim de SqlExpression`1.NPoco.Expressions.ISqlExpression.get_WhereSql()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.WhereStringObjectArray">
            <summary>Establecer el shim de SqlExpression`1.Where(String sqlFilter, Object[] filterParams)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1._ApplyPagingb__141_1PocoColumnArray">
            <summary>Establecer el shim de SqlExpression`1.&lt;ApplyPaging&gt;b__141_1(PocoColumn[] x)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1._BuildOrderByClauseInternalb__57_0OrderByMember">
            <summary>Establecer el shim de SqlExpression`1.&lt;BuildOrderByClauseInternal&gt;b__57_0(OrderByMember x)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1._BuildSelectExpressionb__139_0KeyValuePairOfStringPocoColumn">
            <summary>Establecer el shim de SqlExpression`1.&lt;BuildSelectExpression&gt;b__139_0(KeyValuePair`2&lt;String,PocoColumn&gt; x)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1._BuildSelectExpressionb__139_1SelectMember">
            <summary>Establecer el shim de SqlExpression`1.&lt;BuildSelectExpression&gt;b__139_1(SelectMember x)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1._GetSelectExpressionb__66_1SelectMember">
            <summary>Establecer el shim de SqlExpression`1.&lt;GetSelectExpression&gt;b__66_1(SelectMember x)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1._ProcessMethodSearchRecursivelyb__121_0KeyValuePairOfStringPocoColumn">
            <summary>Establecer el shim de SqlExpression`1.&lt;ProcessMethodSearchRecursively&gt;b__121_0(KeyValuePair`2&lt;String,PocoColumn&gt; x)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1._ToUpdateStatementb__63_0PocoColumnObject">
            <summary>Establecer el shim de SqlExpression`1.&lt;ToUpdateStatement&gt;b__63_0(PocoColumn pocoColumn, Object val)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1._typeGet">
            <summary>Establecer el shim de SqlExpression`1.get__type()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1._typeSetType">
            <summary>Establecer el shim de SqlExpression`1.set__type(Type value)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.ShimSqlExpression`1.appendSqlFilterString">
            <summary>Establecer el shim de SqlExpression`1.appendSqlFilter(String sqlFilter)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1">
            <summary>Tipo stub de NPoco.Expressions.DefaultSqlExpression`1</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.#ctor(NPoco.IDatabase)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.#ctor(NPoco.IDatabase,NPoco.PocoData)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.#ctor(NPoco.IDatabase,System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.#ctor(NPoco.IDatabase,NPoco.PocoData,System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.And(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de SqlExpression`1.And(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.AndExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.And(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.ApplyPaging(System.String,System.Collections.Generic.IEnumerable{NPoco.PocoColumn[]},System.Collections.Generic.Dictionary{System.String,NPoco.Linq.JoinData})">
            <summary>Establecer el stub de SqlExpression`1.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.ApplyPagingStringIEnumerableOfPocoColumnArrayDictionaryOfStringJoinData">
            <summary>Establecer el stub de SqlExpression`1.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.BindOperant(System.Linq.Expressions.ExpressionType)">
            <summary>Establecer el stub de SqlExpression`1.BindOperant(ExpressionType e)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.BindOperantExpressionType">
            <summary>Establecer el stub de SqlExpression`1.BindOperant(ExpressionType e)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.CreateLikeStatement(NPoco.Expressions.PartialSqlString,System.String)">
            <summary>Establecer el stub de SqlExpression`1.CreateLikeStatement(PartialSqlString expression, String param)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.CreateLikeStatementPartialSqlStringString">
            <summary>Establecer el stub de SqlExpression`1.CreateLikeStatement(PartialSqlString expression, String param)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.CreateTrimStatement(NPoco.Expressions.PartialSqlString,System.Boolean,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.CreateTrimStatement(PartialSqlString expression, Boolean start, Boolean end)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.CreateTrimStatementPartialSqlStringBooleanBoolean">
            <summary>Establecer el stub de SqlExpression`1.CreateTrimStatement(PartialSqlString expression, Boolean start, Boolean end)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.EscapeParam(System.Object)">
            <summary>Establecer el stub de SqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.EscapeParamObject">
            <summary>Establecer el stub de SqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.GetDateTimeSql(System.String,System.Object)">
            <summary>Establecer el stub de SqlExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.GetDateTimeSqlStringObject">
            <summary>Establecer el stub de SqlExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.GetQuotedColumnName(System.String)">
            <summary>Establecer el stub de SqlExpression`1.GetQuotedColumnName(String memberName)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.GetQuotedColumnNameString">
            <summary>Establecer el stub de SqlExpression`1.GetQuotedColumnName(String memberName)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.GroupBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.GroupBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.GroupByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de GroupBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDefaultSqlExpression</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.Limit(System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.Limit(System.Int32,System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.LimitExpression">
            <summary>Establecer el stub de SqlExpression`1.get_LimitExpression()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.LimitExpressionGet">
            <summary>Establecer el stub de SqlExpression`1.get_LimitExpression()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.LimitInt32">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 rows)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.LimitInt32Int32">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.OrderBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.OrderByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de OrderByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.OrderByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de OrderBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.Select``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.Select(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.SelectDistinct``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.SelectDistinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.SelectDistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer stubs de SelectDistinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.SelectOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de Select(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.SelectProjection``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.SelectProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.SelectProjectionOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer stubs de SelectProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.SubstringStatement(NPoco.Expressions.PartialSqlString,System.Int32,System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.SubstringStatementPartialSqlStringInt32Int32">
            <summary>Establecer el stub de SqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.ThenBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.ThenBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.ThenByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.ThenByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de ThenByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.ThenByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de ThenBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.ToDeleteStatement">
            <summary>Establecer el stub de SqlExpression`1.ToDeleteStatement()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.ToDeleteStatement01">
            <summary>Establecer el stub de SqlExpression`1.ToDeleteStatement()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.ToSelectStatement(System.Boolean,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.ToSelectStatement(Boolean applyPaging, Boolean isDistinct)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.ToSelectStatementBooleanBoolean">
            <summary>Establecer el stub de SqlExpression`1.ToSelectStatement(Boolean applyPaging, Boolean isDistinct)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.ToUpdateStatement(`0)">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.ToUpdateStatement(`0,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.ToUpdateStatementT0">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.ToUpdateStatementT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.Update``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.Update(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.UpdateOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de Update(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.Visit(System.Linq.Expressions.Expression)">
            <summary>Establecer el stub de SqlExpression`1.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitBinaryBinaryExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitBinding(System.Linq.Expressions.MemberBinding)">
            <summary>Establecer el stub de SqlExpression`1.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>Establecer el stub de SqlExpression`1.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitBindingListReadOnlyCollectionOfMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitBindingMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitColumnAccessMethod(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitColumnAccessMethod(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitColumnAccessMethodMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitColumnAccessMethod(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitConditional(ConditionalExpression conditional)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitConditionalConditionalExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConditional(ConditionalExpression conditional)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitConstantConstantExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitConstantList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>Establecer el stub de SqlExpression`1.VisitConstantList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitConstantListReadOnlyCollectionOfExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConstantList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitEnumerableMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitEnumerableMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitEnumerableMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitEnumerableMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitExpression">
            <summary>Establecer el stub de SqlExpression`1.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitExpressionList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>Establecer el stub de SqlExpression`1.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitExpressionListReadOnlyCollectionOfExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitLambdaLambdaExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitMemberAccessMemberExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitMemberAssignmentMemberAssignment">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitMemberInitMemberInitExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitNewArrayFromExpressionList(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArrayFromExpressionList(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitNewArrayFromExpressionListNewArrayExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArrayFromExpressionList(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitNewArrayNewArrayExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitNewNewExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitParameterParameterExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitSqlMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitSqlMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitSqlMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitSqlMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitStaticArrayMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitStaticArrayMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitStaticArrayMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitStaticArrayMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.VisitUnaryUnaryExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de SqlExpression`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.Where(System.String,System.Object[])">
            <summary>Establecer el stub de SqlExpression`1.Where(String sqlFilter, Object[] filterParams)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubDefaultSqlExpression`1.WhereStringObjectArray">
            <summary>Establecer el stub de SqlExpression`1.Where(String sqlFilter, Object[] filterParams)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubEnumMemberAccess">
            <summary>Tipo stub de NPoco.Expressions.EnumMemberAccess</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubEnumMemberAccess.#ctor(NPoco.PocoColumn,NPoco.PocoColumn[],System.String,System.Type)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubEnumMemberAccess.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubEnumMemberAccess.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubEnumMemberAccess</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubEnumMemberAccess.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubEnumMemberAccess.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubEnumMemberAccess.ToString">
            <summary>Establecer el stub de PartialSqlString.ToString()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubEnumMemberAccess.ToString01">
            <summary>Establecer el stub de PartialSqlString.ToString()</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubExpressionVisitor">
            <summary>Tipo stub de NPoco.Expressions.ExpressionVisitor</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubExpressionVisitor.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubExpressionVisitor</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubExpressionVisitor.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubExpressionVisitor.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>Establecer el stub de ExpressionVisitor.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitBinaryBinaryExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitBinding(System.Linq.Expressions.MemberBinding)">
            <summary>Establecer el stub de ExpressionVisitor.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>Establecer el stub de ExpressionVisitor.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitBindingListReadOnlyCollectionOfMemberBinding">
            <summary>Establecer el stub de ExpressionVisitor.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitBindingMemberBinding">
            <summary>Establecer el stub de ExpressionVisitor.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitConditional(ConditionalExpression c)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitConditionalConditionalExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitConditional(ConditionalExpression c)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitConstantConstantExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitElementInitializer(System.Linq.Expressions.ElementInit)">
            <summary>Establecer el stub de ExpressionVisitor.VisitElementInitializer(ElementInit initializer)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitElementInitializerElementInit">
            <summary>Establecer el stub de ExpressionVisitor.VisitElementInitializer(ElementInit initializer)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitElementInitializerList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
            <summary>Establecer el stub de ExpressionVisitor.VisitElementInitializerList(ReadOnlyCollection`1&lt;ElementInit&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitElementInitializerListReadOnlyCollectionOfElementInit">
            <summary>Establecer el stub de ExpressionVisitor.VisitElementInitializerList(ReadOnlyCollection`1&lt;ElementInit&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitExpression">
            <summary>Establecer el stub de ExpressionVisitor.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitExpressionList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>Establecer el stub de ExpressionVisitor.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitExpressionListReadOnlyCollectionOfExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitInvocation(InvocationExpression iv)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitInvocationInvocationExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitInvocation(InvocationExpression iv)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitLambdaLambdaExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitListInit(ListInitExpression init)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitListInitListInitExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitListInit(ListInitExpression init)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitMemberAccessMemberExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitMemberAssignmentMemberAssignment">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitMemberInitMemberInitExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberListBinding(MemberListBinding binding)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitMemberListBindingMemberListBinding">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberListBinding(MemberListBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitMethodCallMethodCallExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitNewArrayNewArrayExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitNewNewExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitParameterParameterExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitTypeIs(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitTypeIs(TypeBinaryExpression b)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitTypeIsTypeBinaryExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitTypeIs(TypeBinaryExpression b)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubExpressionVisitor.VisitUnaryUnaryExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1">
            <summary>Tipo stub de NPoco.Expressions.FirebirdSqlExpression`1</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.#ctor(NPoco.IDatabase,NPoco.PocoData)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.#ctor(NPoco.IDatabase,NPoco.PocoData,System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.And(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de SqlExpression`1.And(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.AndExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.And(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.ApplyPaging(System.String,System.Collections.Generic.IEnumerable{NPoco.PocoColumn[]},System.Collections.Generic.Dictionary{System.String,NPoco.Linq.JoinData})">
            <summary>Establecer el stub de SqlExpression`1.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.ApplyPagingStringIEnumerableOfPocoColumnArrayDictionaryOfStringJoinData">
            <summary>Establecer el stub de SqlExpression`1.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.BindOperant(System.Linq.Expressions.ExpressionType)">
            <summary>Establecer el stub de SqlExpression`1.BindOperant(ExpressionType e)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.BindOperantExpressionType">
            <summary>Establecer el stub de SqlExpression`1.BindOperant(ExpressionType e)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.CreateLikeStatement(NPoco.Expressions.PartialSqlString,System.String)">
            <summary>Establecer el stub de SqlExpression`1.CreateLikeStatement(PartialSqlString expression, String param)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.CreateLikeStatementPartialSqlStringString">
            <summary>Establecer el stub de SqlExpression`1.CreateLikeStatement(PartialSqlString expression, String param)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.CreateTrimStatement(NPoco.Expressions.PartialSqlString,System.Boolean,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.CreateTrimStatement(PartialSqlString expression, Boolean start, Boolean end)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.CreateTrimStatementPartialSqlStringBooleanBoolean">
            <summary>Establecer el stub de SqlExpression`1.CreateTrimStatement(PartialSqlString expression, Boolean start, Boolean end)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.EscapeParam(System.Object)">
            <summary>Establecer el stub de SqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.EscapeParamObject">
            <summary>Establecer el stub de SqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.GetDateTimeSql(System.String,System.Object)">
            <summary>Establecer el stub de FirebirdSqlExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.GetDateTimeSqlStringObject">
            <summary>Establecer el stub de FirebirdSqlExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.GetQuotedColumnName(System.String)">
            <summary>Establecer el stub de SqlExpression`1.GetQuotedColumnName(String memberName)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.GetQuotedColumnNameString">
            <summary>Establecer el stub de SqlExpression`1.GetQuotedColumnName(String memberName)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.GroupBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.GroupBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.GroupByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de GroupBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubFirebirdSqlExpression</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.Limit(System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.Limit(System.Int32,System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.LimitExpression">
            <summary>Establecer el stub de SqlExpression`1.get_LimitExpression()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.LimitExpressionGet">
            <summary>Establecer el stub de SqlExpression`1.get_LimitExpression()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.LimitInt32">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 rows)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.LimitInt32Int32">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.OrderBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.OrderByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de OrderByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.OrderByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de OrderBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.Select``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.Select(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.SelectDistinct``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.SelectDistinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.SelectDistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer stubs de SelectDistinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.SelectOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de Select(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.SelectProjection``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.SelectProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.SelectProjectionOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer stubs de SelectProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.SubstringStatement(NPoco.Expressions.PartialSqlString,System.Int32,System.Int32)">
            <summary>Establecer el stub de FirebirdSqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.SubstringStatementPartialSqlStringInt32Int32">
            <summary>Establecer el stub de FirebirdSqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.ThenBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.ThenBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.ThenByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.ThenByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de ThenByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.ThenByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de ThenBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.ToDeleteStatement">
            <summary>Establecer el stub de SqlExpression`1.ToDeleteStatement()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.ToDeleteStatement01">
            <summary>Establecer el stub de SqlExpression`1.ToDeleteStatement()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.ToSelectStatement(System.Boolean,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.ToSelectStatement(Boolean applyPaging, Boolean isDistinct)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.ToSelectStatementBooleanBoolean">
            <summary>Establecer el stub de SqlExpression`1.ToSelectStatement(Boolean applyPaging, Boolean isDistinct)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.ToUpdateStatement(`0)">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.ToUpdateStatement(`0,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.ToUpdateStatementT0">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.ToUpdateStatementT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.Update``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.Update(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.UpdateOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de Update(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.Visit(System.Linq.Expressions.Expression)">
            <summary>Establecer el stub de SqlExpression`1.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitBinaryBinaryExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitBinding(System.Linq.Expressions.MemberBinding)">
            <summary>Establecer el stub de SqlExpression`1.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>Establecer el stub de SqlExpression`1.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitBindingListReadOnlyCollectionOfMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitBindingMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitColumnAccessMethod(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitColumnAccessMethod(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitColumnAccessMethodMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitColumnAccessMethod(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitConditional(ConditionalExpression conditional)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitConditionalConditionalExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConditional(ConditionalExpression conditional)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitConstantConstantExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitConstantList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>Establecer el stub de SqlExpression`1.VisitConstantList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitConstantListReadOnlyCollectionOfExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConstantList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitEnumerableMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitEnumerableMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitEnumerableMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitEnumerableMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitExpression">
            <summary>Establecer el stub de SqlExpression`1.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitExpressionList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>Establecer el stub de SqlExpression`1.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitExpressionListReadOnlyCollectionOfExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitLambdaLambdaExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitMemberAccessMemberExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitMemberAssignmentMemberAssignment">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitMemberInitMemberInitExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitNewArrayFromExpressionList(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArrayFromExpressionList(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitNewArrayFromExpressionListNewArrayExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArrayFromExpressionList(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitNewArrayNewArrayExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitNewNewExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitParameterParameterExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitSqlMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitSqlMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitSqlMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitSqlMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitStaticArrayMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitStaticArrayMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitStaticArrayMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitStaticArrayMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.VisitUnaryUnaryExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de SqlExpression`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.Where(System.String,System.Object[])">
            <summary>Establecer el stub de SqlExpression`1.Where(String sqlFilter, Object[] filterParams)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubFirebirdSqlExpression`1.WhereStringObjectArray">
            <summary>Establecer el stub de SqlExpression`1.Where(String sqlFilter, Object[] filterParams)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubGeneralMember">
            <summary>Tipo stub de NPoco.Expressions.GeneralMember</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubGeneralMember.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubGeneralMember.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubGeneralMember.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubGeneralMember</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubGeneralMember.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubGeneralMember.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubISqlExpression">
            <summary>Tipo stub de NPoco.Expressions.ISqlExpression</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubISqlExpression.#ctor">
            <summary>Inicializa una nueva instancia de type StubISqlExpression</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubISqlExpression.ApplyPagingStringIEnumerableOfPocoColumnArrayDictionaryOfStringJoinData">
            <summary>Establecer el stub de ISqlExpression.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubISqlExpression.NPoco#Expressions#ISqlExpression#GeneralMembers">
            <summary>Establecer el stub de ISqlExpression.get_GeneralMembers()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubISqlExpression.GeneralMembersGet">
            <summary>Establecer el stub de ISqlExpression.get_GeneralMembers()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubISqlExpression.NPoco#Expressions#ISqlExpression#ApplyPaging(System.String,System.Collections.Generic.IEnumerable{NPoco.PocoColumn[]},System.Collections.Generic.Dictionary{System.String,NPoco.Linq.JoinData})">
            <summary>Establecer el stub de ISqlExpression.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubISqlExpression.NPoco#Expressions#ISqlExpression#OrderByMembers">
            <summary>Establecer el stub de ISqlExpression.get_OrderByMembers()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubISqlExpression.OrderByMembersGet">
            <summary>Establecer el stub de ISqlExpression.get_OrderByMembers()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubISqlExpression.NPoco#Expressions#ISqlExpression#Params">
            <summary>Establecer el stub de ISqlExpression.get_Params()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubISqlExpression.ParamsGet">
            <summary>Establecer el stub de ISqlExpression.get_Params()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubISqlExpression.NPoco#Expressions#ISqlExpression#Rows">
            <summary>Establecer el stub de ISqlExpression.get_Rows()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubISqlExpression.RowsGet">
            <summary>Establecer el stub de ISqlExpression.get_Rows()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubISqlExpression.NPoco#Expressions#ISqlExpression#SelectMembers">
            <summary>Establecer el stub de ISqlExpression.get_SelectMembers()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubISqlExpression.SelectMembersGet">
            <summary>Establecer el stub de ISqlExpression.get_SelectMembers()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubISqlExpression.NPoco#Expressions#ISqlExpression#Skip">
            <summary>Establecer el stub de ISqlExpression.get_Skip()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubISqlExpression.SkipGet">
            <summary>Establecer el stub de ISqlExpression.get_Skip()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubISqlExpression.NPoco#Expressions#ISqlExpression#Type">
            <summary>Establecer el stub de ISqlExpression.get_Type()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubISqlExpression.TypeGet">
            <summary>Establecer el stub de ISqlExpression.get_Type()</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubISqlExpression.NPoco#Expressions#ISqlExpression#WhereSql">
            <summary>Establecer el stub de ISqlExpression.get_WhereSql()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubISqlExpression.WhereSqlGet">
            <summary>Establecer el stub de ISqlExpression.get_WhereSql()</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubMemberAccessString">
            <summary>Tipo stub de NPoco.Expressions.MemberAccessString</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMemberAccessString.#ctor(NPoco.PocoColumn,NPoco.PocoColumn[],System.String,System.Type)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubMemberAccessString.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMemberAccessString.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMemberAccessString</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubMemberAccessString.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubMemberAccessString.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMemberAccessString.ToString">
            <summary>Establecer el stub de PartialSqlString.ToString()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMemberAccessString.ToString01">
            <summary>Establecer el stub de PartialSqlString.ToString()</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubMemberChainHelper">
            <summary>Tipo stub de NPoco.Expressions.MemberChainHelper</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMemberChainHelper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubMemberChainHelper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMemberChainHelper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMemberChainHelper</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubMemberChainHelper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubMemberChainHelper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1">
            <summary>Tipo stub de NPoco.Expressions.MySqlSqlExpression`1</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.#ctor(NPoco.IDatabase,NPoco.PocoData)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.#ctor(NPoco.IDatabase,NPoco.PocoData,System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.And(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de SqlExpression`1.And(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.AndExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.And(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.ApplyPaging(System.String,System.Collections.Generic.IEnumerable{NPoco.PocoColumn[]},System.Collections.Generic.Dictionary{System.String,NPoco.Linq.JoinData})">
            <summary>Establecer el stub de SqlExpression`1.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.ApplyPagingStringIEnumerableOfPocoColumnArrayDictionaryOfStringJoinData">
            <summary>Establecer el stub de SqlExpression`1.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.BindOperant(System.Linq.Expressions.ExpressionType)">
            <summary>Establecer el stub de SqlExpression`1.BindOperant(ExpressionType e)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.BindOperantExpressionType">
            <summary>Establecer el stub de SqlExpression`1.BindOperant(ExpressionType e)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.CreateLikeStatement(NPoco.Expressions.PartialSqlString,System.String)">
            <summary>Establecer el stub de SqlExpression`1.CreateLikeStatement(PartialSqlString expression, String param)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.CreateLikeStatementPartialSqlStringString">
            <summary>Establecer el stub de SqlExpression`1.CreateLikeStatement(PartialSqlString expression, String param)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.CreateTrimStatement(NPoco.Expressions.PartialSqlString,System.Boolean,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.CreateTrimStatement(PartialSqlString expression, Boolean start, Boolean end)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.CreateTrimStatementPartialSqlStringBooleanBoolean">
            <summary>Establecer el stub de SqlExpression`1.CreateTrimStatement(PartialSqlString expression, Boolean start, Boolean end)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.EscapeParam(System.Object)">
            <summary>Establecer el stub de MySqlSqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.EscapeParamObject">
            <summary>Establecer el stub de MySqlSqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.GetDateTimeSql(System.String,System.Object)">
            <summary>Establecer el stub de MySqlSqlExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.GetDateTimeSqlStringObject">
            <summary>Establecer el stub de MySqlSqlExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.GetQuotedColumnName(System.String)">
            <summary>Establecer el stub de SqlExpression`1.GetQuotedColumnName(String memberName)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.GetQuotedColumnNameString">
            <summary>Establecer el stub de SqlExpression`1.GetQuotedColumnName(String memberName)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.GroupBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.GroupBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.GroupByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de GroupBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMySqlSqlExpression</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.Limit(System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.Limit(System.Int32,System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.LimitExpression">
            <summary>Establecer el stub de SqlExpression`1.get_LimitExpression()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.LimitExpressionGet">
            <summary>Establecer el stub de SqlExpression`1.get_LimitExpression()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.LimitInt32">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 rows)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.LimitInt32Int32">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.OrderBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.OrderByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de OrderByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.OrderByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de OrderBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.Select``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.Select(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.SelectDistinct``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.SelectDistinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.SelectDistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer stubs de SelectDistinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.SelectOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de Select(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.SelectProjection``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.SelectProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.SelectProjectionOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer stubs de SelectProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.SubstringStatement(NPoco.Expressions.PartialSqlString,System.Int32,System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.SubstringStatementPartialSqlStringInt32Int32">
            <summary>Establecer el stub de SqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.ThenBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.ThenBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.ThenByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.ThenByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de ThenByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.ThenByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de ThenBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.ToDeleteStatement">
            <summary>Establecer el stub de SqlExpression`1.ToDeleteStatement()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.ToDeleteStatement01">
            <summary>Establecer el stub de SqlExpression`1.ToDeleteStatement()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.ToSelectStatement(System.Boolean,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.ToSelectStatement(Boolean applyPaging, Boolean isDistinct)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.ToSelectStatementBooleanBoolean">
            <summary>Establecer el stub de SqlExpression`1.ToSelectStatement(Boolean applyPaging, Boolean isDistinct)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.ToUpdateStatement(`0)">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.ToUpdateStatement(`0,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.ToUpdateStatementT0">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.ToUpdateStatementT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.Update``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.Update(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.UpdateOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de Update(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.Visit(System.Linq.Expressions.Expression)">
            <summary>Establecer el stub de SqlExpression`1.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitBinaryBinaryExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitBinding(System.Linq.Expressions.MemberBinding)">
            <summary>Establecer el stub de SqlExpression`1.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>Establecer el stub de SqlExpression`1.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitBindingListReadOnlyCollectionOfMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitBindingMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitColumnAccessMethod(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitColumnAccessMethod(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitColumnAccessMethodMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitColumnAccessMethod(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitConditional(ConditionalExpression conditional)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitConditionalConditionalExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConditional(ConditionalExpression conditional)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitConstantConstantExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitConstantList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>Establecer el stub de SqlExpression`1.VisitConstantList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitConstantListReadOnlyCollectionOfExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConstantList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitEnumerableMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitEnumerableMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitEnumerableMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitEnumerableMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitExpression">
            <summary>Establecer el stub de SqlExpression`1.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitExpressionList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>Establecer el stub de SqlExpression`1.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitExpressionListReadOnlyCollectionOfExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitLambdaLambdaExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitMemberAccessMemberExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitMemberAssignmentMemberAssignment">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitMemberInitMemberInitExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitNewArrayFromExpressionList(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArrayFromExpressionList(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitNewArrayFromExpressionListNewArrayExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArrayFromExpressionList(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitNewArrayNewArrayExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitNewNewExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitParameterParameterExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitSqlMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitSqlMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitSqlMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitSqlMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitStaticArrayMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitStaticArrayMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitStaticArrayMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitStaticArrayMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.VisitUnaryUnaryExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de SqlExpression`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.Where(System.String,System.Object[])">
            <summary>Establecer el stub de SqlExpression`1.Where(String sqlFilter, Object[] filterParams)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubMySqlSqlExpression`1.WhereStringObjectArray">
            <summary>Establecer el stub de SqlExpression`1.Where(String sqlFilter, Object[] filterParams)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubNullableMemberAccess">
            <summary>Tipo stub de NPoco.Expressions.NullableMemberAccess</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubNullableMemberAccess.#ctor(NPoco.PocoColumn,NPoco.PocoColumn[],System.String,System.Type)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubNullableMemberAccess.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubNullableMemberAccess.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubNullableMemberAccess</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubNullableMemberAccess.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubNullableMemberAccess.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubNullableMemberAccess.ToString">
            <summary>Establecer el stub de PartialSqlString.ToString()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubNullableMemberAccess.ToString01">
            <summary>Establecer el stub de PartialSqlString.ToString()</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubOracleExpression`1">
            <summary>Tipo stub de NPoco.Expressions.OracleExpression`1</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.#ctor(NPoco.IDatabase,NPoco.PocoData,System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.And(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de SqlExpression`1.And(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.AndExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.And(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.ApplyPaging(System.String,System.Collections.Generic.IEnumerable{NPoco.PocoColumn[]},System.Collections.Generic.Dictionary{System.String,NPoco.Linq.JoinData})">
            <summary>Establecer el stub de SqlExpression`1.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.ApplyPagingStringIEnumerableOfPocoColumnArrayDictionaryOfStringJoinData">
            <summary>Establecer el stub de SqlExpression`1.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.BindOperant(System.Linq.Expressions.ExpressionType)">
            <summary>Establecer el stub de SqlExpression`1.BindOperant(ExpressionType e)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.BindOperantExpressionType">
            <summary>Establecer el stub de SqlExpression`1.BindOperant(ExpressionType e)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubOracleExpression`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.CreateLikeStatement(NPoco.Expressions.PartialSqlString,System.String)">
            <summary>Establecer el stub de SqlExpression`1.CreateLikeStatement(PartialSqlString expression, String param)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.CreateLikeStatementPartialSqlStringString">
            <summary>Establecer el stub de SqlExpression`1.CreateLikeStatement(PartialSqlString expression, String param)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.CreateTrimStatement(NPoco.Expressions.PartialSqlString,System.Boolean,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.CreateTrimStatement(PartialSqlString expression, Boolean start, Boolean end)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.CreateTrimStatementPartialSqlStringBooleanBoolean">
            <summary>Establecer el stub de SqlExpression`1.CreateTrimStatement(PartialSqlString expression, Boolean start, Boolean end)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.EscapeParam(System.Object)">
            <summary>Establecer el stub de SqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.EscapeParamObject">
            <summary>Establecer el stub de SqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.GetDateTimeSql(System.String,System.Object)">
            <summary>Establecer el stub de OracleExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.GetDateTimeSqlStringObject">
            <summary>Establecer el stub de OracleExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.GetQuotedColumnName(System.String)">
            <summary>Establecer el stub de SqlExpression`1.GetQuotedColumnName(String memberName)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.GetQuotedColumnNameString">
            <summary>Establecer el stub de SqlExpression`1.GetQuotedColumnName(String memberName)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.GroupBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.GroupBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.GroupByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de GroupBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubOracleExpression</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubOracleExpression`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubOracleExpression`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.Limit(System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.Limit(System.Int32,System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubOracleExpression`1.LimitExpression">
            <summary>Establecer el stub de SqlExpression`1.get_LimitExpression()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.LimitExpressionGet">
            <summary>Establecer el stub de SqlExpression`1.get_LimitExpression()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.LimitInt32">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 rows)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.LimitInt32Int32">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.OrderBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.OrderByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de OrderByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.OrderByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de OrderBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.Select``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.Select(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.SelectDistinct``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.SelectDistinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.SelectDistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer stubs de SelectDistinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.SelectOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de Select(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.SelectProjection``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.SelectProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.SelectProjectionOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer stubs de SelectProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.SubstringStatement(NPoco.Expressions.PartialSqlString,System.Int32,System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.SubstringStatementPartialSqlStringInt32Int32">
            <summary>Establecer el stub de SqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.ThenBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.ThenBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.ThenByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.ThenByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de ThenByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.ThenByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de ThenBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.ToDeleteStatement">
            <summary>Establecer el stub de SqlExpression`1.ToDeleteStatement()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.ToDeleteStatement01">
            <summary>Establecer el stub de SqlExpression`1.ToDeleteStatement()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.ToSelectStatement(System.Boolean,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.ToSelectStatement(Boolean applyPaging, Boolean isDistinct)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.ToSelectStatementBooleanBoolean">
            <summary>Establecer el stub de SqlExpression`1.ToSelectStatement(Boolean applyPaging, Boolean isDistinct)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.ToUpdateStatement(`0)">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.ToUpdateStatement(`0,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.ToUpdateStatementT0">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.ToUpdateStatementT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.Update``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.Update(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.UpdateOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de Update(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.Visit(System.Linq.Expressions.Expression)">
            <summary>Establecer el stub de SqlExpression`1.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitBinaryBinaryExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitBinding(System.Linq.Expressions.MemberBinding)">
            <summary>Establecer el stub de SqlExpression`1.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>Establecer el stub de SqlExpression`1.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitBindingListReadOnlyCollectionOfMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitBindingMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitColumnAccessMethod(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitColumnAccessMethod(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitColumnAccessMethodMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitColumnAccessMethod(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitConditional(ConditionalExpression conditional)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitConditionalConditionalExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConditional(ConditionalExpression conditional)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitConstantConstantExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitConstantList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>Establecer el stub de SqlExpression`1.VisitConstantList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitConstantListReadOnlyCollectionOfExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConstantList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitEnumerableMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitEnumerableMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitEnumerableMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitEnumerableMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitExpression">
            <summary>Establecer el stub de SqlExpression`1.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitExpressionList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>Establecer el stub de SqlExpression`1.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitExpressionListReadOnlyCollectionOfExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitLambdaLambdaExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitMemberAccessMemberExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitMemberAssignmentMemberAssignment">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitMemberInitMemberInitExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitNewArrayFromExpressionList(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArrayFromExpressionList(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitNewArrayFromExpressionListNewArrayExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArrayFromExpressionList(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitNewArrayNewArrayExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitNewNewExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitParameterParameterExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitSqlMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitSqlMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitSqlMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitSqlMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitStaticArrayMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitStaticArrayMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitStaticArrayMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitStaticArrayMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.VisitUnaryUnaryExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de SqlExpression`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOracleExpression`1.Where(System.String,System.Object[])">
            <summary>Establecer el stub de SqlExpression`1.Where(String sqlFilter, Object[] filterParams)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubOracleExpression`1.WhereStringObjectArray">
            <summary>Establecer el stub de SqlExpression`1.Where(String sqlFilter, Object[] filterParams)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubOrderByMember">
            <summary>Tipo stub de NPoco.Expressions.OrderByMember</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOrderByMember.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubOrderByMember.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubOrderByMember.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubOrderByMember</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubOrderByMember.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubOrderByMember.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubParameterRebinder">
            <summary>Tipo stub de NPoco.Expressions.ParameterRebinder</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.#ctor(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubParameterRebinder.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubParameterRebinder</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubParameterRebinder.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubParameterRebinder.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.Visit(System.Linq.Expressions.Expression)">
            <summary>Establecer el stub de ExpressionVisitor.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitBinaryBinaryExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitBinding(System.Linq.Expressions.MemberBinding)">
            <summary>Establecer el stub de ExpressionVisitor.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>Establecer el stub de ExpressionVisitor.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitBindingListReadOnlyCollectionOfMemberBinding">
            <summary>Establecer el stub de ExpressionVisitor.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitBindingMemberBinding">
            <summary>Establecer el stub de ExpressionVisitor.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitConditional(ConditionalExpression c)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitConditionalConditionalExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitConditional(ConditionalExpression c)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitConstantConstantExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitElementInitializer(System.Linq.Expressions.ElementInit)">
            <summary>Establecer el stub de ExpressionVisitor.VisitElementInitializer(ElementInit initializer)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitElementInitializerElementInit">
            <summary>Establecer el stub de ExpressionVisitor.VisitElementInitializer(ElementInit initializer)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitElementInitializerList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
            <summary>Establecer el stub de ExpressionVisitor.VisitElementInitializerList(ReadOnlyCollection`1&lt;ElementInit&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitElementInitializerListReadOnlyCollectionOfElementInit">
            <summary>Establecer el stub de ExpressionVisitor.VisitElementInitializerList(ReadOnlyCollection`1&lt;ElementInit&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitExpression">
            <summary>Establecer el stub de ExpressionVisitor.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitExpressionList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>Establecer el stub de ExpressionVisitor.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitExpressionListReadOnlyCollectionOfExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitInvocation(InvocationExpression iv)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitInvocationInvocationExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitInvocation(InvocationExpression iv)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitLambdaLambdaExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitListInit(ListInitExpression init)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitListInitListInitExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitListInit(ListInitExpression init)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitMemberAccessMemberExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitMemberAssignmentMemberAssignment">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitMemberInitMemberInitExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberListBinding(MemberListBinding binding)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitMemberListBindingMemberListBinding">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberListBinding(MemberListBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Establecer el stub de ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitMethodCallMethodCallExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitNewArrayNewArrayExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitNewNewExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>Establecer el stub de ParameterRebinder.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitParameterParameterExpression">
            <summary>Establecer el stub de ParameterRebinder.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitTypeIs(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitTypeIs(TypeBinaryExpression b)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitTypeIsTypeBinaryExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitTypeIs(TypeBinaryExpression b)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubParameterRebinder.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>Establecer el stub de ExpressionVisitor.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubParameterRebinder.VisitUnaryUnaryExpression">
            <summary>Establecer el stub de ExpressionVisitor.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubPartialSqlString">
            <summary>Tipo stub de NPoco.Expressions.PartialSqlString</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPartialSqlString.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubPartialSqlString.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPartialSqlString.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPartialSqlString</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubPartialSqlString.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubPartialSqlString.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPartialSqlString.ToString">
            <summary>Establecer el stub de PartialSqlString.ToString()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPartialSqlString.ToString01">
            <summary>Establecer el stub de PartialSqlString.ToString()</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1">
            <summary>Tipo stub de NPoco.Expressions.PostgreSQLExpression`1</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.#ctor(NPoco.IDatabase,NPoco.PocoData,System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.And(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de SqlExpression`1.And(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.AndExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.And(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.ApplyPaging(System.String,System.Collections.Generic.IEnumerable{NPoco.PocoColumn[]},System.Collections.Generic.Dictionary{System.String,NPoco.Linq.JoinData})">
            <summary>Establecer el stub de SqlExpression`1.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.ApplyPagingStringIEnumerableOfPocoColumnArrayDictionaryOfStringJoinData">
            <summary>Establecer el stub de SqlExpression`1.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.BindOperant(System.Linq.Expressions.ExpressionType)">
            <summary>Establecer el stub de SqlExpression`1.BindOperant(ExpressionType e)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.BindOperantExpressionType">
            <summary>Establecer el stub de SqlExpression`1.BindOperant(ExpressionType e)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.CreateLikeStatement(NPoco.Expressions.PartialSqlString,System.String)">
            <summary>Establecer el stub de SqlExpression`1.CreateLikeStatement(PartialSqlString expression, String param)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.CreateLikeStatementPartialSqlStringString">
            <summary>Establecer el stub de SqlExpression`1.CreateLikeStatement(PartialSqlString expression, String param)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.CreateTrimStatement(NPoco.Expressions.PartialSqlString,System.Boolean,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.CreateTrimStatement(PartialSqlString expression, Boolean start, Boolean end)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.CreateTrimStatementPartialSqlStringBooleanBoolean">
            <summary>Establecer el stub de SqlExpression`1.CreateTrimStatement(PartialSqlString expression, Boolean start, Boolean end)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.EscapeParam(System.Object)">
            <summary>Establecer el stub de SqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.EscapeParamObject">
            <summary>Establecer el stub de SqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.GetDateTimeSql(System.String,System.Object)">
            <summary>Establecer el stub de PostgreSQLExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.GetDateTimeSqlStringObject">
            <summary>Establecer el stub de PostgreSQLExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.GetQuotedColumnName(System.String)">
            <summary>Establecer el stub de SqlExpression`1.GetQuotedColumnName(String memberName)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.GetQuotedColumnNameString">
            <summary>Establecer el stub de SqlExpression`1.GetQuotedColumnName(String memberName)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.GroupBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.GroupBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.GroupByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de GroupBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPostgreSQLExpression</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.Limit(System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.Limit(System.Int32,System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.LimitExpression">
            <summary>Establecer el stub de SqlExpression`1.get_LimitExpression()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.LimitExpressionGet">
            <summary>Establecer el stub de SqlExpression`1.get_LimitExpression()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.LimitInt32">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 rows)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.LimitInt32Int32">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.OrderBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.OrderByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de OrderByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.OrderByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de OrderBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.Select``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.Select(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.SelectDistinct``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.SelectDistinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.SelectDistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer stubs de SelectDistinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.SelectOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de Select(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.SelectProjection``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.SelectProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.SelectProjectionOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer stubs de SelectProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.SubstringStatement(NPoco.Expressions.PartialSqlString,System.Int32,System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.SubstringStatementPartialSqlStringInt32Int32">
            <summary>Establecer el stub de SqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.ThenBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.ThenBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.ThenByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.ThenByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de ThenByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.ThenByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de ThenBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.ToDeleteStatement">
            <summary>Establecer el stub de SqlExpression`1.ToDeleteStatement()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.ToDeleteStatement01">
            <summary>Establecer el stub de SqlExpression`1.ToDeleteStatement()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.ToSelectStatement(System.Boolean,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.ToSelectStatement(Boolean applyPaging, Boolean isDistinct)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.ToSelectStatementBooleanBoolean">
            <summary>Establecer el stub de SqlExpression`1.ToSelectStatement(Boolean applyPaging, Boolean isDistinct)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.ToUpdateStatement(`0)">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.ToUpdateStatement(`0,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.ToUpdateStatementT0">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.ToUpdateStatementT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.Update``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.Update(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.UpdateOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de Update(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.Visit(System.Linq.Expressions.Expression)">
            <summary>Establecer el stub de SqlExpression`1.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitBinaryBinaryExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitBinding(System.Linq.Expressions.MemberBinding)">
            <summary>Establecer el stub de SqlExpression`1.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>Establecer el stub de SqlExpression`1.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitBindingListReadOnlyCollectionOfMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitBindingMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitColumnAccessMethod(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitColumnAccessMethod(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitColumnAccessMethodMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitColumnAccessMethod(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitConditional(ConditionalExpression conditional)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitConditionalConditionalExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConditional(ConditionalExpression conditional)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitConstantConstantExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitConstantList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>Establecer el stub de SqlExpression`1.VisitConstantList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitConstantListReadOnlyCollectionOfExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConstantList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitEnumerableMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitEnumerableMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitEnumerableMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitEnumerableMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitExpression">
            <summary>Establecer el stub de SqlExpression`1.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitExpressionList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>Establecer el stub de SqlExpression`1.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitExpressionListReadOnlyCollectionOfExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitLambdaLambdaExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitMemberAccessMemberExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitMemberAssignmentMemberAssignment">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitMemberInitMemberInitExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitNewArrayFromExpressionList(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArrayFromExpressionList(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitNewArrayFromExpressionListNewArrayExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArrayFromExpressionList(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitNewArrayNewArrayExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitNewNewExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitParameterParameterExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitSqlMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitSqlMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitSqlMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitSqlMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitStaticArrayMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitStaticArrayMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitStaticArrayMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitStaticArrayMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.VisitUnaryUnaryExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de SqlExpression`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.Where(System.String,System.Object[])">
            <summary>Establecer el stub de SqlExpression`1.Where(String sqlFilter, Object[] filterParams)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubPostgreSQLExpression`1.WhereStringObjectArray">
            <summary>Establecer el stub de SqlExpression`1.Where(String sqlFilter, Object[] filterParams)</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubSelectMember">
            <summary>Tipo stub de NPoco.Expressions.SelectMember</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSelectMember.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubSelectMember.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSelectMember.Equals(System.Object)">
            <summary>Establecer el stub de SelectMember.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSelectMember.EqualsObject">
            <summary>Establecer el stub de SelectMember.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSelectMember.GetHashCode">
            <summary>Establecer el stub de SelectMember.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSelectMember.GetHashCode01">
            <summary>Establecer el stub de SelectMember.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSelectMember.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSelectMember</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubSelectMember.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubSelectMember.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Expressions.Fakes.StubSqlExpression`1">
            <summary>Tipo stub de NPoco.Expressions.SqlExpression`1</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.#ctor(NPoco.IDatabase,NPoco.PocoData,System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.And(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de SqlExpression`1.And(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.AndExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.And(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.ApplyPaging(System.String,System.Collections.Generic.IEnumerable{NPoco.PocoColumn[]},System.Collections.Generic.Dictionary{System.String,NPoco.Linq.JoinData})">
            <summary>Establecer el stub de SqlExpression`1.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.ApplyPagingStringIEnumerableOfPocoColumnArrayDictionaryOfStringJoinData">
            <summary>Establecer el stub de SqlExpression`1.ApplyPaging(String sql, IEnumerable`1&lt;PocoColumn[]&gt; columns, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.BindOperant(System.Linq.Expressions.ExpressionType)">
            <summary>Establecer el stub de SqlExpression`1.BindOperant(ExpressionType e)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.BindOperantExpressionType">
            <summary>Establecer el stub de SqlExpression`1.BindOperant(ExpressionType e)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubSqlExpression`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.CreateLikeStatement(NPoco.Expressions.PartialSqlString,System.String)">
            <summary>Establecer el stub de SqlExpression`1.CreateLikeStatement(PartialSqlString expression, String param)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.CreateLikeStatementPartialSqlStringString">
            <summary>Establecer el stub de SqlExpression`1.CreateLikeStatement(PartialSqlString expression, String param)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.CreateTrimStatement(NPoco.Expressions.PartialSqlString,System.Boolean,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.CreateTrimStatement(PartialSqlString expression, Boolean start, Boolean end)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.CreateTrimStatementPartialSqlStringBooleanBoolean">
            <summary>Establecer el stub de SqlExpression`1.CreateTrimStatement(PartialSqlString expression, Boolean start, Boolean end)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.EscapeParam(System.Object)">
            <summary>Establecer el stub de SqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.EscapeParamObject">
            <summary>Establecer el stub de SqlExpression`1.EscapeParam(Object par)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.GetDateTimeSql(System.String,System.Object)">
            <summary>Establecer el stub de SqlExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.GetDateTimeSqlStringObject">
            <summary>Establecer el stub de SqlExpression`1.GetDateTimeSql(String memberName, Object m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.GetQuotedColumnName(System.String)">
            <summary>Establecer el stub de SqlExpression`1.GetQuotedColumnName(String memberName)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.GetQuotedColumnNameString">
            <summary>Establecer el stub de SqlExpression`1.GetQuotedColumnName(String memberName)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.GroupBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.GroupBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.GroupByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de GroupBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSqlExpression</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubSqlExpression`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubSqlExpression`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.Limit(System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.Limit(System.Int32,System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Expressions.Fakes.StubSqlExpression`1.LimitExpression">
            <summary>Establecer el stub de SqlExpression`1.get_LimitExpression()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.LimitExpressionGet">
            <summary>Establecer el stub de SqlExpression`1.get_LimitExpression()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.LimitInt32">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 rows)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.LimitInt32Int32">
            <summary>Establecer el stub de SqlExpression`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.OrderBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.OrderByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de OrderByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.OrderByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de OrderBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.Select``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.Select(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.SelectDistinct``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.SelectDistinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.SelectDistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer stubs de SelectDistinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.SelectOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de Select(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.SelectProjection``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.SelectProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.SelectProjectionOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{NPoco.Expressions.SelectMember}})">
            <summary>Establecer stubs de SelectProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.SubstringStatement(NPoco.Expressions.PartialSqlString,System.Int32,System.Int32)">
            <summary>Establecer el stub de SqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.SubstringStatementPartialSqlStringInt32Int32">
            <summary>Establecer el stub de SqlExpression`1.SubstringStatement(PartialSqlString columnName, Int32 startIndex, Int32 length)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.ThenBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.ThenBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.ThenByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.ThenByDescendingOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de ThenByDescending(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.ThenByOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de ThenBy(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; keySelector)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.ToDeleteStatement">
            <summary>Establecer el stub de SqlExpression`1.ToDeleteStatement()</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.ToDeleteStatement01">
            <summary>Establecer el stub de SqlExpression`1.ToDeleteStatement()</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.ToSelectStatement(System.Boolean,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.ToSelectStatement(Boolean applyPaging, Boolean isDistinct)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.ToSelectStatementBooleanBoolean">
            <summary>Establecer el stub de SqlExpression`1.ToSelectStatement(Boolean applyPaging, Boolean isDistinct)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.ToUpdateStatement(`0)">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.ToUpdateStatement(`0,System.Boolean)">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.ToUpdateStatementT0">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.ToUpdateStatementT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.ToUpdateStatement(!0 item, Boolean excludeDefaults)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.Update``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de SqlExpression`1.Update(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.UpdateOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Expressions.SqlExpression{`0}})">
            <summary>Establecer stubs de Update(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.Visit(System.Linq.Expressions.Expression)">
            <summary>Establecer el stub de SqlExpression`1.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitBinaryBinaryExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitBinary(BinaryExpression b)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitBinding(System.Linq.Expressions.MemberBinding)">
            <summary>Establecer el stub de SqlExpression`1.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>Establecer el stub de SqlExpression`1.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitBindingListReadOnlyCollectionOfMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitBindingList(ReadOnlyCollection`1&lt;MemberBinding&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitBindingMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitBinding(MemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitColumnAccessMethod(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitColumnAccessMethod(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitColumnAccessMethodMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitColumnAccessMethod(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitConditional(ConditionalExpression conditional)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitConditionalConditionalExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConditional(ConditionalExpression conditional)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitConstantConstantExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConstant(ConstantExpression c)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitConstantList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>Establecer el stub de SqlExpression`1.VisitConstantList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitConstantListReadOnlyCollectionOfExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitConstantList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitEnumerableMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitEnumerableMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitEnumerableMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitEnumerableMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitExpression">
            <summary>Establecer el stub de SqlExpression`1.Visit(Expression exp)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitExpressionList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>Establecer el stub de SqlExpression`1.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitExpressionListReadOnlyCollectionOfExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitExpressionList(ReadOnlyCollection`1&lt;Expression&gt; original)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitLambdaLambdaExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitLambda(LambdaExpression lambda)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitMemberAccessMemberExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAccess(MemberExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitMemberAssignmentMemberAssignment">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberAssignment(MemberAssignment assignment)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitMemberInitMemberInitExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberInit(MemberInitExpression init)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitMemberMemberBindingMemberMemberBinding">
            <summary>Establecer el stub de SqlExpression`1.VisitMemberMemberBinding(MemberMemberBinding binding)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitNewArrayFromExpressionList(System.Linq.Expressions.NewArrayExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArrayFromExpressionList(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitNewArrayFromExpressionListNewArrayExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArrayFromExpressionList(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitNewArrayNewArrayExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNewArray(NewArrayExpression na)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitNewNewExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitNew(NewExpression nex)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitParameterParameterExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitParameter(ParameterExpression p)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitSqlMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitSqlMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitSqlMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitSqlMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitStaticArrayMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitStaticArrayMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitStaticArrayMethodCallMethodCallExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitStaticArrayMethodCall(MethodCallExpression m)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>Establecer el stub de SqlExpression`1.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.VisitUnaryUnaryExpression">
            <summary>Establecer el stub de SqlExpression`1.VisitUnary(UnaryExpression u)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de SqlExpression`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="M:NPoco.Expressions.Fakes.StubSqlExpression`1.Where(System.String,System.Object[])">
            <summary>Establecer el stub de SqlExpression`1.Where(String sqlFilter, Object[] filterParams)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de SqlExpression`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; predicate)</summary>
        </member>
        <member name="F:NPoco.Expressions.Fakes.StubSqlExpression`1.WhereStringObjectArray">
            <summary>Establecer el stub de SqlExpression`1.Where(String sqlFilter, Object[] filterParams)</summary>
        </member>
        <member name="T:NPoco.Extensions.Fakes.ShimBatchingExtensions">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Extensions.BatchingExtensions</summary>
        </member>
        <member name="M:NPoco.Extensions.Fakes.ShimBatchingExtensions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Extensions.Fakes.ShimBatchingExtensions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Extensions.Fakes.ShimBatchingExtensions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Extensions.Fakes.ShimBatchingExtensions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Extensions.Fakes.ShimBatchingExtensions.ChunkifyOf1IEnumerableOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Int32,System.Collections.Generic.IEnumerable{``0[]}})">
            <summary>Establecer el shim de BatchingExtensions.Chunkify(IEnumerable`1&lt;!!0&gt; items, Int32 chunkSize)</summary>
        </member>
        <member name="M:NPoco.Extensions.Fakes.ShimBatchingExtensions.TakeOf1IEnumeratorOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerator{``0},System.Int32,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer el shim de BatchingExtensions.Take(IEnumerator`1&lt;!!0&gt; enumerator, Int32 num)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimAliasAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.AliasAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimAliasAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimAliasAttribute.#ctor(NPoco.AliasAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAliasAttribute.AliasGet">
            <summary>Establecer el shim de AliasAttribute.get_Alias()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAliasAttribute.AliasSetString">
            <summary>Establecer el shim de AliasAttribute.set_Alias(String value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimAliasAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAliasAttribute.AllInstances.AliasGet">
            <summary>Establecer el shim de AliasAttribute.get_Alias()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAliasAttribute.AllInstances.AliasSetString">
            <summary>Establecer el shim de AliasAttribute.set_Alias(String value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimAliasAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimAliasAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAliasAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAliasAttribute.ConstructorString">
            <summary>Establecer el shim de AliasAttribute.AliasAttribute(String alias)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimAnsiString">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.AnsiString</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimAnsiString.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimAnsiString.#ctor(NPoco.AnsiString)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimAnsiString.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAnsiString.AllInstances.ValueGet">
            <summary>Establecer el shim de AnsiString.get_Value()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAnsiString.AllInstances.ValueSetString">
            <summary>Establecer el shim de AnsiString.set_Value(String value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimAnsiString.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimAnsiString.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAnsiString.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAnsiString.ConstructorString">
            <summary>Establecer el shim de AnsiString.AnsiString(String str)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAnsiString.ValueGet">
            <summary>Establecer el shim de AnsiString.get_Value()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAnsiString.ValueSetString">
            <summary>Establecer el shim de AnsiString.set_Value(String value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimAutoSelectHelper">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.AutoSelectHelper</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimAutoSelectHelper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimAutoSelectHelper.#ctor(NPoco.AutoSelectHelper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAutoSelectHelper.AddSelectClauseDatabaseTypeString">
            <summary>Establecer el shim de AutoSelectHelper.AddSelectClause(Database database, Type type, String sql)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimAutoSelectHelper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimAutoSelectHelper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimAutoSelectHelper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAutoSelectHelper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAutoSelectHelper.Constructor">
            <summary>Establecer el shim de AutoSelectHelper.AutoSelectHelper()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimAutoSelectHelper.StaticConstructor">
            <summary>Establecer el shim de AutoSelectHelper.AutoSelectHelper()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimBase62">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Base62</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimBase62.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimBase62.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimBase62.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimBase62.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimBase62.FromBase62String">
            <summary>Establecer el shim de Base62.FromBase62(String base62)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimBase62.StaticConstructor">
            <summary>Establecer el shim de Base62.Base62()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimBase62.ToBase62ByteArray">
            <summary>Establecer el shim de Base62.ToBase62(Byte[] original)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimBatchOptions">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.BatchOptions</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimBatchOptions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimBatchOptions.#ctor(NPoco.BatchOptions)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimBatchOptions.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimBatchOptions.AllInstances.BatchSizeGet">
            <summary>Establecer el shim de BatchOptions.get_BatchSize()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimBatchOptions.AllInstances.BatchSizeSetInt32">
            <summary>Establecer el shim de BatchOptions.set_BatchSize(Int32 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimBatchOptions.AllInstances.StatementSeperatorGet">
            <summary>Establecer el shim de BatchOptions.get_StatementSeperator()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimBatchOptions.AllInstances.StatementSeperatorSetString">
            <summary>Establecer el shim de BatchOptions.set_StatementSeperator(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimBatchOptions.BatchSizeGet">
            <summary>Establecer el shim de BatchOptions.get_BatchSize()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimBatchOptions.BatchSizeSetInt32">
            <summary>Establecer el shim de BatchOptions.set_BatchSize(Int32 value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimBatchOptions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimBatchOptions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimBatchOptions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimBatchOptions.Constructor">
            <summary>Establecer el shim de BatchOptions.BatchOptions()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimBatchOptions.StatementSeperatorGet">
            <summary>Establecer el shim de BatchOptions.get_StatementSeperator()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimBatchOptions.StatementSeperatorSetString">
            <summary>Establecer el shim de BatchOptions.set_StatementSeperator(String value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimCache`2">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Cache`2</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimCache`2.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimCache`2.#ctor(NPoco.Cache{`0,`1})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimCache`2.AddIfNotExistsT0T1">
            <summary>Establecer el shim de Cache`2.AddIfNotExists(!0 key, !1 value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimCache`2.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimCache`2.AllInstances.AddIfNotExistsT0T1">
            <summary>Establecer el shim de Cache`2.AddIfNotExists(!0 key, !1 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimCache`2.AllInstances.CountGet">
            <summary>Establecer el shim de Cache`2.get_Count()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimCache`2.AllInstances.Flush">
            <summary>Establecer el shim de Cache`2.Flush()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimCache`2.AllInstances.GetT0FuncOfT1">
            <summary>Establecer el shim de Cache`2.Get(!0 key, Func`1&lt;!1&gt; factory)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimCache`2.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimCache`2.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimCache`2.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimCache`2.Constructor">
            <summary>Establecer el shim de Cache`2.Cache`2()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimCache`2.CountGet">
            <summary>Establecer el shim de Cache`2.get_Count()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimCache`2.CreateStaticCache">
            <summary>Establecer el shim de Cache`2.CreateStaticCache()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimCache`2.Flush">
            <summary>Establecer el shim de Cache`2.Flush()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimCache`2.GetT0FuncOfT1">
            <summary>Establecer el shim de Cache`2.Get(!0 key, Func`1&lt;!1&gt; factory)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimColumnAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ColumnAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimColumnAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimColumnAttribute.#ctor(NPoco.ColumnAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimColumnAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnAttribute.AllInstances.ExactNameMatchGet">
            <summary>Establecer el shim de ColumnAttribute.get_ExactNameMatch()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnAttribute.AllInstances.ExactNameMatchSetBoolean">
            <summary>Establecer el shim de ColumnAttribute.set_ExactNameMatch(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnAttribute.AllInstances.ForceToUtcGet">
            <summary>Establecer el shim de ColumnAttribute.get_ForceToUtc()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnAttribute.AllInstances.ForceToUtcSetBoolean">
            <summary>Establecer el shim de ColumnAttribute.set_ForceToUtc(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnAttribute.AllInstances.NameGet">
            <summary>Establecer el shim de ColumnAttribute.get_Name()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnAttribute.AllInstances.NameSetString">
            <summary>Establecer el shim de ColumnAttribute.set_Name(String value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimColumnAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimColumnAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnAttribute.Constructor">
            <summary>Establecer el shim de ColumnAttribute.ColumnAttribute()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnAttribute.ConstructorString">
            <summary>Establecer el shim de ColumnAttribute.ColumnAttribute(String name)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnAttribute.ExactNameMatchGet">
            <summary>Establecer el shim de ColumnAttribute.get_ExactNameMatch()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnAttribute.ExactNameMatchSetBoolean">
            <summary>Establecer el shim de ColumnAttribute.set_ExactNameMatch(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnAttribute.ForceToUtcGet">
            <summary>Establecer el shim de ColumnAttribute.get_ForceToUtc()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnAttribute.ForceToUtcSetBoolean">
            <summary>Establecer el shim de ColumnAttribute.set_ForceToUtc(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnAttribute.NameGet">
            <summary>Establecer el shim de ColumnAttribute.get_Name()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnAttribute.NameSetString">
            <summary>Establecer el shim de ColumnAttribute.set_Name(String value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimColumnInfo">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ColumnInfo</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimColumnInfo.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimColumnInfo.#ctor(NPoco.ColumnInfo)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimColumnInfo.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ColumnAliasGet">
            <summary>Establecer el shim de ColumnInfo.get_ColumnAlias()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ColumnAliasSetString">
            <summary>Establecer el shim de ColumnInfo.set_ColumnAlias(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ColumnNameGet">
            <summary>Establecer el shim de ColumnInfo.get_ColumnName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ColumnNameSetString">
            <summary>Establecer el shim de ColumnInfo.set_ColumnName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ColumnTypeGet">
            <summary>Establecer el shim de ColumnInfo.get_ColumnType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ColumnTypeSetType">
            <summary>Establecer el shim de ColumnInfo.set_ColumnType(Type value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ComplexMappingGet">
            <summary>Establecer el shim de ColumnInfo.get_ComplexMapping()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ComplexMappingSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_ComplexMapping(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ComplexPrefixGet">
            <summary>Establecer el shim de ColumnInfo.get_ComplexPrefix()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ComplexPrefixSetString">
            <summary>Establecer el shim de ColumnInfo.set_ComplexPrefix(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ComputedColumnGet">
            <summary>Establecer el shim de ColumnInfo.get_ComputedColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ComputedColumnSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_ComputedColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ComputedColumnTypeGet">
            <summary>Establecer el shim de ColumnInfo.get_ComputedColumnType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ComputedColumnTypeSetComputedColumnType">
            <summary>Establecer el shim de ColumnInfo.set_ComputedColumnType(ComputedColumnType value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ExactColumnNameMatchGet">
            <summary>Establecer el shim de ColumnInfo.get_ExactColumnNameMatch()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ExactColumnNameMatchSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_ExactColumnNameMatch(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ForceToUtcGet">
            <summary>Establecer el shim de ColumnInfo.get_ForceToUtc()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ForceToUtcSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_ForceToUtc(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.IgnoreColumnGet">
            <summary>Establecer el shim de ColumnInfo.get_IgnoreColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.IgnoreColumnSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_IgnoreColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.MemberInfoGet">
            <summary>Establecer el shim de ColumnInfo.get_MemberInfo()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.MemberInfoSetMemberInfo">
            <summary>Establecer el shim de ColumnInfo.set_MemberInfo(MemberInfo value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ReferenceMemberNameGet">
            <summary>Establecer el shim de ColumnInfo.get_ReferenceMemberName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ReferenceMemberNameSetString">
            <summary>Establecer el shim de ColumnInfo.set_ReferenceMemberName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ReferenceTypeGet">
            <summary>Establecer el shim de ColumnInfo.get_ReferenceType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ReferenceTypeSetReferenceType">
            <summary>Establecer el shim de ColumnInfo.set_ReferenceType(ReferenceType value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ResultColumnGet">
            <summary>Establecer el shim de ColumnInfo.get_ResultColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ResultColumnSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_ResultColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.SerializedColumnGet">
            <summary>Establecer el shim de ColumnInfo.get_SerializedColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.SerializedColumnSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_SerializedColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ValueObjectColumnGet">
            <summary>Establecer el shim de ColumnInfo.get_ValueObjectColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.ValueObjectColumnSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_ValueObjectColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.VersionColumnGet">
            <summary>Establecer el shim de ColumnInfo.get_VersionColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.VersionColumnSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_VersionColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.VersionColumnTypeGet">
            <summary>Establecer el shim de ColumnInfo.get_VersionColumnType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.AllInstances.VersionColumnTypeSetVersionColumnType">
            <summary>Establecer el shim de ColumnInfo.set_VersionColumnType(VersionColumnType value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimColumnInfo.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimColumnInfo.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ColumnAliasGet">
            <summary>Establecer el shim de ColumnInfo.get_ColumnAlias()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ColumnAliasSetString">
            <summary>Establecer el shim de ColumnInfo.set_ColumnAlias(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ColumnNameGet">
            <summary>Establecer el shim de ColumnInfo.get_ColumnName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ColumnNameSetString">
            <summary>Establecer el shim de ColumnInfo.set_ColumnName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ColumnTypeGet">
            <summary>Establecer el shim de ColumnInfo.get_ColumnType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ColumnTypeSetType">
            <summary>Establecer el shim de ColumnInfo.set_ColumnType(Type value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ComplexMappingGet">
            <summary>Establecer el shim de ColumnInfo.get_ComplexMapping()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ComplexMappingSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_ComplexMapping(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ComplexPrefixGet">
            <summary>Establecer el shim de ColumnInfo.get_ComplexPrefix()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ComplexPrefixSetString">
            <summary>Establecer el shim de ColumnInfo.set_ComplexPrefix(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ComputedColumnGet">
            <summary>Establecer el shim de ColumnInfo.get_ComputedColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ComputedColumnSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_ComputedColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ComputedColumnTypeGet">
            <summary>Establecer el shim de ColumnInfo.get_ComputedColumnType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ComputedColumnTypeSetComputedColumnType">
            <summary>Establecer el shim de ColumnInfo.set_ComputedColumnType(ComputedColumnType value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.Constructor">
            <summary>Establecer el shim de ColumnInfo.ColumnInfo()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ExactColumnNameMatchGet">
            <summary>Establecer el shim de ColumnInfo.get_ExactColumnNameMatch()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ExactColumnNameMatchSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_ExactColumnNameMatch(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ForceToUtcGet">
            <summary>Establecer el shim de ColumnInfo.get_ForceToUtc()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ForceToUtcSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_ForceToUtc(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.FromMemberInfoMemberInfo">
            <summary>Establecer el shim de ColumnInfo.FromMemberInfo(MemberInfo mi)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.IgnoreColumnGet">
            <summary>Establecer el shim de ColumnInfo.get_IgnoreColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.IgnoreColumnSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_IgnoreColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.MemberInfoGet">
            <summary>Establecer el shim de ColumnInfo.get_MemberInfo()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.MemberInfoSetMemberInfo">
            <summary>Establecer el shim de ColumnInfo.set_MemberInfo(MemberInfo value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ReferenceMemberNameGet">
            <summary>Establecer el shim de ColumnInfo.get_ReferenceMemberName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ReferenceMemberNameSetString">
            <summary>Establecer el shim de ColumnInfo.set_ReferenceMemberName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ReferenceTypeGet">
            <summary>Establecer el shim de ColumnInfo.get_ReferenceType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ReferenceTypeSetReferenceType">
            <summary>Establecer el shim de ColumnInfo.set_ReferenceType(ReferenceType value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ResultColumnGet">
            <summary>Establecer el shim de ColumnInfo.get_ResultColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ResultColumnSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_ResultColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.SerializedColumnGet">
            <summary>Establecer el shim de ColumnInfo.get_SerializedColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.SerializedColumnSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_SerializedColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ValueObjectColumnGet">
            <summary>Establecer el shim de ColumnInfo.get_ValueObjectColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.ValueObjectColumnSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_ValueObjectColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.VersionColumnGet">
            <summary>Establecer el shim de ColumnInfo.get_VersionColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.VersionColumnSetBoolean">
            <summary>Establecer el shim de ColumnInfo.set_VersionColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.VersionColumnTypeGet">
            <summary>Establecer el shim de ColumnInfo.get_VersionColumnType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnInfo.VersionColumnTypeSetVersionColumnType">
            <summary>Establecer el shim de ColumnInfo.set_VersionColumnType(VersionColumnType value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimColumnTypeAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ColumnTypeAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimColumnTypeAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimColumnTypeAttribute.#ctor(NPoco.ColumnTypeAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimColumnTypeAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnTypeAttribute.AllInstances.TypeGet">
            <summary>Establecer el shim de ColumnTypeAttribute.get_Type()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnTypeAttribute.AllInstances.TypeSetType">
            <summary>Establecer el shim de ColumnTypeAttribute.set_Type(Type value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimColumnTypeAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimColumnTypeAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnTypeAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnTypeAttribute.ConstructorType">
            <summary>Establecer el shim de ColumnTypeAttribute.ColumnTypeAttribute(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnTypeAttribute.TypeGet">
            <summary>Establecer el shim de ColumnTypeAttribute.get_Type()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimColumnTypeAttribute.TypeSetType">
            <summary>Establecer el shim de ColumnTypeAttribute.set_Type(Type value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimComplexMappingAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ComplexMappingAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimComplexMappingAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimComplexMappingAttribute.#ctor(NPoco.ComplexMappingAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimComplexMappingAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimComplexMappingAttribute.AllInstances.CustomPrefixGet">
            <summary>Establecer el shim de ComplexMappingAttribute.get_CustomPrefix()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimComplexMappingAttribute.AllInstances.CustomPrefixSetString">
            <summary>Establecer el shim de ComplexMappingAttribute.set_CustomPrefix(String value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimComplexMappingAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimComplexMappingAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimComplexMappingAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimComplexMappingAttribute.Constructor">
            <summary>Establecer el shim de ComplexMappingAttribute.ComplexMappingAttribute()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimComplexMappingAttribute.ConstructorString">
            <summary>Establecer el shim de ComplexMappingAttribute.ComplexMappingAttribute(String customPrefix)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimComplexMappingAttribute.CustomPrefixGet">
            <summary>Establecer el shim de ComplexMappingAttribute.get_CustomPrefix()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimComplexMappingAttribute.CustomPrefixSetString">
            <summary>Establecer el shim de ComplexMappingAttribute.set_CustomPrefix(String value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimComputedColumnAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ComputedColumnAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimComputedColumnAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimComputedColumnAttribute.#ctor(NPoco.ComputedColumnAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimComputedColumnAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimComputedColumnAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimComputedColumnAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimComputedColumnAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimComputedColumnAttribute.Constructor">
            <summary>Establecer el shim de ComputedColumnAttribute.ComputedColumnAttribute()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimComputedColumnAttribute.ConstructorComputedColumnType">
            <summary>Establecer el shim de ComputedColumnAttribute.ComputedColumnAttribute(ComputedColumnType computedColumnType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimComputedColumnAttribute.ConstructorString">
            <summary>Establecer el shim de ComputedColumnAttribute.ComputedColumnAttribute(String name)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimComputedColumnAttribute.ConstructorStringComputedColumnType">
            <summary>Establecer el shim de ComputedColumnAttribute.ComputedColumnAttribute(String name, ComputedColumnType computedColumnType)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimConstructAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ConstructAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimConstructAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimConstructAttribute.#ctor(NPoco.ConstructAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimConstructAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimConstructAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimConstructAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimConstructAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimConstructAttribute.Constructor">
            <summary>Establecer el shim de ConstructAttribute.ConstructAttribute()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabase">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Database</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.#ctor(NPoco.Database)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AbortTransaction">
            <summary>Establecer el shim de Database.AbortTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AbortTransactionBoolean">
            <summary>Establecer el shim de Database.AbortTransaction(Boolean fromComplete)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AddParameterDbCommandObject">
            <summary>Establecer el shim de Database.AddParameter(DbCommand cmd, Object value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabase.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.AbortTransaction">
            <summary>Establecer el shim de Database.AbortTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.AbortTransactionBoolean">
            <summary>Establecer el shim de Database.AbortTransaction(Boolean fromComplete)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.AddParameterDbCommandObject">
            <summary>Establecer el shim de Database.AddParameter(DbCommand cmd, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.BeginTransaction">
            <summary>Establecer el shim de Database.BeginTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.BeginTransactionIsolationLevel">
            <summary>Establecer el shim de Database.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.BuildPageQueriesOf1Int64Int64StringObjectArrayRefStringOutStringOut``1(Microsoft.QualityTools.Testing.Fakes.Delegates.NPocoDelegates.Ref4Out5Out6Action7{NPoco.Database,System.Int64,System.Int64,System.String,System.Object[],System.String,System.String})">
            <summary>Establecer el shim de Database.BuildPageQueries(Int64 skip, Int64 take, String sql, Object[]&amp; args, String&amp; sqlCount, String&amp; sqlPage)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.CloseSharedConnection">
            <summary>Establecer el shim de Database.CloseSharedConnection()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.CloseSharedConnectionInternal">
            <summary>Establecer el shim de Database.CloseSharedConnectionInternal()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.CommandTimeoutGet">
            <summary>Establecer el shim de Database.get_CommandTimeout()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.CommandTimeoutSetInt32">
            <summary>Establecer el shim de Database.set_CommandTimeout(Int32 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.CompleteTransaction">
            <summary>Establecer el shim de Database.CompleteTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ConnectionGet">
            <summary>Establecer el shim de Database.get_Connection()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ConnectionStringGet">
            <summary>Establecer el shim de Database.get_ConnectionString()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.CreateCommandDbConnectionCommandTypeStringObjectArray">
            <summary>Establecer el shim de Database.CreateCommand(DbConnection connection, CommandType commandType, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.CreateCommandDbConnectionStringObjectArray">
            <summary>Establecer el shim de Database.CreateCommand(DbConnection connection, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.CreateParameter">
            <summary>Establecer el shim de Database.CreateParameter()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.CreateStoredProcedureCommandDbConnectionStringObjectArray">
            <summary>Establecer el shim de Database.CreateStoredProcedureCommand(DbConnection connection, String name, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.DataGet">
            <summary>Establecer el shim de Database.get_Data()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.DatabaseTypeGet">
            <summary>Establecer el shim de Database.get_DatabaseType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.DeleteAsyncObject">
            <summary>Establecer el shim de Database.DeleteAsync(Object poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.DeleteAsyncStringStringObject">
            <summary>Establecer el shim de Database.DeleteAsync(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.DeleteAsyncStringStringObjectObject">
            <summary>Establecer el shim de Database.DeleteAsync(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.DeleteImpAsyncStringStringObjectObjectBoolean">
            <summary>Establecer el shim de Database.DeleteImpAsync(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.DeleteManyAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Linq.IAsyncDeleteQueryProvider{``0}})">
            <summary>Establecer el shim de Database.DeleteManyAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.DeleteManyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Linq.IDeleteQueryProvider{``0}})">
            <summary>Establecer el shim de Database.DeleteMany()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.DeleteObject">
            <summary>Establecer el shim de Database.Delete(Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.DeleteOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Object,System.Int32})">
            <summary>Establecer el shim de Database.Delete(Object pocoOrPrimaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.DeleteOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.Int32})">
            <summary>Establecer el shim de Database.Delete(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.DeleteOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.Int32})">
            <summary>Establecer el shim de Database.Delete(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.DeleteStringStringObject">
            <summary>Establecer el shim de Database.Delete(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.DeleteStringStringObjectObject">
            <summary>Establecer el shim de Database.Delete(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.DictionaryOf2Sql``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.Collections.Generic.Dictionary{``0,``1}})">
            <summary>Establecer el shim de Database.Dictionary(Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.DictionaryOf2StringObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.Collections.Generic.Dictionary{``0,``1}})">
            <summary>Establecer el shim de Database.Dictionary(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.Dispose">
            <summary>Establecer el shim de Database.Dispose()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.DoPreExecuteDbCommand">
            <summary>Establecer el shim de Database.DoPreExecute(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.EnableAutoSelectGet">
            <summary>Establecer el shim de Database.get_EnableAutoSelect()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.EnableAutoSelectSetBoolean">
            <summary>Establecer el shim de Database.set_EnableAutoSelect(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteAsyncSql">
            <summary>Establecer el shim de Database.ExecuteAsync(Sql Sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteAsyncStringObjectArray">
            <summary>Establecer el shim de Database.ExecuteAsync(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteDataReaderDbCommandBoolean">
            <summary>Establecer el shim de Database.ExecuteDataReader(DbCommand cmd, Boolean sync)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteNonQueryHelperAsyncDbCommand">
            <summary>Establecer el shim de Database.ExecuteNonQueryHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteNonQueryHelperDbCommand">
            <summary>Establecer el shim de Database.ExecuteNonQueryHelper(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteReaderHelperAsyncDbCommand">
            <summary>Establecer el shim de Database.ExecuteReaderHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteReaderHelperDbCommand">
            <summary>Establecer el shim de Database.ExecuteReaderHelper(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteScalarAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.ExecuteScalarAsync(Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteScalarAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.ExecuteScalarAsync(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteScalarHelperAsyncDbCommand">
            <summary>Establecer el shim de Database.ExecuteScalarHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteScalarHelperDbCommand">
            <summary>Establecer el shim de Database.ExecuteScalarHelper(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteScalarOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.ExecuteScalar(Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteScalarOf1StringCommandTypeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Data.CommandType,System.Object[],``0})">
            <summary>Establecer el shim de Database.ExecuteScalar(String sql, CommandType commandType, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteScalarOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.ExecuteScalar(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteSql">
            <summary>Establecer el shim de Database.Execute(Sql Sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteStringCommandTypeObjectArray">
            <summary>Establecer el shim de Database.Execute(String sql, CommandType commandType, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ExecuteStringObjectArray">
            <summary>Establecer el shim de Database.Execute(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.ExecutionHookAsyncOf1FuncOfTaskOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Func{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.ExecutionHookAsync(Func`1&lt;Task`1&lt;!!0&gt;&gt; action)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.ExecutionHookOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Func{``0},``0})">
            <summary>Establecer el shim de Database.ExecutionHook(Func`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.ExistsAsyncOf1ObjectBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Object,System.Boolean,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>Establecer el shim de Database.ExistsAsync(Object primaryKey, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.ExistsOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Object,System.Boolean})">
            <summary>Establecer el shim de Database.Exists(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de Database.FetchAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de Database.FetchAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de Database.FetchAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de Database.FetchAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de Database.FetchAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleAsyncOf2Sql``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleAsyncOf2StringObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleAsyncOf3FuncOfListOfM0ListOfM1M2Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql,System.Threading.Tasks.Task{``2}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleAsyncOf3FuncOfListOfM0ListOfM1M2StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[],System.Threading.Tasks.Task{``2}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleAsyncOf3Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleAsyncOf3StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleAsyncOf4FuncOfListOfM0ListOfM1ListOfM2M3Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql,System.Threading.Tasks.Task{``3}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleAsyncOf4FuncOfListOfM0ListOfM1ListOfM2M3StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[],System.Threading.Tasks.Task{``3}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleAsyncOf4Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleAsyncOf4StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleAsyncOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4Sql``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql,System.Threading.Tasks.Task{``4}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleAsyncOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4StringObjectArray``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[],System.Threading.Tasks.Task{``4}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleImpOf5TypeArrayObjectSqlBoolean``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Type[],System.Object,NPoco.Sql,System.Boolean,System.Threading.Tasks.Task{``4}})">
            <summary>Establecer el shim de Database.FetchMultipleImp(Type[] types, Object cb, Sql Sql, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleOf2Sql``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}})">
            <summary>Establecer el shim de Database.FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleOf2StringObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}})">
            <summary>Establecer el shim de Database.FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleOf3FuncOfListOfM0ListOfM1M2Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql,``2})">
            <summary>Establecer el shim de Database.FetchMultiple(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleOf3FuncOfListOfM0ListOfM1M2StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[],``2})">
            <summary>Establecer el shim de Database.FetchMultiple(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleOf3Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}})">
            <summary>Establecer el shim de Database.FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleOf3StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}})">
            <summary>Establecer el shim de Database.FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleOf4FuncOfListOfM0ListOfM1ListOfM2M3Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql,``3})">
            <summary>Establecer el shim de Database.FetchMultiple(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleOf4FuncOfListOfM0ListOfM1ListOfM2M3StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[],``3})">
            <summary>Establecer el shim de Database.FetchMultiple(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleOf4Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}})">
            <summary>Establecer el shim de Database.FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleOf4StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}})">
            <summary>Establecer el shim de Database.FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4Sql``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql,``4})">
            <summary>Establecer el shim de Database.FetchMultiple(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchMultipleOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4StringObjectArray``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[],``4})">
            <summary>Establecer el shim de Database.FetchMultiple(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.Fetch()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Int64,System.Int64,NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.Fetch(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Int64,System.Int64,System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.Fetch(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.Fetch(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.Fetch(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchOneToManyOf1ExpressionOfFuncOfM0IListFuncOfM0ObjectSql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object},NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Func`2&lt;!!0,Object&gt; idFunc, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchOneToManyOf1ExpressionOfFuncOfM0IListFuncOfM0ObjectStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object},System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Func`2&lt;!!0,Object&gt; idFunc, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchOneToManyOf1ExpressionOfFuncOfM0IListSql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FetchOneToManyOf1ExpressionOfFuncOfM0IListStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.FetchTypeSql">
            <summary>Establecer el shim de Database.Fetch(Type type, Sql Sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.FetchTypeStringObjectArray">
            <summary>Establecer el shim de Database.Fetch(Type type, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FirstAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.FirstAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FirstAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.FirstAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FirstIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.FirstInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FirstIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.FirstInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FirstOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.First(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FirstOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.First(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FirstOrDefaultAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.FirstOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FirstOrDefaultAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.FirstOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FirstOrDefaultIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.FirstOrDefaultInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FirstOrDefaultIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.FirstOrDefaultInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FirstOrDefaultOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.FirstOrDefault(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.FirstOrDefaultOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.FirstOrDefault(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.FormatCommandDbCommand">
            <summary>Establecer el shim de Database.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.FormatCommandStringObjectArray">
            <summary>Establecer el shim de Database.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.GenerateSingleByIdSqlOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Object,NPoco.Sql})">
            <summary>Establecer el shim de Database.GenerateSingleByIdSql(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.GetExistsSqlOf1ObjectBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Object,System.Boolean,NPoco.Sql})">
            <summary>Establecer el shim de Database.GetExistsSql(Object primaryKeyorPoco, Boolean isPoco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.GetTransaction">
            <summary>Establecer el shim de Database.GetTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.GetTransactionIsolationLevel">
            <summary>Establecer el shim de Database.GetTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.InsertAsyncImpOf1PocoDataStringStringBooleanM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.PocoData,System.String,System.String,System.Boolean,``0,System.Boolean,System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de Database.InsertAsyncImp(PocoData pocoData, String tableName, String primaryKeyName, Boolean autoIncrement, !!0 poco, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.InsertAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de Database.InsertAsync(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.InsertAsyncOf1StringStringBooleanM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.String,System.Boolean,``0,System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de Database.InsertAsync(String tableName, String primaryKeyName, Boolean autoIncrement, !!0 poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.InsertAsyncStringStringObject">
            <summary>Establecer el shim de Database.InsertAsync(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.InsertBatchAsyncImpOf1IEnumerableOfM0BatchOptionsBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Collections.Generic.IEnumerable{``0},NPoco.BatchOptions,System.Boolean,System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer el shim de Database.InsertBatchAsyncImp(IEnumerable`1&lt;!!0&gt; pocos, BatchOptions options, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.InsertBatchAsyncOf1IEnumerableOfM0BatchOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Collections.Generic.IEnumerable{``0},NPoco.BatchOptions,System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer el shim de Database.InsertBatchAsync(IEnumerable`1&lt;!!0&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.InsertBatchOf1IEnumerableOfM0BatchOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Collections.Generic.IEnumerable{``0},NPoco.BatchOptions,System.Int32})">
            <summary>Establecer el shim de Database.InsertBatch(IEnumerable`1&lt;!!0&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.InsertBulkAsyncOf1IEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions,System.Threading.Tasks.Task})">
            <summary>Establecer el shim de Database.InsertBulkAsync(IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.InsertBulkOf1IEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NPoco.Database,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions})">
            <summary>Establecer el shim de Database.InsertBulk(IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.InsertOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.Object})">
            <summary>Establecer el shim de Database.Insert(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.InsertOf1StringStringBooleanM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.String,System.Boolean,``0,System.Object})">
            <summary>Establecer el shim de Database.Insert(String tableName, String primaryKeyName, Boolean autoIncrement, !!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.InsertOf1StringStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.String,``0,System.Object})">
            <summary>Establecer el shim de Database.Insert(String tableName, String primaryKeyName, !!0 poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.InterceptorsGet">
            <summary>Establecer el shim de Database.get_Interceptors()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.IsNewAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>Establecer el shim de Database.IsNewAsync(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.IsNewAsyncOf1M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.Boolean,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>Establecer el shim de Database.IsNewAsync(!!0 poco, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.IsNewOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.Boolean})">
            <summary>Establecer el shim de Database.IsNew(!!0 poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.IsolationLevelGet">
            <summary>Establecer el shim de Database.get_IsolationLevel()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.KeepConnectionAliveGet">
            <summary>Establecer el shim de Database.get_KeepConnectionAlive()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.KeepConnectionAliveSetBoolean">
            <summary>Establecer el shim de Database.set_KeepConnectionAlive(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.LastArgsGet">
            <summary>Establecer el shim de Database.get_LastArgs()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.LastCommandGet">
            <summary>Establecer el shim de Database.get_LastCommand()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.LastSQLGet">
            <summary>Establecer el shim de Database.get_LastSQL()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.MappersGet">
            <summary>Establecer el shim de Database.get_Mappers()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.MappersSetMapperCollection">
            <summary>Establecer el shim de Database.set_Mappers(MapperCollection value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.NPocoIDatabaseHelpersExecuteNonQueryHelperAsyncDbCommand">
            <summary>Establecer el shim de Database.NPoco.IDatabaseHelpers.ExecuteNonQueryHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.NPocoIDatabaseHelpersExecuteNonQueryHelperDbCommand">
            <summary>Establecer el shim de Database.NPoco.IDatabaseHelpers.ExecuteNonQueryHelper(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.NPocoIDatabaseHelpersExecuteReaderHelperAsyncDbCommand">
            <summary>Establecer el shim de Database.NPoco.IDatabaseHelpers.ExecuteReaderHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.NPocoIDatabaseHelpersExecuteReaderHelperDbCommand">
            <summary>Establecer el shim de Database.NPoco.IDatabaseHelpers.ExecuteReaderHelper(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.NPocoIDatabaseHelpersExecuteScalarHelperAsyncDbCommand">
            <summary>Establecer el shim de Database.NPoco.IDatabaseHelpers.ExecuteScalarHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.NPocoIDatabaseHelpersExecuteScalarHelperDbCommand">
            <summary>Establecer el shim de Database.NPoco.IDatabaseHelpers.ExecuteScalarHelper(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnAbortTransaction">
            <summary>Establecer el shim de Database.OnAbortTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnAbortTransactionInternal">
            <summary>Establecer el shim de Database.OnAbortTransactionInternal()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnBeginTransaction">
            <summary>Establecer el shim de Database.OnBeginTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnBeginTransactionInternal">
            <summary>Establecer el shim de Database.OnBeginTransactionInternal()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnCompleteTransaction">
            <summary>Establecer el shim de Database.OnCompleteTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnCompleteTransactionInternal">
            <summary>Establecer el shim de Database.OnCompleteTransactionInternal()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnConnectionClosingDbConnection">
            <summary>Establecer el shim de Database.OnConnectionClosing(DbConnection conn)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnConnectionClosingInternalDbConnection">
            <summary>Establecer el shim de Database.OnConnectionClosingInternal(DbConnection conn)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnConnectionOpenedDbConnection">
            <summary>Establecer el shim de Database.OnConnectionOpened(DbConnection conn)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnConnectionOpenedInternalDbConnection">
            <summary>Establecer el shim de Database.OnConnectionOpenedInternal(DbConnection conn)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnDeletingDeleteContext">
            <summary>Establecer el shim de Database.OnDeleting(DeleteContext deleteContext)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnDeletingInternalDeleteContext">
            <summary>Establecer el shim de Database.OnDeletingInternal(DeleteContext deleteContext)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnExceptionException">
            <summary>Establecer el shim de Database.OnException(Exception exception)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnExceptionInternalException">
            <summary>Establecer el shim de Database.OnExceptionInternal(Exception exception)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnExecutedCommandDbCommand">
            <summary>Establecer el shim de Database.OnExecutedCommand(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnExecutedCommandInternalDbCommand">
            <summary>Establecer el shim de Database.OnExecutedCommandInternal(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnExecutingCommandDbCommand">
            <summary>Establecer el shim de Database.OnExecutingCommand(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnExecutingCommandInternalDbCommand">
            <summary>Establecer el shim de Database.OnExecutingCommandInternal(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnInsertingInsertContext">
            <summary>Establecer el shim de Database.OnInserting(InsertContext insertContext)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnInsertingInternalInsertContext">
            <summary>Establecer el shim de Database.OnInsertingInternal(InsertContext insertContext)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnUpdatingInternalUpdateContext">
            <summary>Establecer el shim de Database.OnUpdatingInternal(UpdateContext updateContext)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OnUpdatingUpdateContext">
            <summary>Establecer el shim de Database.OnUpdating(UpdateContext updateContext)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OneTimeCommandTimeoutGet">
            <summary>Establecer el shim de Database.get_OneTimeCommandTimeout()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OneTimeCommandTimeoutSetInt32">
            <summary>Establecer el shim de Database.set_OneTimeCommandTimeout(Int32 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OpenSharedConnection">
            <summary>Establecer el shim de Database.OpenSharedConnection()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OpenSharedConnectionImpBoolean">
            <summary>Establecer el shim de Database.OpenSharedConnectionImp(Boolean isInternal)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.OpenSharedConnectionInternal">
            <summary>Establecer el shim de Database.OpenSharedConnectionInternal()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.PageAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{NPoco.Page{``0}}})">
            <summary>Establecer el shim de Database.PageAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.PageAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{NPoco.Page{``0}}})">
            <summary>Establecer el shim de Database.PageAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.PageImpAsyncOf1Int64Int64StringObjectArrayBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Int64,System.Int64,System.String,System.Object[],System.Boolean,System.Threading.Tasks.Task{NPoco.Page{``0}}})">
            <summary>Establecer el shim de Database.PageImpAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.PageOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Int64,System.Int64,NPoco.Sql,NPoco.Page{``0}})">
            <summary>Establecer el shim de Database.Page(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.PageOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Int64,System.Int64,System.String,System.Object[],NPoco.Page{``0}})">
            <summary>Establecer el shim de Database.Page(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.PocoDataFactoryGet">
            <summary>Establecer el shim de Database.get_PocoDataFactory()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.PocoDataFactorySetIPocoDataFactory">
            <summary>Establecer el shim de Database.set_PocoDataFactory(IPocoDataFactory value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.PocoExistsAsyncOf1M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.Boolean,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>Establecer el shim de Database.PocoExistsAsync(!!0 poco, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.QueryAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Linq.IAsyncQueryProviderWithIncludes{``0}})">
            <summary>Establecer el shim de Database.QueryAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.QueryAsyncOf1M0ExpressionOfFuncOfM0IListFuncOfM0ObjectArraySqlPocoData``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object[]},NPoco.Sql,NPoco.PocoData,System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer el shim de Database.QueryAsync(!!0 instance, Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; listExpression, Func`2&lt;!!0,Object[]&gt; idFunc, Sql Sql, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.QueryAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer el shim de Database.QueryAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.QueryAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer el shim de Database.QueryAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.QueryImpOf1M0ExpressionOfFuncOfM0IListFuncOfM0ObjectArraySqlPocoData``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object[]},NPoco.Sql,NPoco.PocoData,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer el shim de Database.QueryImp(!!0 instance, Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; listExpression, Func`2&lt;!!0,Object[]&gt; idFunc, Sql Sql, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.QueryMultipleOf4FuncOfIQueryProviderWithIncludesOfM0IQueryProviderOfM0FuncOfIQueryProviderWithIncludesOfM1IQueryProviderOfM1FuncOfIQueryProviderWithIncludesOfM2IQueryProviderOfM2FuncOfIQueryProviderWithIncludesOfM3IQueryProviderOfM3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Func{NPoco.Linq.IQueryProviderWithIncludes{``0},NPoco.Linq.IQueryProvider{``0}},System.Func{NPoco.Linq.IQueryProviderWithIncludes{``1},NPoco.Linq.IQueryProvider{``1}},System.Func{NPoco.Linq.IQueryProviderWithIncludes{``2},NPoco.Linq.IQueryProvider{``2}},System.Func{NPoco.Linq.IQueryProviderWithIncludes{``3},NPoco.Linq.IQueryProvider{``3}},System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}})">
            <summary>Establecer el shim de Database.QueryMultiple(Func`2&lt;IQueryProviderWithIncludes`1&lt;!!0&gt;,IQueryProvider`1&lt;!!0&gt;&gt; query1, Func`2&lt;IQueryProviderWithIncludes`1&lt;!!1&gt;,IQueryProvider`1&lt;!!1&gt;&gt; query2, Func`2&lt;IQueryProviderWithIncludes`1&lt;!!2&gt;,IQueryProvider`1&lt;!!2&gt;&gt; query3, Func`2&lt;IQueryProviderWithIncludes`1&lt;!!3&gt;,IQueryProvider`1&lt;!!3&gt;&gt; query4)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.QueryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Linq.IQueryProviderWithIncludes{``0}})">
            <summary>Establecer el shim de Database.Query()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.QueryOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,NPoco.Sql,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer el shim de Database.Query(!!0 instance, Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.QueryOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer el shim de Database.Query(Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.QueryOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer el shim de Database.Query(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.QueryTypeSql">
            <summary>Establecer el shim de Database.Query(Type type, Sql Sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.QueryTypeStringObjectArray">
            <summary>Establecer el shim de Database.Query(Type type, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.ReadAsyncOf1ObjectDbDataReaderPocoData``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Object,System.Data.Common.DbDataReader,NPoco.PocoData,System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer el shim de Database.ReadAsync(Object instance, DbDataReader r, PocoData pd)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.ReadOf1ObjectDbDataReaderPocoData``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Object,System.Data.Common.DbDataReader,NPoco.PocoData,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer el shim de Database.Read(Object instance, DbDataReader r, PocoData pd)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.ReadOneToManyAsyncOf1M0DbDataReaderExpressionOfFuncOfM0IListFuncOfM0ObjectArrayPocoData``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.Data.Common.DbDataReader,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object[]},NPoco.PocoData,System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer el shim de Database.ReadOneToManyAsync(!!0 instance, DbDataReader r, Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; listExpression, Func`2&lt;!!0,Object[]&gt; idFunc, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.ReadOneToManyOf1M0DbDataReaderExpressionOfFuncOfM0IListFuncOfM0ObjectArrayPocoData``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.Data.Common.DbDataReader,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object[]},NPoco.PocoData,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer el shim de Database.ReadOneToMany(!!0 instance, DbDataReader r, Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; listExpression, Func`2&lt;!!0,Object[]&gt; idFunc, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SaveAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.Threading.Tasks.Task})">
            <summary>Establecer el shim de Database.SaveAsync(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SaveOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NPoco.Database,``0})">
            <summary>Establecer el shim de Database.Save(!!0 poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.SetTransactionDbTransaction">
            <summary>Establecer el shim de Database.SetTransaction(DbTransaction tran)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ShouldCloseConnectionAutomaticallyGet">
            <summary>Establecer el shim de Database.get_ShouldCloseConnectionAutomatically()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.ShouldCloseConnectionAutomaticallySetBoolean">
            <summary>Establecer el shim de Database.set_ShouldCloseConnectionAutomatically(Boolean value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.SingleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.SingleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleByIdAsyncOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Object,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.SingleByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleByIdOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Object,``0})">
            <summary>Establecer el shim de Database.SingleById(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.SingleInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.SingleInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.Single(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.Single(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleOrDefaultAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.SingleOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleOrDefaultAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.SingleOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleOrDefaultByIdAsyncOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Object,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.SingleOrDefaultByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleOrDefaultByIdOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Object,``0})">
            <summary>Establecer el shim de Database.SingleOrDefaultById(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleOrDefaultIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.SingleOrDefaultInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleOrDefaultIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.SingleOrDefaultInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleOrDefaultOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.SingleOrDefault(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SingleOrDefaultOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.SingleOrDefault(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SkipTakeAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de Database.SkipTakeAsync(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SkipTakeAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de Database.SkipTakeAsync(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SkipTakeOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Int64,System.Int64,NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.SkipTake(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.SkipTakeOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Int64,System.Int64,System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.SkipTake(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.TransactionCountGet">
            <summary>Establecer el shim de Database.get_TransactionCount()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.TransactionCountSetInt32">
            <summary>Establecer el shim de Database.set_TransactionCount(Int32 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.TransactionGet">
            <summary>Establecer el shim de Database.get_Transaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.TransactionIsAbortedGet">
            <summary>Establecer el shim de Database.get_TransactionIsAborted()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.TransactionIsAbortedSetBoolean">
            <summary>Establecer el shim de Database.set_TransactionIsAborted(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.TransactionIsOk">
            <summary>Establecer el shim de Database.TransactionIsOk()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.UpdateAsyncObject">
            <summary>Establecer el shim de Database.UpdateAsync(Object poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.UpdateAsyncObjectIEnumerableOfString">
            <summary>Establecer el shim de Database.UpdateAsync(Object poco, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.UpdateAsyncObjectObjectIEnumerableOfString">
            <summary>Establecer el shim de Database.UpdateAsync(Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.UpdateAsyncOf1M0ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer el shim de Database.UpdateAsync(!!0 poco, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; fields)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.UpdateAsyncStringStringObjectObjectIEnumerableOfString">
            <summary>Establecer el shim de Database.UpdateAsync(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.UpdateBatchAsyncImpOf1IEnumerableOfUpdateBatchOfM0BatchOptionsBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Collections.Generic.IEnumerable{NPoco.UpdateBatch{``0}},NPoco.BatchOptions,System.Boolean,System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer el shim de Database.UpdateBatchAsyncImp(IEnumerable`1&lt;UpdateBatch`1&lt;!!0&gt;&gt; pocos, BatchOptions options, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.UpdateBatchAsyncOf1IEnumerableOfUpdateBatchOfM0BatchOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Collections.Generic.IEnumerable{NPoco.UpdateBatch{``0}},NPoco.BatchOptions,System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer el shim de Database.UpdateBatchAsync(IEnumerable`1&lt;UpdateBatch`1&lt;!!0&gt;&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.UpdateBatchOf1IEnumerableOfUpdateBatchOfM0BatchOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Collections.Generic.IEnumerable{NPoco.UpdateBatch{``0}},NPoco.BatchOptions,System.Int32})">
            <summary>Establecer el shim de Database.UpdateBatch(IEnumerable`1&lt;UpdateBatch`1&lt;!!0&gt;&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.UpdateImpAsyncStringStringObjectObjectIEnumerableOfStringBoolean">
            <summary>Establecer el shim de Database.UpdateImpAsync(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.UpdateManyAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Linq.IAsyncUpdateQueryProvider{``0}})">
            <summary>Establecer el shim de Database.UpdateManyAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.UpdateManyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Linq.IUpdateQueryProvider{``0}})">
            <summary>Establecer el shim de Database.UpdateMany()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.UpdateObject">
            <summary>Establecer el shim de Database.Update(Object poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.UpdateObjectIEnumerableOfString">
            <summary>Establecer el shim de Database.Update(Object poco, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.UpdateObjectObject">
            <summary>Establecer el shim de Database.Update(Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.UpdateObjectObjectIEnumerableOfString">
            <summary>Establecer el shim de Database.Update(Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.UpdateOf1M0ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32})">
            <summary>Establecer el shim de Database.Update(!!0 poco, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.UpdateOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.Sql,System.Int32})">
            <summary>Establecer el shim de Database.Update(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.AllInstances.UpdateOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.String,System.Object[],System.Int32})">
            <summary>Establecer el shim de Database.Update(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.UpdateStringStringObject">
            <summary>Establecer el shim de Database.Update(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.UpdateStringStringObjectIEnumerableOfString">
            <summary>Establecer el shim de Database.Update(String tableName, String primaryKeyName, Object poco, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.UpdateStringStringObjectObject">
            <summary>Establecer el shim de Database.Update(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.UpdateStringStringObjectObjectIEnumerableOfString">
            <summary>Establecer el shim de Database.Update(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.VersionExceptionGet">
            <summary>Establecer el shim de Database.get_VersionException()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances.VersionExceptionSetVersionExceptionHandling">
            <summary>Establecer el shim de Database.set_VersionException(VersionExceptionHandling value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.AllInstances._CreateCommandb__129_0Match">
            <summary>Establecer el shim de Database.&lt;CreateCommand&gt;b__129_0(Match m)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.BeginTransaction">
            <summary>Establecer el shim de Database.BeginTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.BeginTransactionIsolationLevel">
            <summary>Establecer el shim de Database.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.Bind(NPoco.IAsyncDatabase)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.Bind(NPoco.IAsyncQueryDatabase)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.Bind(NPoco.IBaseDatabase)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.Bind(NPoco.IDatabase)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.Bind(NPoco.IDatabaseConfig)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.Bind(NPoco.IDatabaseHelpers)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.Bind(NPoco.IDatabaseQuery)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.Bind(System.IDisposable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.BuildPrimaryKeySqlDatabaseDictionaryOfStringObjectInt32Ref">
            <summary>Establecer el shim de Database.BuildPrimaryKeySql(Database database, Dictionary`2&lt;String,Object&gt; primaryKeyValuePair, Int32&amp; index)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.CloseSharedConnection">
            <summary>Establecer el shim de Database.CloseSharedConnection()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.CloseSharedConnectionInternal">
            <summary>Establecer el shim de Database.CloseSharedConnectionInternal()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.CommandTimeoutGet">
            <summary>Establecer el shim de Database.get_CommandTimeout()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.CommandTimeoutSetInt32">
            <summary>Establecer el shim de Database.set_CommandTimeout(Int32 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.CompleteTransaction">
            <summary>Establecer el shim de Database.CompleteTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ConnectionGet">
            <summary>Establecer el shim de Database.get_Connection()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ConnectionStringGet">
            <summary>Establecer el shim de Database.get_ConnectionString()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ConstructorDbConnection">
            <summary>Establecer el shim de Database.Database(DbConnection connection)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ConstructorDbConnectionDatabaseType">
            <summary>Establecer el shim de Database.Database(DbConnection connection, DatabaseType dbType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ConstructorDbConnectionDatabaseTypeNullableOfIsolationLevel">
            <summary>Establecer el shim de Database.Database(DbConnection connection, DatabaseType dbType, Nullable`1&lt;IsolationLevel&gt; isolationLevel)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ConstructorDbConnectionDatabaseTypeNullableOfIsolationLevelBoolean">
            <summary>Establecer el shim de Database.Database(DbConnection connection, DatabaseType dbType, Nullable`1&lt;IsolationLevel&gt; isolationLevel, Boolean enableAutoSelect)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ConstructorStringDatabaseTypeDbProviderFactory">
            <summary>Establecer el shim de Database.Database(String connectionString, DatabaseType databaseType, DbProviderFactory provider)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ConstructorStringDatabaseTypeDbProviderFactoryNullableOfIsolationLevelBoolean">
            <summary>Establecer el shim de Database.Database(String connectionString, DatabaseType databaseType, DbProviderFactory provider, Nullable`1&lt;IsolationLevel&gt; isolationLevel, Boolean enableAutoSelect)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.CreateCommandDbConnectionCommandTypeStringObjectArray">
            <summary>Establecer el shim de Database.CreateCommand(DbConnection connection, CommandType commandType, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.CreateCommandDbConnectionStringObjectArray">
            <summary>Establecer el shim de Database.CreateCommand(DbConnection connection, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.CreateParameter">
            <summary>Establecer el shim de Database.CreateParameter()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.CreateStoredProcedureCommandDbConnectionStringObjectArray">
            <summary>Establecer el shim de Database.CreateStoredProcedureCommand(DbConnection connection, String name, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.DataGet">
            <summary>Establecer el shim de Database.get_Data()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.DatabaseTypeGet">
            <summary>Establecer el shim de Database.get_DatabaseType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.DeleteAsyncObject">
            <summary>Establecer el shim de Database.DeleteAsync(Object poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.DeleteAsyncStringStringObject">
            <summary>Establecer el shim de Database.DeleteAsync(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.DeleteAsyncStringStringObjectObject">
            <summary>Establecer el shim de Database.DeleteAsync(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.DeleteImpAsyncStringStringObjectObjectBoolean">
            <summary>Establecer el shim de Database.DeleteImpAsync(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.DeleteManyAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IAsyncDeleteQueryProvider{``0}})">
            <summary>Establecer el shim de Database.DeleteManyAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.DeleteManyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IDeleteQueryProvider{``0}})">
            <summary>Establecer el shim de Database.DeleteMany()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.DeleteObject">
            <summary>Establecer el shim de Database.Delete(Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.DeleteOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Int32})">
            <summary>Establecer el shim de Database.Delete(Object pocoOrPrimaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.DeleteOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Int32})">
            <summary>Establecer el shim de Database.Delete(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.DeleteOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Int32})">
            <summary>Establecer el shim de Database.Delete(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.DeleteStringStringObject">
            <summary>Establecer el shim de Database.Delete(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.DeleteStringStringObjectObject">
            <summary>Establecer el shim de Database.Delete(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.DictionaryOf2Sql``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Collections.Generic.Dictionary{``0,``1}})">
            <summary>Establecer el shim de Database.Dictionary(Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.DictionaryOf2StringObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.Dictionary{``0,``1}})">
            <summary>Establecer el shim de Database.Dictionary(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.Dispose">
            <summary>Establecer el shim de Database.Dispose()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.DoPreExecuteDbCommand">
            <summary>Establecer el shim de Database.DoPreExecute(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.EnableAutoSelectGet">
            <summary>Establecer el shim de Database.get_EnableAutoSelect()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.EnableAutoSelectSetBoolean">
            <summary>Establecer el shim de Database.set_EnableAutoSelect(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ExecuteAsyncSql">
            <summary>Establecer el shim de Database.ExecuteAsync(Sql Sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ExecuteAsyncStringObjectArray">
            <summary>Establecer el shim de Database.ExecuteAsync(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ExecuteDataReaderDbCommandBoolean">
            <summary>Establecer el shim de Database.ExecuteDataReader(DbCommand cmd, Boolean sync)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ExecuteNonQueryHelperAsyncDbCommand">
            <summary>Establecer el shim de Database.ExecuteNonQueryHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ExecuteNonQueryHelperDbCommand">
            <summary>Establecer el shim de Database.ExecuteNonQueryHelper(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ExecuteReaderHelperAsyncDbCommand">
            <summary>Establecer el shim de Database.ExecuteReaderHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ExecuteReaderHelperDbCommand">
            <summary>Establecer el shim de Database.ExecuteReaderHelper(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ExecuteScalarAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.ExecuteScalarAsync(Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ExecuteScalarAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.ExecuteScalarAsync(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ExecuteScalarHelperAsyncDbCommand">
            <summary>Establecer el shim de Database.ExecuteScalarHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ExecuteScalarHelperDbCommand">
            <summary>Establecer el shim de Database.ExecuteScalarHelper(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ExecuteScalarOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.ExecuteScalar(Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ExecuteScalarOf1StringCommandTypeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.CommandType,System.Object[],``0})">
            <summary>Establecer el shim de Database.ExecuteScalar(String sql, CommandType commandType, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ExecuteScalarOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.ExecuteScalar(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ExecuteSql">
            <summary>Establecer el shim de Database.Execute(Sql Sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ExecuteStringCommandTypeObjectArray">
            <summary>Establecer el shim de Database.Execute(String sql, CommandType commandType, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ExecuteStringObjectArray">
            <summary>Establecer el shim de Database.Execute(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ExecutionHookAsyncOf1FuncOfTaskOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.ExecutionHookAsync(Func`1&lt;Task`1&lt;!!0&gt;&gt; action)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ExecutionHookOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},``0})">
            <summary>Establecer el shim de Database.ExecutionHook(Func`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ExistsAsyncOf1ObjectBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Boolean,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>Establecer el shim de Database.ExistsAsync(Object primaryKey, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ExistsOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Boolean})">
            <summary>Establecer el shim de Database.Exists(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de Database.FetchAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de Database.FetchAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de Database.FetchAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de Database.FetchAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de Database.FetchAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleAsyncOf2Sql``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleAsyncOf2StringObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleAsyncOf3FuncOfListOfM0ListOfM1M2Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql,System.Threading.Tasks.Task{``2}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleAsyncOf3FuncOfListOfM0ListOfM1M2StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[],System.Threading.Tasks.Task{``2}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleAsyncOf3Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleAsyncOf3StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleAsyncOf4FuncOfListOfM0ListOfM1ListOfM2M3Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql,System.Threading.Tasks.Task{``3}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleAsyncOf4FuncOfListOfM0ListOfM1ListOfM2M3StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[],System.Threading.Tasks.Task{``3}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleAsyncOf4Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleAsyncOf4StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleAsyncOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4Sql``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql,System.Threading.Tasks.Task{``4}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleAsyncOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4StringObjectArray``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[],System.Threading.Tasks.Task{``4}})">
            <summary>Establecer el shim de Database.FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleImpOf5TypeArrayObjectSqlBoolean``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type[],System.Object,NPoco.Sql,System.Boolean,System.Threading.Tasks.Task{``4}})">
            <summary>Establecer el shim de Database.FetchMultipleImp(Type[] types, Object cb, Sql Sql, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleOf2Sql``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}})">
            <summary>Establecer el shim de Database.FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleOf2StringObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}})">
            <summary>Establecer el shim de Database.FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleOf3FuncOfListOfM0ListOfM1M2Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql,``2})">
            <summary>Establecer el shim de Database.FetchMultiple(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleOf3FuncOfListOfM0ListOfM1M2StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[],``2})">
            <summary>Establecer el shim de Database.FetchMultiple(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleOf3Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}})">
            <summary>Establecer el shim de Database.FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleOf3StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}})">
            <summary>Establecer el shim de Database.FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleOf4FuncOfListOfM0ListOfM1ListOfM2M3Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql,``3})">
            <summary>Establecer el shim de Database.FetchMultiple(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleOf4FuncOfListOfM0ListOfM1ListOfM2M3StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[],``3})">
            <summary>Establecer el shim de Database.FetchMultiple(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleOf4Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}})">
            <summary>Establecer el shim de Database.FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleOf4StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}})">
            <summary>Establecer el shim de Database.FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4Sql``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql,``4})">
            <summary>Establecer el shim de Database.FetchMultiple(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchMultipleOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4StringObjectArray``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[],``4})">
            <summary>Establecer el shim de Database.FetchMultiple(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.Fetch()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.Fetch(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.Fetch(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.Fetch(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.Fetch(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchOneToManyOf1ExpressionOfFuncOfM0IListFuncOfM0ObjectSql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object},NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Func`2&lt;!!0,Object&gt; idFunc, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchOneToManyOf1ExpressionOfFuncOfM0IListFuncOfM0ObjectStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object},System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Func`2&lt;!!0,Object&gt; idFunc, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchOneToManyOf1ExpressionOfFuncOfM0IListSql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FetchOneToManyOf1ExpressionOfFuncOfM0IListStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.FetchTypeSql">
            <summary>Establecer el shim de Database.Fetch(Type type, Sql Sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.FetchTypeStringObjectArray">
            <summary>Establecer el shim de Database.Fetch(Type type, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FirstAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.FirstAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FirstAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.FirstAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FirstIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.FirstInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FirstIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.FirstInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FirstOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.First(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FirstOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.First(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FirstOrDefaultAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.FirstOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FirstOrDefaultAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.FirstOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FirstOrDefaultIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.FirstOrDefaultInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FirstOrDefaultIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.FirstOrDefaultInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FirstOrDefaultOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.FirstOrDefault(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.FirstOrDefaultOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.FirstOrDefault(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.FormatCommandDbCommand">
            <summary>Establecer el shim de Database.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.FormatCommandStringObjectArray">
            <summary>Establecer el shim de Database.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.GenerateSingleByIdSqlOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,NPoco.Sql})">
            <summary>Establecer el shim de Database.GenerateSingleByIdSql(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.GetExistsSqlOf1ObjectBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Boolean,NPoco.Sql})">
            <summary>Establecer el shim de Database.GetExistsSql(Object primaryKeyorPoco, Boolean isPoco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.GetPrimaryKeyValuesDatabasePocoDataStringObjectBoolean">
            <summary>Establecer el shim de Database.GetPrimaryKeyValues(Database database, PocoData pocoData, String primaryKeyName, Object primaryKeyValueOrPoco, Boolean isPoco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.GetTransaction">
            <summary>Establecer el shim de Database.GetTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.GetTransactionIsolationLevel">
            <summary>Establecer el shim de Database.GetTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.InsertAsyncImpOf1PocoDataStringStringBooleanM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.PocoData,System.String,System.String,System.Boolean,``0,System.Boolean,System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de Database.InsertAsyncImp(PocoData pocoData, String tableName, String primaryKeyName, Boolean autoIncrement, !!0 poco, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.InsertAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de Database.InsertAsync(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.InsertAsyncOf1StringStringBooleanM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Boolean,``0,System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de Database.InsertAsync(String tableName, String primaryKeyName, Boolean autoIncrement, !!0 poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.InsertAsyncStringStringObject">
            <summary>Establecer el shim de Database.InsertAsync(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.InsertBatchAsyncImpOf1IEnumerableOfM0BatchOptionsBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},NPoco.BatchOptions,System.Boolean,System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer el shim de Database.InsertBatchAsyncImp(IEnumerable`1&lt;!!0&gt; pocos, BatchOptions options, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.InsertBatchAsyncOf1IEnumerableOfM0BatchOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},NPoco.BatchOptions,System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer el shim de Database.InsertBatchAsync(IEnumerable`1&lt;!!0&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.InsertBatchOf1IEnumerableOfM0BatchOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},NPoco.BatchOptions,System.Int32})">
            <summary>Establecer el shim de Database.InsertBatch(IEnumerable`1&lt;!!0&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.InsertBulkAsyncOf1IEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions,System.Threading.Tasks.Task})">
            <summary>Establecer el shim de Database.InsertBulkAsync(IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.InsertBulkOf1IEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions})">
            <summary>Establecer el shim de Database.InsertBulk(IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.InsertOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Object})">
            <summary>Establecer el shim de Database.Insert(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.InsertOf1StringStringBooleanM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Boolean,``0,System.Object})">
            <summary>Establecer el shim de Database.Insert(String tableName, String primaryKeyName, Boolean autoIncrement, !!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.InsertOf1StringStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,``0,System.Object})">
            <summary>Establecer el shim de Database.Insert(String tableName, String primaryKeyName, !!0 poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.InterceptorsGet">
            <summary>Establecer el shim de Database.get_Interceptors()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.IsEnumMemberInfoData">
            <summary>Establecer el shim de Database.IsEnum(MemberInfoData memberInfo)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.IsNewAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>Establecer el shim de Database.IsNewAsync(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.IsNewAsyncOf1M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Boolean,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>Establecer el shim de Database.IsNewAsync(!!0 poco, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.IsNewOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Boolean})">
            <summary>Establecer el shim de Database.IsNew(!!0 poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.IsolationLevelGet">
            <summary>Establecer el shim de Database.get_IsolationLevel()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.KeepConnectionAliveGet">
            <summary>Establecer el shim de Database.get_KeepConnectionAlive()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.KeepConnectionAliveSetBoolean">
            <summary>Establecer el shim de Database.set_KeepConnectionAlive(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.LastArgsGet">
            <summary>Establecer el shim de Database.get_LastArgs()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.LastCommandGet">
            <summary>Establecer el shim de Database.get_LastCommand()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.LastSQLGet">
            <summary>Establecer el shim de Database.get_LastSQL()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.MappersGet">
            <summary>Establecer el shim de Database.get_Mappers()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.MappersSetMapperCollection">
            <summary>Establecer el shim de Database.set_Mappers(MapperCollection value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.NPocoIDatabaseHelpersExecuteNonQueryHelperAsyncDbCommand">
            <summary>Establecer el shim de Database.NPoco.IDatabaseHelpers.ExecuteNonQueryHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.NPocoIDatabaseHelpersExecuteNonQueryHelperDbCommand">
            <summary>Establecer el shim de Database.NPoco.IDatabaseHelpers.ExecuteNonQueryHelper(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.NPocoIDatabaseHelpersExecuteReaderHelperAsyncDbCommand">
            <summary>Establecer el shim de Database.NPoco.IDatabaseHelpers.ExecuteReaderHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.NPocoIDatabaseHelpersExecuteReaderHelperDbCommand">
            <summary>Establecer el shim de Database.NPoco.IDatabaseHelpers.ExecuteReaderHelper(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.NPocoIDatabaseHelpersExecuteScalarHelperAsyncDbCommand">
            <summary>Establecer el shim de Database.NPoco.IDatabaseHelpers.ExecuteScalarHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.NPocoIDatabaseHelpersExecuteScalarHelperDbCommand">
            <summary>Establecer el shim de Database.NPoco.IDatabaseHelpers.ExecuteScalarHelper(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnAbortTransaction">
            <summary>Establecer el shim de Database.OnAbortTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnAbortTransactionInternal">
            <summary>Establecer el shim de Database.OnAbortTransactionInternal()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnBeginTransaction">
            <summary>Establecer el shim de Database.OnBeginTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnBeginTransactionInternal">
            <summary>Establecer el shim de Database.OnBeginTransactionInternal()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnCompleteTransaction">
            <summary>Establecer el shim de Database.OnCompleteTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnCompleteTransactionInternal">
            <summary>Establecer el shim de Database.OnCompleteTransactionInternal()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnConnectionClosingDbConnection">
            <summary>Establecer el shim de Database.OnConnectionClosing(DbConnection conn)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnConnectionClosingInternalDbConnection">
            <summary>Establecer el shim de Database.OnConnectionClosingInternal(DbConnection conn)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnConnectionOpenedDbConnection">
            <summary>Establecer el shim de Database.OnConnectionOpened(DbConnection conn)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnConnectionOpenedInternalDbConnection">
            <summary>Establecer el shim de Database.OnConnectionOpenedInternal(DbConnection conn)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnDeletingDeleteContext">
            <summary>Establecer el shim de Database.OnDeleting(DeleteContext deleteContext)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnDeletingInternalDeleteContext">
            <summary>Establecer el shim de Database.OnDeletingInternal(DeleteContext deleteContext)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnExceptionException">
            <summary>Establecer el shim de Database.OnException(Exception exception)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnExceptionInternalException">
            <summary>Establecer el shim de Database.OnExceptionInternal(Exception exception)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnExecutedCommandDbCommand">
            <summary>Establecer el shim de Database.OnExecutedCommand(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnExecutedCommandInternalDbCommand">
            <summary>Establecer el shim de Database.OnExecutedCommandInternal(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnExecutingCommandDbCommand">
            <summary>Establecer el shim de Database.OnExecutingCommand(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnExecutingCommandInternalDbCommand">
            <summary>Establecer el shim de Database.OnExecutingCommandInternal(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnInsertingInsertContext">
            <summary>Establecer el shim de Database.OnInserting(InsertContext insertContext)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnInsertingInternalInsertContext">
            <summary>Establecer el shim de Database.OnInsertingInternal(InsertContext insertContext)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnUpdatingInternalUpdateContext">
            <summary>Establecer el shim de Database.OnUpdatingInternal(UpdateContext updateContext)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OnUpdatingUpdateContext">
            <summary>Establecer el shim de Database.OnUpdating(UpdateContext updateContext)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OneTimeCommandTimeoutGet">
            <summary>Establecer el shim de Database.get_OneTimeCommandTimeout()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OneTimeCommandTimeoutSetInt32">
            <summary>Establecer el shim de Database.set_OneTimeCommandTimeout(Int32 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OpenSharedConnection">
            <summary>Establecer el shim de Database.OpenSharedConnection()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OpenSharedConnectionImpBoolean">
            <summary>Establecer el shim de Database.OpenSharedConnectionImp(Boolean isInternal)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.OpenSharedConnectionInternal">
            <summary>Establecer el shim de Database.OpenSharedConnectionInternal()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.PageAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{NPoco.Page{``0}}})">
            <summary>Establecer el shim de Database.PageAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.PageAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{NPoco.Page{``0}}})">
            <summary>Establecer el shim de Database.PageAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.PageImpAsyncOf1Int64Int64StringObjectArrayBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Boolean,System.Threading.Tasks.Task{NPoco.Page{``0}}})">
            <summary>Establecer el shim de Database.PageImpAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.PageOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,NPoco.Page{``0}})">
            <summary>Establecer el shim de Database.Page(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.PageOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],NPoco.Page{``0}})">
            <summary>Establecer el shim de Database.Page(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.PocoDataFactoryGet">
            <summary>Establecer el shim de Database.get_PocoDataFactory()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.PocoDataFactorySetIPocoDataFactory">
            <summary>Establecer el shim de Database.set_PocoDataFactory(IPocoDataFactory value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.PocoExistsAsyncOf1M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Boolean,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>Establecer el shim de Database.PocoExistsAsync(!!0 poco, Boolean sync)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ProcessMapperDatabasePocoDataDictionaryOfStringObject">
            <summary>Establecer el shim de Database.ProcessMapper(Database database, PocoData pd, Dictionary`2&lt;String,Object&gt; primaryKeyValuePairs)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.QueryAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IAsyncQueryProviderWithIncludes{``0}})">
            <summary>Establecer el shim de Database.QueryAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.QueryAsyncOf1M0ExpressionOfFuncOfM0IListFuncOfM0ObjectArraySqlPocoData``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object[]},NPoco.Sql,NPoco.PocoData,System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer el shim de Database.QueryAsync(!!0 instance, Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; listExpression, Func`2&lt;!!0,Object[]&gt; idFunc, Sql Sql, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.QueryAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer el shim de Database.QueryAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.QueryAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer el shim de Database.QueryAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.QueryImpOf1M0ExpressionOfFuncOfM0IListFuncOfM0ObjectArraySqlPocoData``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object[]},NPoco.Sql,NPoco.PocoData,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer el shim de Database.QueryImp(!!0 instance, Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; listExpression, Func`2&lt;!!0,Object[]&gt; idFunc, Sql Sql, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.QueryMultipleOf4FuncOfIQueryProviderWithIncludesOfM0IQueryProviderOfM0FuncOfIQueryProviderWithIncludesOfM1IQueryProviderOfM1FuncOfIQueryProviderWithIncludesOfM2IQueryProviderOfM2FuncOfIQueryProviderWithIncludesOfM3IQueryProviderOfM3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{NPoco.Linq.IQueryProviderWithIncludes{``0},NPoco.Linq.IQueryProvider{``0}},System.Func{NPoco.Linq.IQueryProviderWithIncludes{``1},NPoco.Linq.IQueryProvider{``1}},System.Func{NPoco.Linq.IQueryProviderWithIncludes{``2},NPoco.Linq.IQueryProvider{``2}},System.Func{NPoco.Linq.IQueryProviderWithIncludes{``3},NPoco.Linq.IQueryProvider{``3}},System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}})">
            <summary>Establecer el shim de Database.QueryMultiple(Func`2&lt;IQueryProviderWithIncludes`1&lt;!!0&gt;,IQueryProvider`1&lt;!!0&gt;&gt; query1, Func`2&lt;IQueryProviderWithIncludes`1&lt;!!1&gt;,IQueryProvider`1&lt;!!1&gt;&gt; query2, Func`2&lt;IQueryProviderWithIncludes`1&lt;!!2&gt;,IQueryProvider`1&lt;!!2&gt;&gt; query3, Func`2&lt;IQueryProviderWithIncludes`1&lt;!!3&gt;,IQueryProvider`1&lt;!!3&gt;&gt; query4)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.QueryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IQueryProviderWithIncludes{``0}})">
            <summary>Establecer el shim de Database.Query()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.QueryOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NPoco.Sql,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer el shim de Database.Query(!!0 instance, Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.QueryOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer el shim de Database.Query(Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.QueryOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer el shim de Database.Query(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.QueryTypeSql">
            <summary>Establecer el shim de Database.Query(Type type, Sql Sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.QueryTypeStringObjectArray">
            <summary>Establecer el shim de Database.Query(Type type, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ReadAsyncOf1ObjectDbDataReaderPocoData``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Data.Common.DbDataReader,NPoco.PocoData,System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer el shim de Database.ReadAsync(Object instance, DbDataReader r, PocoData pd)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ReadOf1ObjectDbDataReaderPocoData``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Data.Common.DbDataReader,NPoco.PocoData,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer el shim de Database.Read(Object instance, DbDataReader r, PocoData pd)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ReadOneToManyAsyncOf1M0DbDataReaderExpressionOfFuncOfM0IListFuncOfM0ObjectArrayPocoData``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Data.Common.DbDataReader,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object[]},NPoco.PocoData,System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer el shim de Database.ReadOneToManyAsync(!!0 instance, DbDataReader r, Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; listExpression, Func`2&lt;!!0,Object[]&gt; idFunc, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ReadOneToManyOf1M0DbDataReaderExpressionOfFuncOfM0IListFuncOfM0ObjectArrayPocoData``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Data.Common.DbDataReader,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object[]},NPoco.PocoData,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer el shim de Database.ReadOneToMany(!!0 instance, DbDataReader r, Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; listExpression, Func`2&lt;!!0,Object[]&gt; idFunc, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SaveAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task})">
            <summary>Establecer el shim de Database.SaveAsync(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SaveOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Establecer el shim de Database.Save(!!0 poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.SetTransactionDbTransaction">
            <summary>Establecer el shim de Database.SetTransaction(DbTransaction tran)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabase.ShimDontMap">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Database+DontMap</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimDontMap.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimDontMap.#ctor(NPoco.Database.DontMap)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabase.ShimDontMap.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimDontMap.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimDontMap.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimDontMap.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimDontMap.Constructor">
            <summary>Establecer el shim de DontMap.DontMap()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabase.ShimInsertStatements">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Database+InsertStatements</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimInsertStatements.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimInsertStatements.#ctor(NPoco.Database.InsertStatements)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabase.ShimInsertStatements.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimInsertStatements.AssignNonIncrementPrimaryKeyOf1StringM0InsertStatementsDatabasePreparedInsertSql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,NPoco.Database.InsertStatements.PreparedInsertSql,System.Object})">
            <summary>Establecer el shim de InsertStatements.AssignNonIncrementPrimaryKey(String primaryKeyName, !!0 poco, PreparedInsertSql preparedSql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimInsertStatements.AssignPrimaryKeyOf1StringM0ObjectInsertStatementsDatabasePreparedInsertSql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0,System.Object,NPoco.Database.InsertStatements.PreparedInsertSql})">
            <summary>Establecer el shim de InsertStatements.AssignPrimaryKey(String primaryKeyName, !!0 poco, Object id, PreparedInsertSql preparedSql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimInsertStatements.AssignVersionOf1M0InsertStatementsDatabasePreparedInsertSql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,NPoco.Database.InsertStatements.PreparedInsertSql})">
            <summary>Establecer el shim de InsertStatements.AssignVersion(!!0 poco, PreparedInsertSql preparedSql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimInsertStatements.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimInsertStatements.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.Constructor">
            <summary>Establecer el shim de InsertStatements.InsertStatements()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimInsertStatements.PrepareInsertSqlOf1DatabasePocoDataStringStringBooleanM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,NPoco.PocoData,System.String,System.String,System.Boolean,``0,NPoco.Database.InsertStatements.PreparedInsertSql})">
            <summary>Establecer el shim de InsertStatements.PrepareInsertSql(Database database, PocoData pd, String tableName, String primaryKeyName, Boolean autoIncrement, !!0 poco)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Database+InsertStatements+PreparedInsertSql</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.#ctor(NPoco.Database.InsertStatements.PreparedInsertSql)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.AllInstances.PocoDataGet">
            <summary>Establecer el shim de PreparedInsertSql.get_PocoData()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.AllInstances.PocoDataSetPocoData">
            <summary>Establecer el shim de PreparedInsertSql.set_PocoData(PocoData value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.AllInstances.RawvaluesGet">
            <summary>Establecer el shim de PreparedInsertSql.get_Rawvalues()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.AllInstances.RawvaluesSetListOfObject">
            <summary>Establecer el shim de PreparedInsertSql.set_Rawvalues(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.AllInstances.SqlGet">
            <summary>Establecer el shim de PreparedInsertSql.get_Sql()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.AllInstances.SqlSetString">
            <summary>Establecer el shim de PreparedInsertSql.set_Sql(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.AllInstances.VersionNameGet">
            <summary>Establecer el shim de PreparedInsertSql.get_VersionName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.AllInstances.VersionNameSetString">
            <summary>Establecer el shim de PreparedInsertSql.set_VersionName(String value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.Constructor">
            <summary>Establecer el shim de PreparedInsertSql.PreparedInsertSql()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.PocoDataGet">
            <summary>Establecer el shim de PreparedInsertSql.get_PocoData()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.PocoDataSetPocoData">
            <summary>Establecer el shim de PreparedInsertSql.set_PocoData(PocoData value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.RawvaluesGet">
            <summary>Establecer el shim de PreparedInsertSql.get_Rawvalues()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.RawvaluesSetListOfObject">
            <summary>Establecer el shim de PreparedInsertSql.set_Rawvalues(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.SqlGet">
            <summary>Establecer el shim de PreparedInsertSql.get_Sql()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.SqlSetString">
            <summary>Establecer el shim de PreparedInsertSql.set_Sql(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.VersionNameGet">
            <summary>Establecer el shim de PreparedInsertSql.get_VersionName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimInsertStatements.ShimPreparedInsertSql.VersionNameSetString">
            <summary>Establecer el shim de PreparedInsertSql.set_VersionName(String value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabase.ShimUpdateStatements">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Database+UpdateStatements</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimUpdateStatements.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimUpdateStatements.#ctor(NPoco.Database.UpdateStatements)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabase.ShimUpdateStatements.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimUpdateStatements.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.ShimUpdateStatements.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimUpdateStatements.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShimUpdateStatements.Constructor">
            <summary>Establecer el shim de UpdateStatements.UpdateStatements()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShouldCloseConnectionAutomaticallyGet">
            <summary>Establecer el shim de Database.get_ShouldCloseConnectionAutomatically()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.ShouldCloseConnectionAutomaticallySetBoolean">
            <summary>Establecer el shim de Database.set_ShouldCloseConnectionAutomatically(Boolean value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.SingleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.SingleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleByIdAsyncOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.SingleByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleByIdOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Establecer el shim de Database.SingleById(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.SingleInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.SingleInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.Single(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.Single(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleOrDefaultAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.SingleOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleOrDefaultAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.SingleOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleOrDefaultByIdAsyncOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el shim de Database.SingleOrDefaultByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleOrDefaultByIdOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Establecer el shim de Database.SingleOrDefaultById(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleOrDefaultIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.SingleOrDefaultInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleOrDefaultIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.SingleOrDefaultInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleOrDefaultOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,``0})">
            <summary>Establecer el shim de Database.SingleOrDefault(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SingleOrDefaultOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Establecer el shim de Database.SingleOrDefault(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SkipTakeAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de Database.SkipTakeAsync(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SkipTakeAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de Database.SkipTakeAsync(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SkipTakeOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.SkipTake(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.SkipTakeOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de Database.SkipTake(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.TransactionCountGet">
            <summary>Establecer el shim de Database.get_TransactionCount()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.TransactionCountSetInt32">
            <summary>Establecer el shim de Database.set_TransactionCount(Int32 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.TransactionGet">
            <summary>Establecer el shim de Database.get_Transaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.TransactionIsAbortedGet">
            <summary>Establecer el shim de Database.get_TransactionIsAborted()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.TransactionIsAbortedSetBoolean">
            <summary>Establecer el shim de Database.set_TransactionIsAborted(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.TransactionIsOk">
            <summary>Establecer el shim de Database.TransactionIsOk()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.UpdateAsyncObject">
            <summary>Establecer el shim de Database.UpdateAsync(Object poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.UpdateAsyncObjectIEnumerableOfString">
            <summary>Establecer el shim de Database.UpdateAsync(Object poco, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.UpdateAsyncObjectObjectIEnumerableOfString">
            <summary>Establecer el shim de Database.UpdateAsync(Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.UpdateAsyncOf1M0ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer el shim de Database.UpdateAsync(!!0 poco, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; fields)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.UpdateAsyncStringStringObjectObjectIEnumerableOfString">
            <summary>Establecer el shim de Database.UpdateAsync(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.UpdateBatchAsyncImpOf1IEnumerableOfUpdateBatchOfM0BatchOptionsBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{NPoco.UpdateBatch{``0}},NPoco.BatchOptions,System.Boolean,System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer el shim de Database.UpdateBatchAsyncImp(IEnumerable`1&lt;UpdateBatch`1&lt;!!0&gt;&gt; pocos, BatchOptions options, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.UpdateBatchAsyncOf1IEnumerableOfUpdateBatchOfM0BatchOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{NPoco.UpdateBatch{``0}},NPoco.BatchOptions,System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer el shim de Database.UpdateBatchAsync(IEnumerable`1&lt;UpdateBatch`1&lt;!!0&gt;&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.UpdateBatchOf1IEnumerableOfUpdateBatchOfM0BatchOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{NPoco.UpdateBatch{``0}},NPoco.BatchOptions,System.Int32})">
            <summary>Establecer el shim de Database.UpdateBatch(IEnumerable`1&lt;UpdateBatch`1&lt;!!0&gt;&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.UpdateImpAsyncStringStringObjectObjectIEnumerableOfStringBoolean">
            <summary>Establecer el shim de Database.UpdateImpAsync(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns, Boolean sync)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.UpdateManyAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IAsyncUpdateQueryProvider{``0}})">
            <summary>Establecer el shim de Database.UpdateManyAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.UpdateManyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IUpdateQueryProvider{``0}})">
            <summary>Establecer el shim de Database.UpdateMany()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.UpdateObject">
            <summary>Establecer el shim de Database.Update(Object poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.UpdateObjectIEnumerableOfString">
            <summary>Establecer el shim de Database.Update(Object poco, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.UpdateObjectObject">
            <summary>Establecer el shim de Database.Update(Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.UpdateObjectObjectIEnumerableOfString">
            <summary>Establecer el shim de Database.Update(Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.UpdateOf1M0ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32})">
            <summary>Establecer el shim de Database.Update(!!0 poco, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.UpdateOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Int32})">
            <summary>Establecer el shim de Database.Update(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabase.UpdateOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Int32})">
            <summary>Establecer el shim de Database.Update(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.UpdateStringStringObject">
            <summary>Establecer el shim de Database.Update(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.UpdateStringStringObjectIEnumerableOfString">
            <summary>Establecer el shim de Database.Update(String tableName, String primaryKeyName, Object poco, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.UpdateStringStringObjectObject">
            <summary>Establecer el shim de Database.Update(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.UpdateStringStringObjectObjectIEnumerableOfString">
            <summary>Establecer el shim de Database.Update(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.VersionExceptionGet">
            <summary>Establecer el shim de Database.get_VersionException()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase.VersionExceptionSetVersionExceptionHandling">
            <summary>Establecer el shim de Database.set_VersionException(VersionExceptionHandling value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabase._CreateCommandb__129_0Match">
            <summary>Establecer el shim de Database.&lt;CreateCommand&gt;b__129_0(Match m)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabaseFactory">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.DatabaseFactory</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseFactory.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseFactory.#ctor(NPoco.DatabaseFactory)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabaseFactory.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.AllInstances.BuildIDatabase">
            <summary>Establecer el shim de DatabaseFactory.Build(IDatabase database)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.AllInstances.BuildMapperCollectionIDatabase">
            <summary>Establecer el shim de DatabaseFactory.BuildMapperCollection(IDatabase database)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.AllInstances.Config">
            <summary>Establecer el shim de DatabaseFactory.Config()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.AllInstances.ConfigureInterceptorsIDatabase">
            <summary>Establecer el shim de DatabaseFactory.ConfigureInterceptors(IDatabase database)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.AllInstances.ConfigurePocoDataFactoryAndMappersIDatabaseMapperCollection">
            <summary>Establecer el shim de DatabaseFactory.ConfigurePocoDataFactoryAndMappers(IDatabase database, MapperCollection mappers)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.AllInstances.GetDatabase">
            <summary>Establecer el shim de DatabaseFactory.GetDatabase()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.AllInstances.GetPocoDataFactory">
            <summary>Establecer el shim de DatabaseFactory.GetPocoDataFactory()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseFactory.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseFactory.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.BuildIDatabase">
            <summary>Establecer el shim de DatabaseFactory.Build(IDatabase database)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.BuildMapperCollectionIDatabase">
            <summary>Establecer el shim de DatabaseFactory.BuildMapperCollection(IDatabase database)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.Config">
            <summary>Establecer el shim de DatabaseFactory.Config()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.ConfigActionOfDatabaseFactoryConfig">
            <summary>Establecer el shim de DatabaseFactory.Config(Action`1&lt;DatabaseFactoryConfig&gt; optionsAction)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.ConfigureInterceptorsIDatabase">
            <summary>Establecer el shim de DatabaseFactory.ConfigureInterceptors(IDatabase database)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.ConfigurePocoDataFactoryAndMappersIDatabaseMapperCollection">
            <summary>Establecer el shim de DatabaseFactory.ConfigurePocoDataFactoryAndMappers(IDatabase database, MapperCollection mappers)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.Constructor">
            <summary>Establecer el shim de DatabaseFactory.DatabaseFactory()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.ConstructorDatabaseFactoryConfigOptions">
            <summary>Establecer el shim de DatabaseFactory.DatabaseFactory(DatabaseFactoryConfigOptions options)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.GetDatabase">
            <summary>Establecer el shim de DatabaseFactory.GetDatabase()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.GetPocoDataFactory">
            <summary>Establecer el shim de DatabaseFactory.GetPocoDataFactory()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactory.StaticConstructor">
            <summary>Establecer el shim de DatabaseFactory.DatabaseFactory()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabaseFactoryConfig">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.DatabaseFactoryConfig</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseFactoryConfig.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseFactoryConfig.#ctor(NPoco.DatabaseFactoryConfig)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabaseFactoryConfig.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfig.AllInstances.UsingDatabaseFuncOfDatabase">
            <summary>Establecer el shim de DatabaseFactoryConfig.UsingDatabase(Func`1&lt;Database&gt; database)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfig.AllInstances.WithFluentConfigFluentConfig">
            <summary>Establecer el shim de DatabaseFactoryConfig.WithFluentConfig(FluentConfig fluentConfig)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfig.AllInstances.WithInterceptorIInterceptor">
            <summary>Establecer el shim de DatabaseFactoryConfig.WithInterceptor(IInterceptor interceptor)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseFactoryConfig.AllInstances.WithMapperFactoryOf1FuncOfDbDataReaderM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseFactoryConfig,System.Func{System.Data.Common.DbDataReader,``0},NPoco.DatabaseFactoryConfig})">
            <summary>Establecer el shim de DatabaseFactoryConfig.WithMapperFactory(Func`2&lt;DbDataReader,!!0&gt; factory)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfig.AllInstances.WithMapperIMapper">
            <summary>Establecer el shim de DatabaseFactoryConfig.WithMapper(IMapper mapper)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseFactoryConfig.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseFactoryConfig.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfig.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfig.ConstructorDatabaseFactoryConfigOptions">
            <summary>Establecer el shim de DatabaseFactoryConfig.DatabaseFactoryConfig(DatabaseFactoryConfigOptions options)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfig.UsingDatabaseFuncOfDatabase">
            <summary>Establecer el shim de DatabaseFactoryConfig.UsingDatabase(Func`1&lt;Database&gt; database)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfig.WithFluentConfigFluentConfig">
            <summary>Establecer el shim de DatabaseFactoryConfig.WithFluentConfig(FluentConfig fluentConfig)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfig.WithInterceptorIInterceptor">
            <summary>Establecer el shim de DatabaseFactoryConfig.WithInterceptor(IInterceptor interceptor)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseFactoryConfig.WithMapperFactoryOf1FuncOfDbDataReaderM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Data.Common.DbDataReader,``0},NPoco.DatabaseFactoryConfig})">
            <summary>Establecer el shim de DatabaseFactoryConfig.WithMapperFactory(Func`2&lt;DbDataReader,!!0&gt; factory)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfig.WithMapperIMapper">
            <summary>Establecer el shim de DatabaseFactoryConfig.WithMapper(IMapper mapper)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabaseFactoryConfigOptions">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.DatabaseFactoryConfigOptions</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.#ctor(NPoco.DatabaseFactoryConfigOptions)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.AllInstances.DatabaseGet">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.get_Database()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.AllInstances.DatabaseSetFuncOfDatabase">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.set_Database(Func`1&lt;Database&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.AllInstances.InterceptorsGet">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.get_Interceptors()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.AllInstances.InterceptorsSetListOfIInterceptor">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.set_Interceptors(List`1&lt;IInterceptor&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.AllInstances.MapperGet">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.get_Mapper()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.AllInstances.MapperSetMapperCollection">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.set_Mapper(MapperCollection value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.AllInstances.PocoDataFactoryGet">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.get_PocoDataFactory()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.AllInstances.PocoDataFactorySetFluentConfig">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.set_PocoDataFactory(FluentConfig value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.Constructor">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.DatabaseFactoryConfigOptions()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.DatabaseGet">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.get_Database()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.DatabaseSetFuncOfDatabase">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.set_Database(Func`1&lt;Database&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.InterceptorsGet">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.get_Interceptors()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.InterceptorsSetListOfIInterceptor">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.set_Interceptors(List`1&lt;IInterceptor&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.MapperGet">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.get_Mapper()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.MapperSetMapperCollection">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.set_Mapper(MapperCollection value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.PocoDataFactoryGet">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.get_PocoDataFactory()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseFactoryConfigOptions.PocoDataFactorySetFluentConfig">
            <summary>Establecer el shim de DatabaseFactoryConfigOptions.set_PocoDataFactory(FluentConfig value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabaseType">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.DatabaseType</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseType.#ctor(NPoco.DatabaseType)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AddTypeMapTypeDbType">
            <summary>Establecer el shim de DatabaseType.AddTypeMap(Type type, DbType dbType)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDatabaseType.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.AddTypeMapTypeDbType">
            <summary>Establecer el shim de DatabaseType.AddTypeMap(Type type, DbType dbType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.BuildPageQueryInt64Int64PagingHelperSQLPartsObjectArrayRef">
            <summary>Establecer el shim de DatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.EscapeSqlIdentifierString">
            <summary>Establecer el shim de DatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.EscapeTableNameString">
            <summary>Establecer el shim de DatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseType.AllInstances.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseType,NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de DatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseType.AllInstances.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseType,NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer el shim de DatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.ExecuteNonQueryAsyncDatabaseDbCommand">
            <summary>Establecer el shim de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.ExecuteReaderAsyncDatabaseDbCommand">
            <summary>Establecer el shim de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.ExecuteScalarAsyncDatabaseDbCommand">
            <summary>Establecer el shim de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseType.AllInstances.ExpressionVisitorOf1IDatabasePocoData``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseType,NPoco.IDatabase,NPoco.PocoData,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer el shim de DatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseType.AllInstances.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseType,NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer el shim de DatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.FormatCommandDbCommand">
            <summary>Establecer el shim de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.FormatCommandStringObjectArray">
            <summary>Establecer el shim de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.GetAutoIncrementExpressionTableInfo">
            <summary>Establecer el shim de DatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.GetDefaultInsertSqlStringStringBooleanStringArrayStringArray">
            <summary>Establecer el shim de DatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.GetDefaultTransactionIsolationLevel">
            <summary>Establecer el shim de DatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.GetExistsSql">
            <summary>Establecer el shim de DatabaseType.GetExistsSql()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.GetInsertOutputClauseStringBoolean">
            <summary>Establecer el shim de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.GetParameterPrefixString">
            <summary>Establecer el shim de DatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.GetProviderName">
            <summary>Establecer el shim de DatabaseType.GetProviderName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.GetSQLForTransactionLevelIsolationLevel">
            <summary>Establecer el shim de DatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseType.AllInstances.InsertBulkAsyncOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.DatabaseType,NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions,System.Threading.Tasks.Task})">
            <summary>Establecer el shim de DatabaseType.InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseType.AllInstances.InsertBulkOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NPoco.DatabaseType,NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions})">
            <summary>Establecer el shim de DatabaseType.InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.LookupDbTypeTypeString">
            <summary>Establecer el shim de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.MapParameterValueObject">
            <summary>Establecer el shim de DatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.PreExecuteDbCommand">
            <summary>Establecer el shim de DatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.ProcessDefaultMappingsPocoColumnObject">
            <summary>Establecer el shim de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.AllInstances.UseColumnAliases">
            <summary>Establecer el shim de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseType.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseType.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.BuildPageQueryInt64Int64PagingHelperSQLPartsObjectArrayRef">
            <summary>Establecer el shim de DatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.Constructor">
            <summary>Establecer el shim de DatabaseType.DatabaseType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.EscapeSqlIdentifierString">
            <summary>Establecer el shim de DatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.EscapeTableNameString">
            <summary>Establecer el shim de DatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseType.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer el shim de DatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseType.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer el shim de DatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.ExecuteNonQueryAsyncDatabaseDbCommand">
            <summary>Establecer el shim de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.ExecuteReaderAsyncDatabaseDbCommand">
            <summary>Establecer el shim de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.ExecuteScalarAsyncDatabaseDbCommand">
            <summary>Establecer el shim de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseType.ExpressionVisitorOf1IDatabasePocoData``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,NPoco.PocoData,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer el shim de DatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseType.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer el shim de DatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.FirebirdGet">
            <summary>Establecer el shim de DatabaseType.get_Firebird()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.FormatCommandDbCommand">
            <summary>Establecer el shim de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.FormatCommandStringObjectArray">
            <summary>Establecer el shim de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.GetAutoIncrementExpressionTableInfo">
            <summary>Establecer el shim de DatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.GetDefaultInsertSqlStringStringBooleanStringArrayStringArray">
            <summary>Establecer el shim de DatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.GetDefaultTransactionIsolationLevel">
            <summary>Establecer el shim de DatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.GetExistsSql">
            <summary>Establecer el shim de DatabaseType.GetExistsSql()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.GetInsertOutputClauseStringBoolean">
            <summary>Establecer el shim de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.GetParameterPrefixString">
            <summary>Establecer el shim de DatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.GetProviderName">
            <summary>Establecer el shim de DatabaseType.GetProviderName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.GetSQLForTransactionLevelIsolationLevel">
            <summary>Establecer el shim de DatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseType.InsertBulkAsyncOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions,System.Threading.Tasks.Task})">
            <summary>Establecer el shim de DatabaseType.InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDatabaseType.InsertBulkOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions})">
            <summary>Establecer el shim de DatabaseType.InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.LookupDbTypeTypeString">
            <summary>Establecer el shim de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.MapParameterValueObject">
            <summary>Establecer el shim de DatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.MySQLGet">
            <summary>Establecer el shim de DatabaseType.get_MySQL()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.OracleGet">
            <summary>Establecer el shim de DatabaseType.get_Oracle()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.OracleManagedGet">
            <summary>Establecer el shim de DatabaseType.get_OracleManaged()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.PostgreSQLGet">
            <summary>Establecer el shim de DatabaseType.get_PostgreSQL()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.PreExecuteDbCommand">
            <summary>Establecer el shim de DatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.ProcessDefaultMappingsPocoColumnObject">
            <summary>Establecer el shim de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.ResolveStringString">
            <summary>Establecer el shim de DatabaseType.Resolve(String typeName, String providerName)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.SQLCeGet">
            <summary>Establecer el shim de DatabaseType.get_SQLCe()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.SQLiteGet">
            <summary>Establecer el shim de DatabaseType.get_SQLite()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.SqlServer2005Get">
            <summary>Establecer el shim de DatabaseType.get_SqlServer2005()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.SqlServer2008Get">
            <summary>Establecer el shim de DatabaseType.get_SqlServer2008()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.SqlServer2012Get">
            <summary>Establecer el shim de DatabaseType.get_SqlServer2012()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDatabaseType.UseColumnAliases">
            <summary>Establecer el shim de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDefaultMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.DefaultMapper</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDefaultMapper.#ctor(NPoco.DefaultMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDefaultMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDefaultMapper.AllInstances.GetFromDbConverterMemberInfoType">
            <summary>Establecer el shim de DefaultMapper.GetFromDbConverter(MemberInfo destMemberInfo, Type sourceType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDefaultMapper.AllInstances.GetFromDbConverterTypeType">
            <summary>Establecer el shim de DefaultMapper.GetFromDbConverter(Type destType, Type sourceType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDefaultMapper.AllInstances.GetParameterConverterDbCommandType">
            <summary>Establecer el shim de DefaultMapper.GetParameterConverter(DbCommand dbCommand, Type sourceType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDefaultMapper.AllInstances.GetToDbConverterTypeMemberInfo">
            <summary>Establecer el shim de DefaultMapper.GetToDbConverter(Type destType, MemberInfo sourceMemberInfo)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDefaultMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDefaultMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDefaultMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDefaultMapper.Bind(NPoco.IMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDefaultMapper.Constructor">
            <summary>Establecer el shim de DefaultMapper.DefaultMapper()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDefaultMapper.GetFromDbConverterMemberInfoType">
            <summary>Establecer el shim de DefaultMapper.GetFromDbConverter(MemberInfo destMemberInfo, Type sourceType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDefaultMapper.GetFromDbConverterTypeType">
            <summary>Establecer el shim de DefaultMapper.GetFromDbConverter(Type destType, Type sourceType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDefaultMapper.GetParameterConverterDbCommandType">
            <summary>Establecer el shim de DefaultMapper.GetParameterConverter(DbCommand dbCommand, Type sourceType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDefaultMapper.GetToDbConverterTypeMemberInfo">
            <summary>Establecer el shim de DefaultMapper.GetToDbConverter(Type destType, MemberInfo sourceMemberInfo)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDeleteContext">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.DeleteContext</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDeleteContext.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDeleteContext.#ctor(NPoco.DeleteContext)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimDeleteContext.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.AllInstances.PocoGet">
            <summary>Establecer el shim de DeleteContext.get_Poco()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.AllInstances.PocoSetObject">
            <summary>Establecer el shim de DeleteContext.set_Poco(Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.AllInstances.PrimaryKeyNameGet">
            <summary>Establecer el shim de DeleteContext.get_PrimaryKeyName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.AllInstances.PrimaryKeyNameSetString">
            <summary>Establecer el shim de DeleteContext.set_PrimaryKeyName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.AllInstances.PrimaryKeyValueGet">
            <summary>Establecer el shim de DeleteContext.get_PrimaryKeyValue()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.AllInstances.PrimaryKeyValueSetObject">
            <summary>Establecer el shim de DeleteContext.set_PrimaryKeyValue(Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.AllInstances.TableNameGet">
            <summary>Establecer el shim de DeleteContext.get_TableName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.AllInstances.TableNameSetString">
            <summary>Establecer el shim de DeleteContext.set_TableName(String value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDeleteContext.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimDeleteContext.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.ConstructorObjectStringStringObject">
            <summary>Establecer el shim de DeleteContext.DeleteContext(Object poco, String tableName, String primaryKeyName, Object primaryKeyValue)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.PocoGet">
            <summary>Establecer el shim de DeleteContext.get_Poco()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.PocoSetObject">
            <summary>Establecer el shim de DeleteContext.set_Poco(Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.PrimaryKeyNameGet">
            <summary>Establecer el shim de DeleteContext.get_PrimaryKeyName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.PrimaryKeyNameSetString">
            <summary>Establecer el shim de DeleteContext.set_PrimaryKeyName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.PrimaryKeyValueGet">
            <summary>Establecer el shim de DeleteContext.get_PrimaryKeyValue()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.PrimaryKeyValueSetObject">
            <summary>Establecer el shim de DeleteContext.set_PrimaryKeyValue(Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.TableNameGet">
            <summary>Establecer el shim de DeleteContext.get_TableName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimDeleteContext.TableNameSetString">
            <summary>Establecer el shim de DeleteContext.set_TableName(String value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimEnumMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.EnumMapper</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimEnumMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimEnumMapper.#ctor(NPoco.EnumMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimEnumMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimEnumMapper.AllInstances.Dispose">
            <summary>Establecer el shim de EnumMapper.Dispose()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimEnumMapper.AllInstances.EnumFromStringTypeString">
            <summary>Establecer el shim de EnumMapper.EnumFromString(Type type, String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimEnumMapper.AllInstances.PopulateIfNotPresentType">
            <summary>Establecer el shim de EnumMapper.PopulateIfNotPresent(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimEnumMapper.AllInstances.PopulateType">
            <summary>Establecer el shim de EnumMapper.Populate(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimEnumMapper.AllInstances.StringFromEnumObject">
            <summary>Establecer el shim de EnumMapper.StringFromEnum(Object theEnum)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimEnumMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimEnumMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimEnumMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimEnumMapper.Bind(System.IDisposable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimEnumMapper.Constructor">
            <summary>Establecer el shim de EnumMapper.EnumMapper()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimEnumMapper.Dispose">
            <summary>Establecer el shim de EnumMapper.Dispose()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimEnumMapper.EnumFromStringTypeString">
            <summary>Establecer el shim de EnumMapper.EnumFromString(Type type, String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimEnumMapper.PopulateIfNotPresentType">
            <summary>Establecer el shim de EnumMapper.PopulateIfNotPresent(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimEnumMapper.PopulateType">
            <summary>Establecer el shim de EnumMapper.Populate(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimEnumMapper.StringFromEnumObject">
            <summary>Establecer el shim de EnumMapper.StringFromEnum(Object theEnum)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimExpandoColumn">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ExpandoColumn</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimExpandoColumn.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimExpandoColumn.#ctor(NPoco.ExpandoColumn)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimExpandoColumn.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimExpandoColumn.AllInstances.ChangeTypeObject">
            <summary>Establecer el shim de ExpandoColumn.ChangeType(Object val)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimExpandoColumn.AllInstances.GetValueObject">
            <summary>Establecer el shim de ExpandoColumn.GetValue(Object target)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimExpandoColumn.AllInstances.SetValueObjectObject">
            <summary>Establecer el shim de ExpandoColumn.SetValue(Object target, Object val)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimExpandoColumn.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimExpandoColumn.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimExpandoColumn.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimExpandoColumn.ChangeTypeObject">
            <summary>Establecer el shim de ExpandoColumn.ChangeType(Object val)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimExpandoColumn.Constructor">
            <summary>Establecer el shim de ExpandoColumn.ExpandoColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimExpandoColumn.GetValueObject">
            <summary>Establecer el shim de ExpandoColumn.GetValue(Object target)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimExpandoColumn.SetValueObjectObject">
            <summary>Establecer el shim de ExpandoColumn.SetValue(Object target, Object val)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimExplicitColumnsAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ExplicitColumnsAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimExplicitColumnsAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimExplicitColumnsAttribute.#ctor(NPoco.ExplicitColumnsAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimExplicitColumnsAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimExplicitColumnsAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimExplicitColumnsAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimExplicitColumnsAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimExplicitColumnsAttribute.Constructor">
            <summary>Establecer el shim de ExplicitColumnsAttribute.ExplicitColumnsAttribute()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimExpressionExtensions">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ExpressionExtensions</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimExpressionExtensions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimExpressionExtensions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimExpressionExtensions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimExpressionExtensions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimExpressionExtensions.DeleteWhereOf1IDatabaseStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,System.String,System.Object[],System.Int32})">
            <summary>Establecer el shim de ExpressionExtensions.DeleteWhere(IDatabase database, String where, Object[] parameters)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimExpressionExtensions.UpdateWhereOf1IDatabaseM0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,``0,System.String,System.Object[],System.Int32})">
            <summary>Establecer el shim de ExpressionExtensions.UpdateWhere(IDatabase database, !!0 obj, String where, Object[] parameters)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimFastCreate">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FastCreate</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimFastCreate.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimFastCreate.#ctor(NPoco.FastCreate)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimFastCreate.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastCreate.AllInstances.CreateDbDataReader">
            <summary>Establecer el shim de FastCreate.Create(DbDataReader dataReader)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastCreate.AllInstances.GetCreateDelegate">
            <summary>Establecer el shim de FastCreate.GetCreateDelegate()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimFastCreate.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimFastCreate.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastCreate.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastCreate.ConstructorTypeMapperCollection">
            <summary>Establecer el shim de FastCreate.FastCreate(Type type, MapperCollection mapperCollection)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastCreate.CreateDbDataReader">
            <summary>Establecer el shim de FastCreate.Create(DbDataReader dataReader)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastCreate.CreateObjectFactoryMethodWithCtorParamsConstructorInfo">
            <summary>Establecer el shim de FastCreate.CreateObjectFactoryMethodWithCtorParams(ConstructorInfo ctor)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastCreate.EmitInt32ILGeneratorInt32">
            <summary>Establecer el shim de FastCreate.EmitInt32(ILGenerator il, Int32 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastCreate.GetConstructorInfoType">
            <summary>Establecer el shim de FastCreate.GetConstructorInfo(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastCreate.GetCreateDelegate">
            <summary>Establecer el shim de FastCreate.GetCreateDelegate()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimFastJsonColumnSerializer">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FastJsonColumnSerializer</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimFastJsonColumnSerializer.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimFastJsonColumnSerializer.#ctor(NPoco.FastJsonColumnSerializer)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimFastJsonColumnSerializer.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastJsonColumnSerializer.AllInstances.DeserializeStringType">
            <summary>Establecer el shim de FastJsonColumnSerializer.Deserialize(String value, Type targetType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastJsonColumnSerializer.AllInstances.JSONParametersGet">
            <summary>Establecer el shim de FastJsonColumnSerializer.get_JSONParameters()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastJsonColumnSerializer.AllInstances.JSONParametersSetJSONParameters">
            <summary>Establecer el shim de FastJsonColumnSerializer.set_JSONParameters(JSONParameters value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastJsonColumnSerializer.AllInstances.SerializeObject">
            <summary>Establecer el shim de FastJsonColumnSerializer.Serialize(Object value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimFastJsonColumnSerializer.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimFastJsonColumnSerializer.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastJsonColumnSerializer.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimFastJsonColumnSerializer.Bind(NPoco.IColumnSerializer)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastJsonColumnSerializer.Constructor">
            <summary>Establecer el shim de FastJsonColumnSerializer.FastJsonColumnSerializer()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastJsonColumnSerializer.DeserializeStringType">
            <summary>Establecer el shim de FastJsonColumnSerializer.Deserialize(String value, Type targetType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastJsonColumnSerializer.JSONParametersGet">
            <summary>Establecer el shim de FastJsonColumnSerializer.get_JSONParameters()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastJsonColumnSerializer.JSONParametersSetJSONParameters">
            <summary>Establecer el shim de FastJsonColumnSerializer.set_JSONParameters(JSONParameters value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFastJsonColumnSerializer.SerializeObject">
            <summary>Establecer el shim de FastJsonColumnSerializer.Serialize(Object value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimFluentPocoDataFactory">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentPocoDataFactory</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimFluentPocoDataFactory.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimFluentPocoDataFactory.#ctor(NPoco.FluentPocoDataFactory)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimFluentPocoDataFactory.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFluentPocoDataFactory.AllInstances.BaseClassFalbackPocoDataBuilderType">
            <summary>Establecer el shim de FluentPocoDataFactory.BaseClassFalbackPocoDataBuilder(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFluentPocoDataFactory.AllInstances.ForObjectObjectStringBoolean">
            <summary>Establecer el shim de FluentPocoDataFactory.ForObject(Object o, String primaryKeyName, Boolean autoIncrement)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFluentPocoDataFactory.AllInstances.ForTypeType">
            <summary>Establecer el shim de FluentPocoDataFactory.ForType(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFluentPocoDataFactory.AllInstances.ResolverGet">
            <summary>Establecer el shim de FluentPocoDataFactory.get_Resolver()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFluentPocoDataFactory.AllInstances.ResolverSetFuncOfTypeIPocoDataFactoryInitializedPocoDataBuilder">
            <summary>Establecer el shim de FluentPocoDataFactory.set_Resolver(Func`3&lt;Type,IPocoDataFactory,InitializedPocoDataBuilder&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFluentPocoDataFactory.AllInstances.TableInfoForTypeType">
            <summary>Establecer el shim de FluentPocoDataFactory.TableInfoForType(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFluentPocoDataFactory.BaseClassFalbackPocoDataBuilderType">
            <summary>Establecer el shim de FluentPocoDataFactory.BaseClassFalbackPocoDataBuilder(Type type)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimFluentPocoDataFactory.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimFluentPocoDataFactory.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFluentPocoDataFactory.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimFluentPocoDataFactory.Bind(NPoco.IPocoDataFactory)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFluentPocoDataFactory.ConstructorFuncOfTypeIPocoDataFactoryInitializedPocoDataBuilder">
            <summary>Establecer el shim de FluentPocoDataFactory.FluentPocoDataFactory(Func`3&lt;Type,IPocoDataFactory,InitializedPocoDataBuilder&gt; resolver)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFluentPocoDataFactory.ForObjectObjectStringBoolean">
            <summary>Establecer el shim de FluentPocoDataFactory.ForObject(Object o, String primaryKeyName, Boolean autoIncrement)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFluentPocoDataFactory.ForTypeType">
            <summary>Establecer el shim de FluentPocoDataFactory.ForType(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFluentPocoDataFactory.ResolverGet">
            <summary>Establecer el shim de FluentPocoDataFactory.get_Resolver()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFluentPocoDataFactory.ResolverSetFuncOfTypeIPocoDataFactoryInitializedPocoDataBuilder">
            <summary>Establecer el shim de FluentPocoDataFactory.set_Resolver(Func`3&lt;Type,IPocoDataFactory,InitializedPocoDataBuilder&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimFluentPocoDataFactory.TableInfoForTypeType">
            <summary>Establecer el shim de FluentPocoDataFactory.TableInfoForType(Type type)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimIgnoreAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.IgnoreAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimIgnoreAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimIgnoreAttribute.#ctor(NPoco.IgnoreAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimIgnoreAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimIgnoreAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimIgnoreAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimIgnoreAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimIgnoreAttribute.Constructor">
            <summary>Establecer el shim de IgnoreAttribute.IgnoreAttribute()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimInsertBulkOptions">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.InsertBulkOptions</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimInsertBulkOptions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimInsertBulkOptions.#ctor(NPoco.InsertBulkOptions)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimInsertBulkOptions.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertBulkOptions.AllInstances.BulkCopyTimeoutGet">
            <summary>Establecer el shim de InsertBulkOptions.get_BulkCopyTimeout()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertBulkOptions.AllInstances.BulkCopyTimeoutSetNullableOfInt32">
            <summary>Establecer el shim de InsertBulkOptions.set_BulkCopyTimeout(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimInsertBulkOptions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimInsertBulkOptions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertBulkOptions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertBulkOptions.BulkCopyTimeoutGet">
            <summary>Establecer el shim de InsertBulkOptions.get_BulkCopyTimeout()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertBulkOptions.BulkCopyTimeoutSetNullableOfInt32">
            <summary>Establecer el shim de InsertBulkOptions.set_BulkCopyTimeout(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertBulkOptions.Constructor">
            <summary>Establecer el shim de InsertBulkOptions.InsertBulkOptions()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimInsertContext">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.InsertContext</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimInsertContext.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimInsertContext.#ctor(NPoco.InsertContext)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimInsertContext.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.AllInstances.AutoIncrementGet">
            <summary>Establecer el shim de InsertContext.get_AutoIncrement()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.AllInstances.AutoIncrementSetBoolean">
            <summary>Establecer el shim de InsertContext.set_AutoIncrement(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.AllInstances.PocoGet">
            <summary>Establecer el shim de InsertContext.get_Poco()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.AllInstances.PocoSetObject">
            <summary>Establecer el shim de InsertContext.set_Poco(Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.AllInstances.PrimaryKeyNameGet">
            <summary>Establecer el shim de InsertContext.get_PrimaryKeyName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.AllInstances.PrimaryKeyNameSetString">
            <summary>Establecer el shim de InsertContext.set_PrimaryKeyName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.AllInstances.TableNameGet">
            <summary>Establecer el shim de InsertContext.get_TableName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.AllInstances.TableNameSetString">
            <summary>Establecer el shim de InsertContext.set_TableName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.AutoIncrementGet">
            <summary>Establecer el shim de InsertContext.get_AutoIncrement()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.AutoIncrementSetBoolean">
            <summary>Establecer el shim de InsertContext.set_AutoIncrement(Boolean value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimInsertContext.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimInsertContext.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.ConstructorObjectStringBooleanString">
            <summary>Establecer el shim de InsertContext.InsertContext(Object poco, String tableName, Boolean autoIncrement, String primaryKeyName)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.PocoGet">
            <summary>Establecer el shim de InsertContext.get_Poco()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.PocoSetObject">
            <summary>Establecer el shim de InsertContext.set_Poco(Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.PrimaryKeyNameGet">
            <summary>Establecer el shim de InsertContext.get_PrimaryKeyName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.PrimaryKeyNameSetString">
            <summary>Establecer el shim de InsertContext.set_PrimaryKeyName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.TableNameGet">
            <summary>Establecer el shim de InsertContext.get_TableName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimInsertContext.TableNameSetString">
            <summary>Establecer el shim de InsertContext.set_TableName(String value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimMapperCollection">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.MapperCollection</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMapperCollection.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMapperCollection.#ctor(NPoco.MapperCollection)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimMapperCollection.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMapperCollection.AllInstances.ClearFactoriesType">
            <summary>Establecer el shim de MapperCollection.ClearFactories(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMapperCollection.AllInstances.FindAndExecuteFuncOfIMapperFuncOfObjectObjectObject">
            <summary>Establecer el shim de MapperCollection.FindAndExecute(Func`2&lt;IMapper,Func`2&lt;Object,Object&gt;&gt; predicate, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMapperCollection.AllInstances.FindFuncOfIMapperFuncOfObjectObject">
            <summary>Establecer el shim de MapperCollection.Find(Func`2&lt;IMapper,Func`2&lt;Object,Object&gt;&gt; predicate)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMapperCollection.AllInstances.GetFactoryType">
            <summary>Establecer el shim de MapperCollection.GetFactory(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMapperCollection.AllInstances.HasFactoryType">
            <summary>Establecer el shim de MapperCollection.HasFactory(Type type)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMapperCollection.AllInstances.RegisterFactoryOf1FuncOfDbDataReaderM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NPoco.MapperCollection,System.Func{System.Data.Common.DbDataReader,``0}})">
            <summary>Establecer el shim de MapperCollection.RegisterFactory(Func`2&lt;DbDataReader,!!0&gt; factory)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMapperCollection.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMapperCollection.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMapperCollection.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMapperCollection.Bind(System.Collections.ICollection)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMapperCollection.Bind(System.Collections.IEnumerable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMapperCollection.Bind(System.Collections.IList)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMapperCollection.Bind(System.Collections.Generic.ICollection{NPoco.IMapper})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMapperCollection.Bind(System.Collections.Generic.IEnumerable{NPoco.IMapper})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMapperCollection.Bind(System.Collections.Generic.IList{NPoco.IMapper})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMapperCollection.Bind(System.Collections.Generic.IReadOnlyCollection{NPoco.IMapper})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMapperCollection.Bind(System.Collections.Generic.IReadOnlyList{NPoco.IMapper})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMapperCollection.ClearFactoriesType">
            <summary>Establecer el shim de MapperCollection.ClearFactories(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMapperCollection.Constructor">
            <summary>Establecer el shim de MapperCollection.MapperCollection()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMapperCollection.FindAndExecuteFuncOfIMapperFuncOfObjectObjectObject">
            <summary>Establecer el shim de MapperCollection.FindAndExecute(Func`2&lt;IMapper,Func`2&lt;Object,Object&gt;&gt; predicate, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMapperCollection.FindFuncOfIMapperFuncOfObjectObject">
            <summary>Establecer el shim de MapperCollection.Find(Func`2&lt;IMapper,Func`2&lt;Object,Object&gt;&gt; predicate)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMapperCollection.GetFactoryType">
            <summary>Establecer el shim de MapperCollection.GetFactory(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMapperCollection.HasFactoryType">
            <summary>Establecer el shim de MapperCollection.HasFactory(Type type)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMapperCollection.RegisterFactoryOf1FuncOfDbDataReaderM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Func{System.Data.Common.DbDataReader,``0}})">
            <summary>Establecer el shim de MapperCollection.RegisterFactory(Func`2&lt;DbDataReader,!!0&gt; factory)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimMappingFactory">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.MappingFactory</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMappingFactory.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMappingFactory.#ctor(NPoco.MappingFactory)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimMappingFactory.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMappingFactory.AllInstances.MapDbDataReaderObject">
            <summary>Establecer el shim de MappingFactory.Map(DbDataReader dataReader, Object instance)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMappingFactory.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMappingFactory.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMappingFactory.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMappingFactory.ConstructorPocoDataDbDataReader">
            <summary>Establecer el shim de MappingFactory.MappingFactory(PocoData pocoData, DbDataReader dataReader)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMappingFactory.MapDbDataReaderObject">
            <summary>Establecer el shim de MappingFactory.Map(DbDataReader dataReader, Object instance)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMappingFactory.RowMappersGet">
            <summary>Establecer el shim de MappingFactory.get_RowMappers()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMappingFactory.RowMappersSetListOfFuncOfMapperCollectionIRowMapper">
            <summary>Establecer el shim de MappingFactory.set_RowMappers(List`1&lt;Func`2&lt;MapperCollection,IRowMapper&gt;&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMappingFactory.StaticConstructor">
            <summary>Establecer el shim de MappingFactory.MappingFactory()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimMappingHelper">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.MappingHelper</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMappingHelper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMappingHelper.#ctor(NPoco.MappingHelper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimMappingHelper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMappingHelper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMappingHelper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMappingHelper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMappingHelper.Constructor">
            <summary>Establecer el shim de MappingHelper.MappingHelper()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMappingHelper.GetConverterMapperCollectionPocoColumnTypeType">
            <summary>Establecer el shim de MappingHelper.GetConverter(MapperCollection mapper, PocoColumn pc, Type srcType, Type dstType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMappingHelper.GetDefaultType">
            <summary>Establecer el shim de MappingHelper.GetDefault(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMappingHelper.IsIntegralTypeType">
            <summary>Establecer el shim de MappingHelper.IsIntegralType(Type t)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMappingHelper.StaticConstructor">
            <summary>Establecer el shim de MappingHelper.MappingHelper()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimMemberAccessor">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.MemberAccessor</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMemberAccessor.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMemberAccessor.#ctor(NPoco.MemberAccessor)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimMemberAccessor.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberAccessor.AllInstances.GetGetDelegate">
            <summary>Establecer el shim de MemberAccessor.GetGetDelegate()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberAccessor.AllInstances.GetObject">
            <summary>Establecer el shim de MemberAccessor.Get(Object target)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberAccessor.AllInstances.GetSetDelegate">
            <summary>Establecer el shim de MemberAccessor.GetSetDelegate()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberAccessor.AllInstances.SetObjectObject">
            <summary>Establecer el shim de MemberAccessor.Set(Object target, Object value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMemberAccessor.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMemberAccessor.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberAccessor.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberAccessor.ConstructorTypeString">
            <summary>Establecer el shim de MemberAccessor.MemberAccessor(Type targetType, String memberName)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberAccessor.GetGetDelegate">
            <summary>Establecer el shim de MemberAccessor.GetGetDelegate()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberAccessor.GetObject">
            <summary>Establecer el shim de MemberAccessor.Get(Object target)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberAccessor.GetSetDelegate">
            <summary>Establecer el shim de MemberAccessor.GetSetDelegate()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberAccessor.SetObjectObject">
            <summary>Establecer el shim de MemberAccessor.Set(Object target, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberAccessor.StaticConstructor">
            <summary>Establecer el shim de MemberAccessor.MemberAccessor()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimMemberInfoData">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.MemberInfoData</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMemberInfoData.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMemberInfoData.#ctor(NPoco.MemberInfoData)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimMemberInfoData.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.AllInstances.DeclaringTypeGet">
            <summary>Establecer el shim de MemberInfoData.get_DeclaringType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.AllInstances.DeclaringTypeSetType">
            <summary>Establecer el shim de MemberInfoData.set_DeclaringType(Type value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.AllInstances.EqualsMemberInfoData">
            <summary>Establecer el shim de MemberInfoData.Equals(MemberInfoData other)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.AllInstances.EqualsObject">
            <summary>Establecer el shim de MemberInfoData.Equals(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.AllInstances.GetHashCode01">
            <summary>Establecer el shim de MemberInfoData.GetHashCode()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.AllInstances.MemberInfoGet">
            <summary>Establecer el shim de MemberInfoData.get_MemberInfo()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.AllInstances.MemberInfoSetMemberInfo">
            <summary>Establecer el shim de MemberInfoData.set_MemberInfo(MemberInfo value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.AllInstances.MemberTypeGet">
            <summary>Establecer el shim de MemberInfoData.get_MemberType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.AllInstances.MemberTypeSetType">
            <summary>Establecer el shim de MemberInfoData.set_MemberType(Type value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.AllInstances.NameGet">
            <summary>Establecer el shim de MemberInfoData.get_Name()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.AllInstances.NameSetString">
            <summary>Establecer el shim de MemberInfoData.set_Name(String value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMemberInfoData.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMemberInfoData.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimMemberInfoData.Bind(System.IEquatable{NPoco.MemberInfoData})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.ConstructorMemberInfo">
            <summary>Establecer el shim de MemberInfoData.MemberInfoData(MemberInfo memberInfo)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.ConstructorStringTypeType">
            <summary>Establecer el shim de MemberInfoData.MemberInfoData(String name, Type memberType, Type declaringType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.DeclaringTypeGet">
            <summary>Establecer el shim de MemberInfoData.get_DeclaringType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.DeclaringTypeSetType">
            <summary>Establecer el shim de MemberInfoData.set_DeclaringType(Type value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.EqualityOpMemberInfoDataMemberInfoData">
            <summary>Establecer el shim de MemberInfoData.op_Equality(MemberInfoData left, MemberInfoData right)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.EqualsMemberInfoData">
            <summary>Establecer el shim de MemberInfoData.Equals(MemberInfoData other)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.EqualsObject">
            <summary>Establecer el shim de MemberInfoData.Equals(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.GetHashCode">
            <summary>Establecer el shim de MemberInfoData.GetHashCode()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.InequalityOpMemberInfoDataMemberInfoData">
            <summary>Establecer el shim de MemberInfoData.op_Inequality(MemberInfoData left, MemberInfoData right)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.MemberInfoGet">
            <summary>Establecer el shim de MemberInfoData.get_MemberInfo()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.MemberInfoSetMemberInfo">
            <summary>Establecer el shim de MemberInfoData.set_MemberInfo(MemberInfo value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.MemberTypeGet">
            <summary>Establecer el shim de MemberInfoData.get_MemberType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.MemberTypeSetType">
            <summary>Establecer el shim de MemberInfoData.set_MemberType(Type value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.NameGet">
            <summary>Establecer el shim de MemberInfoData.get_Name()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimMemberInfoData.NameSetString">
            <summary>Establecer el shim de MemberInfoData.set_Name(String value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimObjectExtensions">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ObjectExtensions</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimObjectExtensions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimObjectExtensions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimObjectExtensions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimObjectExtensions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimObjectExtensions.CanBeCastToOf1ObjectM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.Object,``0,System.Boolean})">
            <summary>Establecer el shim de ObjectExtensions.CanBeCastTo(Object inValue, !!0&amp; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimObjectExtensions.CopyFieldsObjectIDictionaryOfObjectObjectObjectTypeBindingFlagsFuncOfFieldInfoBoolean">
            <summary>Establecer el shim de ObjectExtensions.CopyFields(Object originalObject, IDictionary`2&lt;Object,Object&gt; visited, Object cloneObject, Type typeToReflect, BindingFlags bindingFlags, Func`2&lt;FieldInfo,Boolean&gt; filter)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimObjectExtensions.CopyObject">
            <summary>Establecer el shim de ObjectExtensions.Copy(Object originalObject)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimObjectExtensions.CopyOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Establecer el shim de ObjectExtensions.Copy(!!0 original)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimObjectExtensions.InternalCopyObjectIDictionaryOfObjectObject">
            <summary>Establecer el shim de ObjectExtensions.InternalCopy(Object originalObject, IDictionary`2&lt;Object,Object&gt; visited)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimObjectExtensions.IsPrimitiveType">
            <summary>Establecer el shim de ObjectExtensions.IsPrimitive(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimObjectExtensions.RecursiveCopyBaseTypePrivateFieldsObjectIDictionaryOfObjectObjectObjectType">
            <summary>Establecer el shim de ObjectExtensions.RecursiveCopyBaseTypePrivateFields(Object originalObject, IDictionary`2&lt;Object,Object&gt; visited, Object cloneObject, Type typeToReflect)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimObjectExtensions.StaticConstructor">
            <summary>Establecer el shim de ObjectExtensions.ObjectExtensions()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimOneToManyHelper">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.OneToManyHelper</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimOneToManyHelper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimOneToManyHelper.#ctor(NPoco.OneToManyHelper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimOneToManyHelper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimOneToManyHelper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimOneToManyHelper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimOneToManyHelper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimOneToManyHelper.Constructor">
            <summary>Establecer el shim de OneToManyHelper.OneToManyHelper()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimOneToManyHelper.SetForeignListOf1FuncOfM0IListPocoMemberObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Func{``0,System.Collections.IList},NPoco.PocoMember,System.Object})">
            <summary>Establecer el shim de OneToManyHelper.SetForeignList(Func`2&lt;!!0,IList&gt; listFunc, PocoMember foreignMember, Object prevPoco)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimOneToManyHelper.SetListValueOf1FuncOfM0IListPocoMemberObjectM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Func{``0,System.Collections.IList},NPoco.PocoMember,System.Object,``0})">
            <summary>Establecer el shim de OneToManyHelper.SetListValue(Func`2&lt;!!0,IList&gt; listFunc, PocoMember pocoMember, Object prevPoco, !!0 poco)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPage`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Page`1</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPage`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPage`1.#ctor(NPoco.Page{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPage`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.AllInstances.CurrentPageGet">
            <summary>Establecer el shim de Page`1.get_CurrentPage()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.AllInstances.CurrentPageSetInt64">
            <summary>Establecer el shim de Page`1.set_CurrentPage(Int64 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.AllInstances.ItemsGet">
            <summary>Establecer el shim de Page`1.get_Items()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.AllInstances.ItemsPerPageGet">
            <summary>Establecer el shim de Page`1.get_ItemsPerPage()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.AllInstances.ItemsPerPageSetInt64">
            <summary>Establecer el shim de Page`1.set_ItemsPerPage(Int64 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.AllInstances.ItemsSetListOfT0">
            <summary>Establecer el shim de Page`1.set_Items(List`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.AllInstances.TotalItemsGet">
            <summary>Establecer el shim de Page`1.get_TotalItems()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.AllInstances.TotalItemsSetInt64">
            <summary>Establecer el shim de Page`1.set_TotalItems(Int64 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.AllInstances.TotalPagesGet">
            <summary>Establecer el shim de Page`1.get_TotalPages()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.AllInstances.TotalPagesSetInt64">
            <summary>Establecer el shim de Page`1.set_TotalPages(Int64 value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPage`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPage`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.Constructor">
            <summary>Establecer el shim de Page`1.Page`1()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.CurrentPageGet">
            <summary>Establecer el shim de Page`1.get_CurrentPage()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.CurrentPageSetInt64">
            <summary>Establecer el shim de Page`1.set_CurrentPage(Int64 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.ItemsGet">
            <summary>Establecer el shim de Page`1.get_Items()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.ItemsPerPageGet">
            <summary>Establecer el shim de Page`1.get_ItemsPerPage()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.ItemsPerPageSetInt64">
            <summary>Establecer el shim de Page`1.set_ItemsPerPage(Int64 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.ItemsSetListOfT0">
            <summary>Establecer el shim de Page`1.set_Items(List`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.TotalItemsGet">
            <summary>Establecer el shim de Page`1.get_TotalItems()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.TotalItemsSetInt64">
            <summary>Establecer el shim de Page`1.set_TotalItems(Int64 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.TotalPagesGet">
            <summary>Establecer el shim de Page`1.get_TotalPages()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPage`1.TotalPagesSetInt64">
            <summary>Establecer el shim de Page`1.set_TotalPages(Int64 value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPagingHelper">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.PagingHelper</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPagingHelper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPagingHelper.#ctor(NPoco.PagingHelper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPagingHelper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPagingHelper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPagingHelper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPagingHelper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPagingHelper.BuildPagingInt64Int64PagingHelperSQLPartsObjectArrayRef">
            <summary>Establecer el shim de PagingHelper.BuildPaging(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPagingHelper.Constructor">
            <summary>Establecer el shim de PagingHelper.PagingHelper()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPagingHelper.ShimSQLParts">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.PagingHelper+SQLParts</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPagingHelper.ShimSQLParts.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPagingHelper.ShimSQLParts.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPagingHelper.ShimSQLParts.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPagingHelper.ShimSQLParts.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPagingHelper.ShimSQLParts.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPagingHelper.SplitSQLStringPagingHelperSQLPartsOut">
            <summary>Establecer el shim de PagingHelper.SplitSQL(String sql, SQLParts&amp; parts)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPagingHelper.StaticConstructor">
            <summary>Establecer el shim de PagingHelper.PagingHelper()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimParameterHelper">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ParameterHelper</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimParameterHelper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimParameterHelper.#ctor(NPoco.ParameterHelper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimParameterHelper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimParameterHelper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimParameterHelper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimParameterHelper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimParameterHelper.Constructor">
            <summary>Establecer el shim de ParameterHelper.ParameterHelper()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimParameterHelper.ProcessParamStringRefStringObjectArrayListOfObjectBoolean">
            <summary>Establecer el shim de ParameterHelper.ProcessParam(String&amp; sql, String rawParam, Object[] args_src, List`1&lt;Object&gt; args_dest, Boolean reuseParameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimParameterHelper.ProcessParamsStringObjectArrayListOfObjectBoolean">
            <summary>Establecer el shim de ParameterHelper.ProcessParams(String sql, Object[] args_src, List`1&lt;Object&gt; args_dest, Boolean reuseParameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimParameterHelper.SetParameterValueDatabaseTypeDbParameterObject">
            <summary>Establecer el shim de ParameterHelper.SetParameterValue(DatabaseType dbType, DbParameter p, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimParameterHelper.StaticConstructor">
            <summary>Establecer el shim de ParameterHelper.ParameterHelper()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPersistedTypeAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.PersistedTypeAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPersistedTypeAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPersistedTypeAttribute.#ctor(NPoco.PersistedTypeAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPersistedTypeAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPersistedTypeAttribute.AllInstances.PersistedTypeGet">
            <summary>Establecer el shim de PersistedTypeAttribute.get_PersistedType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPersistedTypeAttribute.AllInstances.PersistedTypeSetType">
            <summary>Establecer el shim de PersistedTypeAttribute.set_PersistedType(Type value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPersistedTypeAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPersistedTypeAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPersistedTypeAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPersistedTypeAttribute.ConstructorType">
            <summary>Establecer el shim de PersistedTypeAttribute.PersistedTypeAttribute(Type persistedType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPersistedTypeAttribute.PersistedTypeGet">
            <summary>Establecer el shim de PersistedTypeAttribute.get_PersistedType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPersistedTypeAttribute.PersistedTypeSetType">
            <summary>Establecer el shim de PersistedTypeAttribute.set_PersistedType(Type value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPocoColumn">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.PocoColumn</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoColumn.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoColumn.#ctor(NPoco.PocoColumn)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPocoColumn.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.ChangeTypeObject">
            <summary>Establecer el shim de PocoColumn.ChangeType(Object val)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.ColumnAliasGet">
            <summary>Establecer el shim de PocoColumn.get_ColumnAlias()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.ColumnAliasSetString">
            <summary>Establecer el shim de PocoColumn.set_ColumnAlias(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.ColumnTypeGet">
            <summary>Establecer el shim de PocoColumn.get_ColumnType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.ColumnTypeSetType">
            <summary>Establecer el shim de PocoColumn.set_ColumnType(Type value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.ExactColumnNameMatchGet">
            <summary>Establecer el shim de PocoColumn.get_ExactColumnNameMatch()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.ExactColumnNameMatchSetBoolean">
            <summary>Establecer el shim de PocoColumn.set_ExactColumnNameMatch(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.ForceToUtcGet">
            <summary>Establecer el shim de PocoColumn.get_ForceToUtc()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.ForceToUtcSetBoolean">
            <summary>Establecer el shim de PocoColumn.set_ForceToUtc(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.GetColumnValuePocoDataObjectFuncOfPocoColumnObjectObject">
            <summary>Establecer el shim de PocoColumn.GetColumnValue(PocoData pd, Object target, Func`3&lt;PocoColumn,Object,Object&gt; callback)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.GetRecursiveValueObject">
            <summary>Establecer el shim de PocoColumn.GetRecursiveValue(Object target)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.GetValueObject">
            <summary>Establecer el shim de PocoColumn.GetValue(Object target)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.GetValueObjectValueObject">
            <summary>Establecer el shim de PocoColumn.GetValueObjectValue(Object valueObject)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.MemberInfoChainGet">
            <summary>Establecer el shim de PocoColumn.get_MemberInfoChain()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.MemberInfoChainSetListOfMemberInfo">
            <summary>Establecer el shim de PocoColumn.set_MemberInfoChain(List`1&lt;MemberInfo&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.MemberInfoDataGet">
            <summary>Establecer el shim de PocoColumn.get_MemberInfoData()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.MemberInfoDataSetMemberInfoData">
            <summary>Establecer el shim de PocoColumn.set_MemberInfoData(MemberInfoData value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.MemberInfoKeyGet">
            <summary>Establecer el shim de PocoColumn.get_MemberInfoKey()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.ReferenceTypeGet">
            <summary>Establecer el shim de PocoColumn.get_ReferenceType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.ReferenceTypeSetReferenceType">
            <summary>Establecer el shim de PocoColumn.set_ReferenceType(ReferenceType value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.SerializedColumnGet">
            <summary>Establecer el shim de PocoColumn.get_SerializedColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.SerializedColumnSetBoolean">
            <summary>Establecer el shim de PocoColumn.set_SerializedColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.SetMemberAccessorsListOfMemberAccessor">
            <summary>Establecer el shim de PocoColumn.SetMemberAccessors(List`1&lt;MemberAccessor&gt; memberAccessors)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.SetValueObjectAccessorsFastCreateActionOfObjectObjectFuncOfObjectObject">
            <summary>Establecer el shim de PocoColumn.SetValueObjectAccessors(FastCreate fastCreate, Action`2&lt;Object,Object&gt; setter, Func`2&lt;Object,Object&gt; getter)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.SetValueObjectObject">
            <summary>Establecer el shim de PocoColumn.SetValue(Object target, Object val)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.ValueObjectColumnGet">
            <summary>Establecer el shim de PocoColumn.get_ValueObjectColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.ValueObjectColumnNameGet">
            <summary>Establecer el shim de PocoColumn.get_ValueObjectColumnName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.ValueObjectColumnNameSetString">
            <summary>Establecer el shim de PocoColumn.set_ValueObjectColumnName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances.ValueObjectColumnSetBoolean">
            <summary>Establecer el shim de PocoColumn.set_ValueObjectColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.AllInstances._GetColumnValueb__64_1PocoMember">
            <summary>Establecer el shim de PocoColumn.&lt;GetColumnValue&gt;b__64_1(PocoMember x)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoColumn.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoColumn.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.ChangeTypeObject">
            <summary>Establecer el shim de PocoColumn.ChangeType(Object val)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.ColumnAliasGet">
            <summary>Establecer el shim de PocoColumn.get_ColumnAlias()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.ColumnAliasSetString">
            <summary>Establecer el shim de PocoColumn.set_ColumnAlias(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.ColumnTypeGet">
            <summary>Establecer el shim de PocoColumn.get_ColumnType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.ColumnTypeSetType">
            <summary>Establecer el shim de PocoColumn.set_ColumnType(Type value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.Constructor">
            <summary>Establecer el shim de PocoColumn.PocoColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.ExactColumnNameMatchGet">
            <summary>Establecer el shim de PocoColumn.get_ExactColumnNameMatch()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.ExactColumnNameMatchSetBoolean">
            <summary>Establecer el shim de PocoColumn.set_ExactColumnNameMatch(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.ForceToUtcGet">
            <summary>Establecer el shim de PocoColumn.get_ForceToUtc()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.ForceToUtcSetBoolean">
            <summary>Establecer el shim de PocoColumn.set_ForceToUtc(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.GenerateKeyIEnumerableOfMemberInfo">
            <summary>Establecer el shim de PocoColumn.GenerateKey(IEnumerable`1&lt;MemberInfo&gt; memberInfoChain)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.GetColumnValuePocoDataObjectFuncOfPocoColumnObjectObject">
            <summary>Establecer el shim de PocoColumn.GetColumnValue(PocoData pd, Object target, Func`3&lt;PocoColumn,Object,Object&gt; callback)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.GetRecursiveValueObject">
            <summary>Establecer el shim de PocoColumn.GetRecursiveValue(Object target)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.GetValueObject">
            <summary>Establecer el shim de PocoColumn.GetValue(Object target)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.GetValueObjectValueObject">
            <summary>Establecer el shim de PocoColumn.GetValueObjectValue(Object valueObject)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.MemberInfoChainGet">
            <summary>Establecer el shim de PocoColumn.get_MemberInfoChain()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.MemberInfoChainSetListOfMemberInfo">
            <summary>Establecer el shim de PocoColumn.set_MemberInfoChain(List`1&lt;MemberInfo&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.MemberInfoDataGet">
            <summary>Establecer el shim de PocoColumn.get_MemberInfoData()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.MemberInfoDataSetMemberInfoData">
            <summary>Establecer el shim de PocoColumn.set_MemberInfoData(MemberInfoData value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.MemberInfoKeyGet">
            <summary>Establecer el shim de PocoColumn.get_MemberInfoKey()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.ReferenceTypeGet">
            <summary>Establecer el shim de PocoColumn.get_ReferenceType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.ReferenceTypeSetReferenceType">
            <summary>Establecer el shim de PocoColumn.set_ReferenceType(ReferenceType value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.SerializedColumnGet">
            <summary>Establecer el shim de PocoColumn.get_SerializedColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.SerializedColumnSetBoolean">
            <summary>Establecer el shim de PocoColumn.set_SerializedColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.SetMemberAccessorsListOfMemberAccessor">
            <summary>Establecer el shim de PocoColumn.SetMemberAccessors(List`1&lt;MemberAccessor&gt; memberAccessors)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.SetValueObjectAccessorsFastCreateActionOfObjectObjectFuncOfObjectObject">
            <summary>Establecer el shim de PocoColumn.SetValueObjectAccessors(FastCreate fastCreate, Action`2&lt;Object,Object&gt; setter, Func`2&lt;Object,Object&gt; getter)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.SetValueObjectObject">
            <summary>Establecer el shim de PocoColumn.SetValue(Object target, Object val)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.ValueObjectColumnGet">
            <summary>Establecer el shim de PocoColumn.get_ValueObjectColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.ValueObjectColumnNameGet">
            <summary>Establecer el shim de PocoColumn.get_ValueObjectColumnName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.ValueObjectColumnNameSetString">
            <summary>Establecer el shim de PocoColumn.set_ValueObjectColumnName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn.ValueObjectColumnSetBoolean">
            <summary>Establecer el shim de PocoColumn.set_ValueObjectColumn(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoColumn._GetColumnValueb__64_1PocoMember">
            <summary>Establecer el shim de PocoColumn.&lt;GetColumnValue&gt;b__64_1(PocoMember x)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPocoData">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.PocoData</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoData.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoData.#ctor(NPoco.PocoData)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllColumnsGet">
            <summary>Establecer el shim de PocoData.get_AllColumns()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllColumnsSetListOfPocoColumn">
            <summary>Establecer el shim de PocoData.set_AllColumns(List`1&lt;PocoColumn&gt; value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPocoData.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.AllColumnsGet">
            <summary>Establecer el shim de PocoData.get_AllColumns()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.AllColumnsSetListOfPocoColumn">
            <summary>Establecer el shim de PocoData.set_AllColumns(List`1&lt;PocoColumn&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.ColumnsGet">
            <summary>Establecer el shim de PocoData.get_Columns()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.ColumnsSetDictionaryOfStringPocoColumn">
            <summary>Establecer el shim de PocoData.set_Columns(Dictionary`2&lt;String,PocoColumn&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.CreateDelegateGet">
            <summary>Establecer el shim de PocoData.get_CreateDelegate()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.CreateDelegateSetFastCreate">
            <summary>Establecer el shim de PocoData.set_CreateDelegate(FastCreate value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.CreateObjectDbDataReader">
            <summary>Establecer el shim de PocoData.CreateObject(DbDataReader dataReader)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.GetAllMembers">
            <summary>Establecer el shim de PocoData.GetAllMembers()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.GetAllMembersIEnumerableOfPocoMember">
            <summary>Establecer el shim de PocoData.GetAllMembers(IEnumerable`1&lt;PocoMember&gt; pocoMembers)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.GetPrimaryKeyValuesObject">
            <summary>Establecer el shim de PocoData.GetPrimaryKeyValues(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.IsQueryGeneratedGet">
            <summary>Establecer el shim de PocoData.get_IsQueryGenerated()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.IsQueryGeneratedSetBoolean">
            <summary>Establecer el shim de PocoData.set_IsQueryGenerated(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.MapperGet">
            <summary>Establecer el shim de PocoData.get_Mapper()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.MapperSetMapperCollection">
            <summary>Establecer el shim de PocoData.set_Mapper(MapperCollection value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.MembersGet">
            <summary>Establecer el shim de PocoData.get_Members()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.MembersSetListOfPocoMember">
            <summary>Establecer el shim de PocoData.set_Members(List`1&lt;PocoMember&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.PrimaryKeyValuesGet">
            <summary>Establecer el shim de PocoData.get_PrimaryKeyValues()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.QueryColumnsGet">
            <summary>Establecer el shim de PocoData.get_QueryColumns()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.QueryColumnsSetKeyValuePairOfStringPocoColumnArray">
            <summary>Establecer el shim de PocoData.set_QueryColumns(KeyValuePair`2&lt;String,PocoColumn&gt;[] value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.TableInfoGet">
            <summary>Establecer el shim de PocoData.get_TableInfo()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.TableInfoSetTableInfo">
            <summary>Establecer el shim de PocoData.set_TableInfo(TableInfo value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.TypeGet">
            <summary>Establecer el shim de PocoData.get_Type()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances.TypeSetType">
            <summary>Establecer el shim de PocoData.set_Type(Type value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.AllInstances._get_PrimaryKeyValuesb__40_1String">
            <summary>Establecer el shim de PocoData.&lt;get_PrimaryKeyValues&gt;b__40_1(String x)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoData.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoData.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.ColumnsGet">
            <summary>Establecer el shim de PocoData.get_Columns()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.ColumnsSetDictionaryOfStringPocoColumn">
            <summary>Establecer el shim de PocoData.set_Columns(Dictionary`2&lt;String,PocoColumn&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.Constructor">
            <summary>Establecer el shim de PocoData.PocoData()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.ConstructorTypeMapperCollectionFastCreate">
            <summary>Establecer el shim de PocoData.PocoData(Type type, MapperCollection mapper, FastCreate creator)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.CreateDelegateGet">
            <summary>Establecer el shim de PocoData.get_CreateDelegate()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.CreateDelegateSetFastCreate">
            <summary>Establecer el shim de PocoData.set_CreateDelegate(FastCreate value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.CreateObjectDbDataReader">
            <summary>Establecer el shim de PocoData.CreateObject(DbDataReader dataReader)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.GetAllMembers">
            <summary>Establecer el shim de PocoData.GetAllMembers()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.GetAllMembersIEnumerableOfPocoMember">
            <summary>Establecer el shim de PocoData.GetAllMembers(IEnumerable`1&lt;PocoMember&gt; pocoMembers)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.GetPrimaryKeyValuesObject">
            <summary>Establecer el shim de PocoData.GetPrimaryKeyValues(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.IsQueryGeneratedGet">
            <summary>Establecer el shim de PocoData.get_IsQueryGenerated()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.IsQueryGeneratedSetBoolean">
            <summary>Establecer el shim de PocoData.set_IsQueryGenerated(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.MapperGet">
            <summary>Establecer el shim de PocoData.get_Mapper()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.MapperSetMapperCollection">
            <summary>Establecer el shim de PocoData.set_Mapper(MapperCollection value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.MembersGet">
            <summary>Establecer el shim de PocoData.get_Members()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.MembersSetListOfPocoMember">
            <summary>Establecer el shim de PocoData.set_Members(List`1&lt;PocoMember&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.PrimaryKeyValuesGet">
            <summary>Establecer el shim de PocoData.get_PrimaryKeyValues()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.QueryColumnsGet">
            <summary>Establecer el shim de PocoData.get_QueryColumns()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.QueryColumnsSetKeyValuePairOfStringPocoColumnArray">
            <summary>Establecer el shim de PocoData.set_QueryColumns(KeyValuePair`2&lt;String,PocoColumn&gt;[] value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.StaticConstructor">
            <summary>Establecer el shim de PocoData.PocoData()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.TableInfoGet">
            <summary>Establecer el shim de PocoData.get_TableInfo()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.TableInfoSetTableInfo">
            <summary>Establecer el shim de PocoData.set_TableInfo(TableInfo value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.TypeGet">
            <summary>Establecer el shim de PocoData.get_Type()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData.TypeSetType">
            <summary>Establecer el shim de PocoData.set_Type(Type value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoData._get_PrimaryKeyValuesb__40_1String">
            <summary>Establecer el shim de PocoData.&lt;get_PrimaryKeyValues&gt;b__40_1(String x)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPocoDataBuilder">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.PocoDataBuilder</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoDataBuilder.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoDataBuilder.#ctor(NPoco.PocoDataBuilder)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPocoDataBuilder.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances.CreateAliasStringType">
            <summary>Establecer el shim de PocoDataBuilder.CreateAlias(String typeName, Type typeIn)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances.GetColumnInfoMemberInfoType">
            <summary>Establecer el shim de PocoDataBuilder.GetColumnInfo(MemberInfo mi, Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances.GetColumnInfosType">
            <summary>Establecer el shim de PocoDataBuilder.GetColumnInfos(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances.GetColumnNameStringString">
            <summary>Establecer el shim de PocoDataBuilder.GetColumnName(String prefix, String columnName)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances.GetMemberAccessorsIEnumerableOfMemberInfo">
            <summary>Establecer el shim de PocoDataBuilder.GetMemberAccessors(IEnumerable`1&lt;MemberInfo&gt; memberInfos)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances.GetPocoMembersColumnInfoArrayListOfMemberInfoString">
            <summary>Establecer el shim de PocoDataBuilder.GetPocoMembers(ColumnInfo[] columnInfos, List`1&lt;MemberInfo&gt; memberInfos, String prefix)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances.Init">
            <summary>Establecer el shim de PocoDataBuilder.Init()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances.MapperGet">
            <summary>Establecer el shim de PocoDataBuilder.get_Mapper()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances.MapperSetMapperCollection">
            <summary>Establecer el shim de PocoDataBuilder.set_Mapper(MapperCollection value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances.NPocoInitializedPocoDataBuilderBuild">
            <summary>Establecer el shim de PocoDataBuilder.NPoco.InitializedPocoDataBuilder.Build()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances.NPocoInitializedPocoDataBuilderBuildTableInfo">
            <summary>Establecer el shim de PocoDataBuilder.NPoco.InitializedPocoDataBuilder.BuildTableInfo()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances.ShouldIncludePrivateColumnMemberInfoType">
            <summary>Establecer el shim de PocoDataBuilder.ShouldIncludePrivateColumn(MemberInfo mi, Type t)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances.TypeGet">
            <summary>Establecer el shim de PocoDataBuilder.get_Type()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances.TypeSetType">
            <summary>Establecer el shim de PocoDataBuilder.set_Type(Type value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances._memberPlansGet">
            <summary>Establecer el shim de PocoDataBuilder.get__memberPlans()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.AllInstances._memberPlansSetListOfPocoDataBuilderPocoMemberPlan">
            <summary>Establecer el shim de PocoDataBuilder.set__memberPlans(List`1&lt;PocoMemberPlan&gt; value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoDataBuilder.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoDataBuilder.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoDataBuilder.Bind(NPoco.InitializedPocoDataBuilder)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.ConstructorTypeMapperCollection">
            <summary>Establecer el shim de PocoDataBuilder.PocoDataBuilder(Type type, MapperCollection mapper)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.CreateAliasStringType">
            <summary>Establecer el shim de PocoDataBuilder.CreateAlias(String typeName, Type typeIn)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.GetColumnInfoMemberInfoType">
            <summary>Establecer el shim de PocoDataBuilder.GetColumnInfo(MemberInfo mi, Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.GetColumnInfosType">
            <summary>Establecer el shim de PocoDataBuilder.GetColumnInfos(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.GetColumnNameStringString">
            <summary>Establecer el shim de PocoDataBuilder.GetColumnName(String prefix, String columnName)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.GetFastCreateTypeMapperCollectionBooleanBoolean">
            <summary>Establecer el shim de PocoDataBuilder.GetFastCreate(Type memberType, MapperCollection mapperCollection, Boolean isList, Boolean isDynamic)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.GetListTypeTypeBoolean">
            <summary>Establecer el shim de PocoDataBuilder.GetListType(Type memberType, Boolean isList)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.GetMemberAccessorsIEnumerableOfMemberInfo">
            <summary>Establecer el shim de PocoDataBuilder.GetMemberAccessors(IEnumerable`1&lt;MemberInfo&gt; memberInfos)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.GetPocoColumnsIEnumerableOfPocoMemberBoolean">
            <summary>Establecer el shim de PocoDataBuilder.GetPocoColumns(IEnumerable`1&lt;PocoMember&gt; members, Boolean all)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.GetPocoMembersColumnInfoArrayListOfMemberInfoString">
            <summary>Establecer el shim de PocoDataBuilder.GetPocoMembers(ColumnInfo[] columnInfos, List`1&lt;MemberInfo&gt; memberInfos, String prefix)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.Init">
            <summary>Establecer el shim de PocoDataBuilder.Init()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.IsDictionaryTypeType">
            <summary>Establecer el shim de PocoDataBuilder.IsDictionaryType(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.IsListMemberInfo">
            <summary>Establecer el shim de PocoDataBuilder.IsList(MemberInfo mi)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.JoinStringsStringString">
            <summary>Establecer el shim de PocoDataBuilder.JoinStrings(String prefix, String end)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.MapperGet">
            <summary>Establecer el shim de PocoDataBuilder.get_Mapper()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.MapperSetMapperCollection">
            <summary>Establecer el shim de PocoDataBuilder.set_Mapper(MapperCollection value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.NPocoInitializedPocoDataBuilderBuild">
            <summary>Establecer el shim de PocoDataBuilder.NPoco.InitializedPocoDataBuilder.Build()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.NPocoInitializedPocoDataBuilderBuildTableInfo">
            <summary>Establecer el shim de PocoDataBuilder.NPoco.InitializedPocoDataBuilder.BuildTableInfo()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.SetupValueObjectPocoColumnFastCreate">
            <summary>Establecer el shim de PocoDataBuilder.SetupValueObject(PocoColumn pc, FastCreate fastCreate)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.ShouldIncludePrivateColumnMemberInfoType">
            <summary>Establecer el shim de PocoDataBuilder.ShouldIncludePrivateColumn(MemberInfo mi, Type t)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.TypeGet">
            <summary>Establecer el shim de PocoDataBuilder.get_Type()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder.TypeSetType">
            <summary>Establecer el shim de PocoDataBuilder.set_Type(Type value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder._memberPlansGet">
            <summary>Establecer el shim de PocoDataBuilder.get__memberPlans()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataBuilder._memberPlansSetListOfPocoDataBuilderPocoMemberPlan">
            <summary>Establecer el shim de PocoDataBuilder.set__memberPlans(List`1&lt;PocoMemberPlan&gt; value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPocoDataFactory">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.PocoDataFactory</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoDataFactory.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoDataFactory.#ctor(NPoco.PocoDataFactory)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPocoDataFactory.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataFactory.AllInstances.BaseClassFallbackPocoDataBuilderType">
            <summary>Establecer el shim de PocoDataFactory.BaseClassFallbackPocoDataBuilder(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataFactory.AllInstances.ForObjectObjectStringBoolean">
            <summary>Establecer el shim de PocoDataFactory.ForObject(Object o, String primaryKeyName, Boolean autoIncrement)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataFactory.AllInstances.ForTypeType">
            <summary>Establecer el shim de PocoDataFactory.ForType(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataFactory.AllInstances.TableInfoForTypeType">
            <summary>Establecer el shim de PocoDataFactory.TableInfoForType(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataFactory.BaseClassFallbackPocoDataBuilderType">
            <summary>Establecer el shim de PocoDataFactory.BaseClassFallbackPocoDataBuilder(Type type)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoDataFactory.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoDataFactory.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataFactory.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoDataFactory.Bind(NPoco.IPocoDataFactory)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataFactory.ConstructorMapperCollection">
            <summary>Establecer el shim de PocoDataFactory.PocoDataFactory(MapperCollection mapper)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataFactory.ForObjectObjectStringBoolean">
            <summary>Establecer el shim de PocoDataFactory.ForObject(Object o, String primaryKeyName, Boolean autoIncrement)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataFactory.ForObjectStaticObjectStringBooleanFuncOfTypePocoData">
            <summary>Establecer el shim de PocoDataFactory.ForObjectStatic(Object o, String primaryKeyName, Boolean autoIncrement, Func`2&lt;Type,PocoData&gt; fallback)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataFactory.ForTypeType">
            <summary>Establecer el shim de PocoDataFactory.ForType(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataFactory.GuardType">
            <summary>Establecer el shim de PocoDataFactory.Guard(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataFactory.StaticConstructor">
            <summary>Establecer el shim de PocoDataFactory.PocoDataFactory()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoDataFactory.TableInfoForTypeType">
            <summary>Establecer el shim de PocoDataFactory.TableInfoForType(Type type)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPocoExpando">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.PocoExpando</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoExpando.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoExpando.#ctor(NPoco.PocoExpando)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AddKeyValuePairOfStringObject">
            <summary>Establecer el shim de PocoExpando.Add(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AddObjectObject">
            <summary>Establecer el shim de PocoExpando.Add(Object key, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AddStringObject">
            <summary>Establecer el shim de PocoExpando.Add(String key, Object value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPocoExpando.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.AddKeyValuePairOfStringObject">
            <summary>Establecer el shim de PocoExpando.Add(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.AddObjectObject">
            <summary>Establecer el shim de PocoExpando.Add(Object key, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.AddStringObject">
            <summary>Establecer el shim de PocoExpando.Add(String key, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.Clear">
            <summary>Establecer el shim de PocoExpando.Clear()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.ContainsKeyString">
            <summary>Establecer el shim de PocoExpando.ContainsKey(String key)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.ContainsKeyValuePairOfStringObject">
            <summary>Establecer el shim de PocoExpando.Contains(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.ContainsObject">
            <summary>Establecer el shim de PocoExpando.Contains(Object key)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.CopyToArrayInt32">
            <summary>Establecer el shim de PocoExpando.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.CopyToKeyValuePairOfStringObjectArrayInt32">
            <summary>Establecer el shim de PocoExpando.CopyTo(KeyValuePair`2&lt;String,Object&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.CountGet">
            <summary>Establecer el shim de PocoExpando.get_Count()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.GetEnumerator">
            <summary>Establecer el shim de PocoExpando.GetEnumerator()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.IsFixedSizeGet">
            <summary>Establecer el shim de PocoExpando.get_IsFixedSize()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.IsReadOnlyGet">
            <summary>Establecer el shim de PocoExpando.get_IsReadOnly()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.IsSynchronizedGet">
            <summary>Establecer el shim de PocoExpando.get_IsSynchronized()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.ItemGetObject">
            <summary>Establecer el shim de PocoExpando.get_Item(Object key)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.ItemGetString">
            <summary>Establecer el shim de PocoExpando.get_Item(String key)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.ItemSetObjectObject">
            <summary>Establecer el shim de PocoExpando.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.ItemSetStringObject">
            <summary>Establecer el shim de PocoExpando.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.KeysGet">
            <summary>Establecer el shim de PocoExpando.get_Keys()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.KeysSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de PocoExpando.System.Collections.IDictionary.get_Keys()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.RemoveKeyValuePairOfStringObject">
            <summary>Establecer el shim de PocoExpando.Remove(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.RemoveObject">
            <summary>Establecer el shim de PocoExpando.Remove(Object key)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.RemoveString">
            <summary>Establecer el shim de PocoExpando.Remove(String key)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.SyncRootGet">
            <summary>Establecer el shim de PocoExpando.get_SyncRoot()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.SystemCollectionsIDictionaryGetEnumerator">
            <summary>Establecer el shim de PocoExpando.System.Collections.IDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de PocoExpando.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.TryDeleteMemberDeleteMemberBinder">
            <summary>Establecer el shim de PocoExpando.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.TryGetMemberGetMemberBinderObjectOut">
            <summary>Establecer el shim de PocoExpando.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.TryGetValueStringObjectOut">
            <summary>Establecer el shim de PocoExpando.TryGetValue(String key, Object&amp; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Establecer el shim de PocoExpando.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.TrySetMemberSetMemberBinderObject">
            <summary>Establecer el shim de PocoExpando.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.ValuesGet">
            <summary>Establecer el shim de PocoExpando.get_Values()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.AllInstances.ValuesSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de PocoExpando.System.Collections.IDictionary.get_Values()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoExpando.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoExpando.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoExpando.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoExpando.Bind(System.Collections.ICollection)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoExpando.Bind(System.Collections.IDictionary)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoExpando.Bind(System.Collections.IEnumerable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoExpando.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoExpando.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoExpando.Bind(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.Clear">
            <summary>Establecer el shim de PocoExpando.Clear()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.Constructor">
            <summary>Establecer el shim de PocoExpando.PocoExpando()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.ContainsKeyString">
            <summary>Establecer el shim de PocoExpando.ContainsKey(String key)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.ContainsKeyValuePairOfStringObject">
            <summary>Establecer el shim de PocoExpando.Contains(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.ContainsObject">
            <summary>Establecer el shim de PocoExpando.Contains(Object key)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.CopyToArrayInt32">
            <summary>Establecer el shim de PocoExpando.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.CopyToKeyValuePairOfStringObjectArrayInt32">
            <summary>Establecer el shim de PocoExpando.CopyTo(KeyValuePair`2&lt;String,Object&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.CountGet">
            <summary>Establecer el shim de PocoExpando.get_Count()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.GetEnumerator">
            <summary>Establecer el shim de PocoExpando.GetEnumerator()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.IsFixedSizeGet">
            <summary>Establecer el shim de PocoExpando.get_IsFixedSize()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.IsReadOnlyGet">
            <summary>Establecer el shim de PocoExpando.get_IsReadOnly()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.IsSynchronizedGet">
            <summary>Establecer el shim de PocoExpando.get_IsSynchronized()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.ItemGetObject">
            <summary>Establecer el shim de PocoExpando.get_Item(Object key)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.ItemGetString">
            <summary>Establecer el shim de PocoExpando.get_Item(String key)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.ItemSetObjectObject">
            <summary>Establecer el shim de PocoExpando.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.ItemSetStringObject">
            <summary>Establecer el shim de PocoExpando.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.KeysGet">
            <summary>Establecer el shim de PocoExpando.get_Keys()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.KeysSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de PocoExpando.System.Collections.IDictionary.get_Keys()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.RemoveKeyValuePairOfStringObject">
            <summary>Establecer el shim de PocoExpando.Remove(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.RemoveObject">
            <summary>Establecer el shim de PocoExpando.Remove(Object key)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.RemoveString">
            <summary>Establecer el shim de PocoExpando.Remove(String key)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.SyncRootGet">
            <summary>Establecer el shim de PocoExpando.get_SyncRoot()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.SystemCollectionsIDictionaryGetEnumerator">
            <summary>Establecer el shim de PocoExpando.System.Collections.IDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de PocoExpando.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.TryDeleteMemberDeleteMemberBinder">
            <summary>Establecer el shim de PocoExpando.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.TryGetMemberGetMemberBinderObjectOut">
            <summary>Establecer el shim de PocoExpando.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.TryGetValueStringObjectOut">
            <summary>Establecer el shim de PocoExpando.TryGetValue(String key, Object&amp; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Establecer el shim de PocoExpando.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.TrySetMemberSetMemberBinderObject">
            <summary>Establecer el shim de PocoExpando.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.ValuesGet">
            <summary>Establecer el shim de PocoExpando.get_Values()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoExpando.ValuesSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de PocoExpando.System.Collections.IDictionary.get_Values()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPocoMember">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.PocoMember</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoMember.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoMember.#ctor(NPoco.PocoMember)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPocoMember.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.CreateDbDataReader">
            <summary>Establecer el shim de PocoMember.Create(DbDataReader dataReader)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.CreateList">
            <summary>Establecer el shim de PocoMember.CreateList()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.GetValueObject">
            <summary>Establecer el shim de PocoMember.GetValue(Object target)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.IsDynamicGet">
            <summary>Establecer el shim de PocoMember.get_IsDynamic()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.IsDynamicSetBoolean">
            <summary>Establecer el shim de PocoMember.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.IsListGet">
            <summary>Establecer el shim de PocoMember.get_IsList()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.IsListSetBoolean">
            <summary>Establecer el shim de PocoMember.set_IsList(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.MemberInfoChainGet">
            <summary>Establecer el shim de PocoMember.get_MemberInfoChain()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.MemberInfoChainSetListOfMemberInfo">
            <summary>Establecer el shim de PocoMember.set_MemberInfoChain(List`1&lt;MemberInfo&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.MemberInfoDataGet">
            <summary>Establecer el shim de PocoMember.get_MemberInfoData()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.MemberInfoDataSetMemberInfoData">
            <summary>Establecer el shim de PocoMember.set_MemberInfoData(MemberInfoData value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.NameGet">
            <summary>Establecer el shim de PocoMember.get_Name()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.PocoColumnGet">
            <summary>Establecer el shim de PocoMember.get_PocoColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.PocoColumnSetPocoColumn">
            <summary>Establecer el shim de PocoMember.set_PocoColumn(PocoColumn value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.PocoMemberChildrenGet">
            <summary>Establecer el shim de PocoMember.get_PocoMemberChildren()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.PocoMemberChildrenSetListOfPocoMember">
            <summary>Establecer el shim de PocoMember.set_PocoMemberChildren(List`1&lt;PocoMember&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.ReferenceMemberNameGet">
            <summary>Establecer el shim de PocoMember.get_ReferenceMemberName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.ReferenceMemberNameSetString">
            <summary>Establecer el shim de PocoMember.set_ReferenceMemberName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.ReferenceTypeGet">
            <summary>Establecer el shim de PocoMember.get_ReferenceType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.ReferenceTypeSetReferenceType">
            <summary>Establecer el shim de PocoMember.set_ReferenceType(ReferenceType value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.SetDynamicMemberAccessorFastCreate">
            <summary>Establecer el shim de PocoMember.SetDynamicMemberAccessor(FastCreate fastCreate)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.SetMemberAccessorMemberAccessorFastCreateType">
            <summary>Establecer el shim de PocoMember.SetMemberAccessor(MemberAccessor memberAccessor, FastCreate fastCreate, Type listType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.AllInstances.SetValueObjectObject">
            <summary>Establecer el shim de PocoMember.SetValue(Object target, Object value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoMember.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPocoMember.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.Constructor">
            <summary>Establecer el shim de PocoMember.PocoMember()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.CreateDbDataReader">
            <summary>Establecer el shim de PocoMember.Create(DbDataReader dataReader)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.CreateList">
            <summary>Establecer el shim de PocoMember.CreateList()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.GetValueObject">
            <summary>Establecer el shim de PocoMember.GetValue(Object target)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.IsDynamicGet">
            <summary>Establecer el shim de PocoMember.get_IsDynamic()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.IsDynamicSetBoolean">
            <summary>Establecer el shim de PocoMember.set_IsDynamic(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.IsListGet">
            <summary>Establecer el shim de PocoMember.get_IsList()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.IsListSetBoolean">
            <summary>Establecer el shim de PocoMember.set_IsList(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.MemberInfoChainGet">
            <summary>Establecer el shim de PocoMember.get_MemberInfoChain()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.MemberInfoChainSetListOfMemberInfo">
            <summary>Establecer el shim de PocoMember.set_MemberInfoChain(List`1&lt;MemberInfo&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.MemberInfoDataGet">
            <summary>Establecer el shim de PocoMember.get_MemberInfoData()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.MemberInfoDataSetMemberInfoData">
            <summary>Establecer el shim de PocoMember.set_MemberInfoData(MemberInfoData value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.NameGet">
            <summary>Establecer el shim de PocoMember.get_Name()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.PocoColumnGet">
            <summary>Establecer el shim de PocoMember.get_PocoColumn()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.PocoColumnSetPocoColumn">
            <summary>Establecer el shim de PocoMember.set_PocoColumn(PocoColumn value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.PocoMemberChildrenGet">
            <summary>Establecer el shim de PocoMember.get_PocoMemberChildren()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.PocoMemberChildrenSetListOfPocoMember">
            <summary>Establecer el shim de PocoMember.set_PocoMemberChildren(List`1&lt;PocoMember&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.ReferenceMemberNameGet">
            <summary>Establecer el shim de PocoMember.get_ReferenceMemberName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.ReferenceMemberNameSetString">
            <summary>Establecer el shim de PocoMember.set_ReferenceMemberName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.ReferenceTypeGet">
            <summary>Establecer el shim de PocoMember.get_ReferenceType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.ReferenceTypeSetReferenceType">
            <summary>Establecer el shim de PocoMember.set_ReferenceType(ReferenceType value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.SetDynamicMemberAccessorFastCreate">
            <summary>Establecer el shim de PocoMember.SetDynamicMemberAccessor(FastCreate fastCreate)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.SetMemberAccessorMemberAccessorFastCreateType">
            <summary>Establecer el shim de PocoMember.SetMemberAccessor(MemberAccessor memberAccessor, FastCreate fastCreate, Type listType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPocoMember.SetValueObjectObject">
            <summary>Establecer el shim de PocoMember.SetValue(Object target, Object value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPrimaryKeyAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.PrimaryKeyAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPrimaryKeyAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPrimaryKeyAttribute.#ctor(NPoco.PrimaryKeyAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimPrimaryKeyAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.AllInstances.AutoIncrementGet">
            <summary>Establecer el shim de PrimaryKeyAttribute.get_AutoIncrement()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.AllInstances.AutoIncrementSetBoolean">
            <summary>Establecer el shim de PrimaryKeyAttribute.set_AutoIncrement(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.AllInstances.SequenceNameGet">
            <summary>Establecer el shim de PrimaryKeyAttribute.get_SequenceName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.AllInstances.SequenceNameSetString">
            <summary>Establecer el shim de PrimaryKeyAttribute.set_SequenceName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.AllInstances.UseOutputClauseGet">
            <summary>Establecer el shim de PrimaryKeyAttribute.get_UseOutputClause()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.AllInstances.UseOutputClauseSetBoolean">
            <summary>Establecer el shim de PrimaryKeyAttribute.set_UseOutputClause(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.AllInstances.ValueGet">
            <summary>Establecer el shim de PrimaryKeyAttribute.get_Value()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.AllInstances.ValueSetString">
            <summary>Establecer el shim de PrimaryKeyAttribute.set_Value(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.AutoIncrementGet">
            <summary>Establecer el shim de PrimaryKeyAttribute.get_AutoIncrement()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.AutoIncrementSetBoolean">
            <summary>Establecer el shim de PrimaryKeyAttribute.set_AutoIncrement(Boolean value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPrimaryKeyAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimPrimaryKeyAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.ConstructorString">
            <summary>Establecer el shim de PrimaryKeyAttribute.PrimaryKeyAttribute(String primaryKey)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.ConstructorStringArray">
            <summary>Establecer el shim de PrimaryKeyAttribute.PrimaryKeyAttribute(String[] primaryKey)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.SequenceNameGet">
            <summary>Establecer el shim de PrimaryKeyAttribute.get_SequenceName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.SequenceNameSetString">
            <summary>Establecer el shim de PrimaryKeyAttribute.set_SequenceName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.UseOutputClauseGet">
            <summary>Establecer el shim de PrimaryKeyAttribute.get_UseOutputClause()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.UseOutputClauseSetBoolean">
            <summary>Establecer el shim de PrimaryKeyAttribute.set_UseOutputClause(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.ValueGet">
            <summary>Establecer el shim de PrimaryKeyAttribute.get_Value()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimPrimaryKeyAttribute.ValueSetString">
            <summary>Establecer el shim de PrimaryKeyAttribute.set_Value(String value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimReferenceAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ReferenceAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimReferenceAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimReferenceAttribute.#ctor(NPoco.ReferenceAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimReferenceAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceAttribute.AllInstances.ColumnNameGet">
            <summary>Establecer el shim de ReferenceAttribute.get_ColumnName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceAttribute.AllInstances.ColumnNameSetString">
            <summary>Establecer el shim de ReferenceAttribute.set_ColumnName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceAttribute.AllInstances.ReferenceMemberNameGet">
            <summary>Establecer el shim de ReferenceAttribute.get_ReferenceMemberName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceAttribute.AllInstances.ReferenceMemberNameSetString">
            <summary>Establecer el shim de ReferenceAttribute.set_ReferenceMemberName(String value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimReferenceAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimReferenceAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceAttribute.ColumnNameGet">
            <summary>Establecer el shim de ReferenceAttribute.get_ColumnName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceAttribute.ColumnNameSetString">
            <summary>Establecer el shim de ReferenceAttribute.set_ColumnName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceAttribute.Constructor">
            <summary>Establecer el shim de ReferenceAttribute.ReferenceAttribute()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceAttribute.ConstructorReferenceType">
            <summary>Establecer el shim de ReferenceAttribute.ReferenceAttribute(ReferenceType referenceType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceAttribute.ReferenceMemberNameGet">
            <summary>Establecer el shim de ReferenceAttribute.get_ReferenceMemberName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceAttribute.ReferenceMemberNameSetString">
            <summary>Establecer el shim de ReferenceAttribute.set_ReferenceMemberName(String value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimReferenceEqualityComparer">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ReferenceEqualityComparer</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimReferenceEqualityComparer.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimReferenceEqualityComparer.#ctor(NPoco.ReferenceEqualityComparer)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimReferenceEqualityComparer.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceEqualityComparer.AllInstances.EqualsObjectObject">
            <summary>Establecer el shim de ReferenceEqualityComparer.Equals(Object x, Object y)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceEqualityComparer.AllInstances.GetHashCodeObject">
            <summary>Establecer el shim de ReferenceEqualityComparer.GetHashCode(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimReferenceEqualityComparer.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimReferenceEqualityComparer.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceEqualityComparer.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimReferenceEqualityComparer.Bind(System.Collections.IEqualityComparer)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimReferenceEqualityComparer.Bind(System.Collections.Generic.IEqualityComparer{System.Object})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceEqualityComparer.Constructor">
            <summary>Establecer el shim de ReferenceEqualityComparer.ReferenceEqualityComparer()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceEqualityComparer.EqualsObjectObject">
            <summary>Establecer el shim de ReferenceEqualityComparer.Equals(Object x, Object y)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReferenceEqualityComparer.GetHashCodeObject">
            <summary>Establecer el shim de ReferenceEqualityComparer.GetHashCode(Object obj)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimReflectionUtils">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ReflectionUtils</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimReflectionUtils.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimReflectionUtils.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimReflectionUtils.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.GetCustomAttributesMemberInfo">
            <summary>Establecer el shim de ReflectionUtils.GetCustomAttributes(MemberInfo memberInfo)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.GetCustomAttributesMemberInfoType">
            <summary>Establecer el shim de ReflectionUtils.GetCustomAttributes(MemberInfo memberInfo, Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.GetFieldsAndPropertiesForClassesType">
            <summary>Establecer el shim de ReflectionUtils.GetFieldsAndPropertiesForClasses(Type type)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimReflectionUtils.GetFieldsAndPropertiesOf1BindingFlags``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.BindingFlags,System.Collections.Generic.List{System.Reflection.MemberInfo}})">
            <summary>Establecer el shim de ReflectionUtils.GetFieldsAndProperties(BindingFlags bindingAttr)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.GetFieldsAndPropertiesType">
            <summary>Establecer el shim de ReflectionUtils.GetFieldsAndProperties(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.GetFieldsAndPropertiesTypeBindingFlags">
            <summary>Establecer el shim de ReflectionUtils.GetFieldsAndProperties(Type type, BindingFlags bindingAttr)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.GetGenericTypeType">
            <summary>Establecer el shim de ReflectionUtils.GetGenericType(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.GetMemberInfoTypeMemberInfo">
            <summary>Establecer el shim de ReflectionUtils.GetMemberInfoType(MemberInfo member)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.GetPrivatePropertiesForClassesType">
            <summary>Establecer el shim de ReflectionUtils.GetPrivatePropertiesForClasses(Type type)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.GetSetMethodOnDeclaringTypePropertyInfo">
            <summary>Establecer el shim de ReflectionUtils.GetSetMethodOnDeclaringType(PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.GetTypeWithGenericTypeDefinitionOfTypeType">
            <summary>Establecer el shim de ReflectionUtils.GetTypeWithGenericTypeDefinitionOf(Type type, Type genericTypeDefinition)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.GetTypeWithInterfaceOfTypeType">
            <summary>Establecer el shim de ReflectionUtils.GetTypeWithInterfaceOf(Type type, Type interfaceType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.IsDynamicMemberInfo">
            <summary>Establecer el shim de ReflectionUtils.IsDynamic(MemberInfo member)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.IsFieldMemberInfo">
            <summary>Establecer el shim de ReflectionUtils.IsField(MemberInfo member)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.IsOfGenericTypeTypeType">
            <summary>Establecer el shim de ReflectionUtils.IsOfGenericType(Type instanceType, Type genericType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimReflectionUtils.IsOrHasGenericInterfaceTypeOfTypeType">
            <summary>Establecer el shim de ReflectionUtils.IsOrHasGenericInterfaceTypeOf(Type type, Type genericTypeDefinition)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimRelationExtensions">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.RelationExtensions</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimRelationExtensions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimRelationExtensions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimRelationExtensions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimRelationExtensions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimRelator">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Relator</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimRelator.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimRelator.#ctor(NPoco.Relator)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimRelator.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimRelator.AllInstances.OneToManyOf2M0M1FuncOfM0Object``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Relator,``0,``1,System.Func{``0,System.Object},``0})">
            <summary>Establecer el shim de Relator.OneToMany(!!0 main, !!1 sub, Func`2&lt;!!0,Object&gt; idFunc)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimRelator.AllInstances.OneToManyOf2M0M1FuncOfM0ObjectFuncOfM1Object``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Relator,``0,``1,System.Func{``0,System.Object},System.Func{``1,System.Object},``0})">
            <summary>Establecer el shim de Relator.OneToMany(!!0 main, !!1 sub, Func`2&lt;!!0,Object&gt; idFunc, Func`2&lt;!!1,Object&gt; subIdFunc)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimRelator.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimRelator.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimRelator.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimRelator.Constructor">
            <summary>Establecer el shim de Relator.Relator()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimRelator.GetDefaultType">
            <summary>Establecer el shim de Relator.GetDefault(Type type)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimRelator.OneToManyOf2M0M1FuncOfM0Object``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,System.Func{``0,System.Object},``0})">
            <summary>Establecer el shim de Relator.OneToMany(!!0 main, !!1 sub, Func`2&lt;!!0,Object&gt; idFunc)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimRelator.OneToManyOf2M0M1FuncOfM0ObjectFuncOfM1Object``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,System.Func{``0,System.Object},System.Func{``1,System.Object},``0})">
            <summary>Establecer el shim de Relator.OneToMany(!!0 main, !!1 sub, Func`2&lt;!!0,Object&gt; idFunc, Func`2&lt;!!1,Object&gt; subIdFunc)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimRelator.ThrowPropertyNotFoundExceptionOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Establecer el shim de Relator.ThrowPropertyNotFoundException()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimResultColumnAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.ResultColumnAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimResultColumnAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimResultColumnAttribute.#ctor(NPoco.ResultColumnAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimResultColumnAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimResultColumnAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimResultColumnAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimResultColumnAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimResultColumnAttribute.Constructor">
            <summary>Establecer el shim de ResultColumnAttribute.ResultColumnAttribute()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimResultColumnAttribute.ConstructorString">
            <summary>Establecer el shim de ResultColumnAttribute.ResultColumnAttribute(String name)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSerializedColumnAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.SerializedColumnAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSerializedColumnAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSerializedColumnAttribute.#ctor(NPoco.SerializedColumnAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSerializedColumnAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSerializedColumnAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSerializedColumnAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSerializedColumnAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSerializedColumnAttribute.Constructor">
            <summary>Establecer el shim de SerializedColumnAttribute.SerializedColumnAttribute()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSerializedColumnAttribute.ConstructorString">
            <summary>Establecer el shim de SerializedColumnAttribute.SerializedColumnAttribute(String name)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSnapshot`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Snapshot`1</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSnapshot`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSnapshot`1.#ctor(NPoco.Snapshot{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSnapshot`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.AllInstances.Changes">
            <summary>Establecer el shim de Snapshot`1.Changes()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.AllInstances.OverrideTrackedObjectT0">
            <summary>Establecer el shim de Snapshot`1.OverrideTrackedObject(!0 obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.AllInstances.PopulateValuesT0">
            <summary>Establecer el shim de Snapshot`1.PopulateValues(!0 original)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.AllInstances.UpdatedColumns">
            <summary>Establecer el shim de Snapshot`1.UpdatedColumns()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.AreEqualObjectObject">
            <summary>Establecer el shim de Snapshot`1.AreEqual(Object first, Object second)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSnapshot`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSnapshot`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.Changes">
            <summary>Establecer el shim de Snapshot`1.Changes()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ConstructorPocoDataT0">
            <summary>Establecer el shim de Snapshot`1.Snapshot`1(PocoData pocoData, !0 trackedObject)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.OverrideTrackedObjectT0">
            <summary>Establecer el shim de Snapshot`1.OverrideTrackedObject(!0 obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.PopulateValuesT0">
            <summary>Establecer el shim de Snapshot`1.PopulateValues(!0 original)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSnapshot`1.ShimChange">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Snapshot`1+Change</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSnapshot`1.ShimChange.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSnapshot`1.ShimChange.#ctor(NPoco.Snapshot{`0}.Change)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSnapshot`1.ShimChange.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.AllInstances.ColumnNameGet">
            <summary>Establecer el shim de Change.get_ColumnName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.AllInstances.ColumnNameSetString">
            <summary>Establecer el shim de Change.set_ColumnName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.AllInstances.NameGet">
            <summary>Establecer el shim de Change.get_Name()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.AllInstances.NameSetString">
            <summary>Establecer el shim de Change.set_Name(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.AllInstances.NewValueGet">
            <summary>Establecer el shim de Change.get_NewValue()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.AllInstances.NewValueSetObject">
            <summary>Establecer el shim de Change.set_NewValue(Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.AllInstances.OldValueGet">
            <summary>Establecer el shim de Change.get_OldValue()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.AllInstances.OldValueSetObject">
            <summary>Establecer el shim de Change.set_OldValue(Object value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSnapshot`1.ShimChange.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSnapshot`1.ShimChange.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.ColumnNameGet">
            <summary>Establecer el shim de Change.get_ColumnName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.ColumnNameSetString">
            <summary>Establecer el shim de Change.set_ColumnName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.Constructor">
            <summary>Establecer el shim de Change.Change()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.NameGet">
            <summary>Establecer el shim de Change.get_Name()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.NameSetString">
            <summary>Establecer el shim de Change.set_Name(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.NewValueGet">
            <summary>Establecer el shim de Change.get_NewValue()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.NewValueSetObject">
            <summary>Establecer el shim de Change.set_NewValue(Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.OldValueGet">
            <summary>Establecer el shim de Change.get_OldValue()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.ShimChange.OldValueSetObject">
            <summary>Establecer el shim de Change.set_OldValue(Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshot`1.UpdatedColumns">
            <summary>Establecer el shim de Snapshot`1.UpdatedColumns()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSnapshotter">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Snapshotter</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSnapshotter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSnapshotter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSnapshotter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSnapshotter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSnapshotter.StartSnapshotOf1IDatabaseM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,``0,NPoco.Snapshot{``0}})">
            <summary>Establecer el shim de Snapshotter.StartSnapshot(IDatabase d, !!0 obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSnapshotter.UpdateOf1IDatabaseM0SnapshotOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,``0,NPoco.Snapshot{``0},System.Int32})">
            <summary>Establecer el shim de Snapshotter.Update(IDatabase d, !!0 obj, Snapshot`1&lt;!!0&gt; snapshot)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSql">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Sql</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql.#ctor(NPoco.Sql)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSql.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.AppendSql">
            <summary>Establecer el shim de Sql.Append(Sql sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.AppendStringObjectArray">
            <summary>Establecer el shim de Sql.Append(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.ArgumentsGet">
            <summary>Establecer el shim de Sql.get_Arguments()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.Build">
            <summary>Establecer el shim de Sql.Build()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.BuildStringBuilderListOfObjectSql">
            <summary>Establecer el shim de Sql.Build(StringBuilder sb, List`1&lt;Object&gt; args, Sql lhs)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.ConcatSqlString">
            <summary>Establecer el shim de Sql.Concat(Sql sql, String delimiter)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.FromObjectArray">
            <summary>Establecer el shim de Sql.From(Object[] tables)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.GroupByObjectArray">
            <summary>Establecer el shim de Sql.GroupBy(Object[] columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.InnerJoinString">
            <summary>Establecer el shim de Sql.InnerJoin(String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.JoinStringString">
            <summary>Establecer el shim de Sql.Join(String joinType, String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.LeftJoinString">
            <summary>Establecer el shim de Sql.LeftJoin(String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.OrderByObjectArray">
            <summary>Establecer el shim de Sql.OrderBy(Object[] columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.ReuseParametersGet">
            <summary>Establecer el shim de Sql.get_ReuseParameters()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.ReuseParametersSetBoolean">
            <summary>Establecer el shim de Sql.set_ReuseParameters(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.RightJoinString">
            <summary>Establecer el shim de Sql.RightJoin(String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.SQLGet">
            <summary>Establecer el shim de Sql.get_SQL()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.SelectObjectArray">
            <summary>Establecer el shim de Sql.Select(Object[] columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AllInstances.WhereStringObjectArray">
            <summary>Establecer el shim de Sql.Where(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AppendSql">
            <summary>Establecer el shim de Sql.Append(Sql sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.AppendStringObjectArray">
            <summary>Establecer el shim de Sql.Append(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.ArgumentsGet">
            <summary>Establecer el shim de Sql.get_Arguments()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.Build">
            <summary>Establecer el shim de Sql.Build()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.BuildStringBuilderListOfObjectSql">
            <summary>Establecer el shim de Sql.Build(StringBuilder sb, List`1&lt;Object&gt; args, Sql lhs)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql.BuilderForOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NPoco.Sql{``0}})">
            <summary>Establecer el shim de Sql.BuilderFor(!!0 context)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.BuilderGet">
            <summary>Establecer el shim de Sql.get_Builder()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.ConcatSqlString">
            <summary>Establecer el shim de Sql.Concat(Sql sql, String delimiter)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.Constructor">
            <summary>Establecer el shim de Sql.Sql()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.ConstructorBooleanStringObjectArray">
            <summary>Establecer el shim de Sql.Sql(Boolean isBuilt, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.ConstructorStringObjectArray">
            <summary>Establecer el shim de Sql.Sql(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.FromObjectArray">
            <summary>Establecer el shim de Sql.From(Object[] tables)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.GroupByObjectArray">
            <summary>Establecer el shim de Sql.GroupBy(Object[] columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.ImplicitOpSqlBuilderTemplateSql">
            <summary>Establecer el shim de Sql.op_Implicit(Template template)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.InnerJoinString">
            <summary>Establecer el shim de Sql.InnerJoin(String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.IsSqlString">
            <summary>Establecer el shim de Sql.Is(Sql sql, String sqltype)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.JoinStringString">
            <summary>Establecer el shim de Sql.Join(String joinType, String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.LeftJoinString">
            <summary>Establecer el shim de Sql.LeftJoin(String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.OrderByObjectArray">
            <summary>Establecer el shim de Sql.OrderBy(Object[] columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.ReuseParametersGet">
            <summary>Establecer el shim de Sql.get_ReuseParameters()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.ReuseParametersSetBoolean">
            <summary>Establecer el shim de Sql.set_ReuseParameters(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.RightJoinString">
            <summary>Establecer el shim de Sql.RightJoin(String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.SQLGet">
            <summary>Establecer el shim de Sql.get_SQL()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.SelectObjectArray">
            <summary>Establecer el shim de Sql.Select(Object[] columns)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSql.ShimSqlJoinClause">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Sql+SqlJoinClause</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql.ShimSqlJoinClause.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql.ShimSqlJoinClause.#ctor(NPoco.Sql.SqlJoinClause)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSql.ShimSqlJoinClause.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.ShimSqlJoinClause.AllInstances.OnStringObjectArray">
            <summary>Establecer el shim de SqlJoinClause.On(String onClause, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql.ShimSqlJoinClause.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql.ShimSqlJoinClause.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.ShimSqlJoinClause.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.ShimSqlJoinClause.ConstructorSql">
            <summary>Establecer el shim de SqlJoinClause.SqlJoinClause(Sql sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.ShimSqlJoinClause.OnStringObjectArray">
            <summary>Establecer el shim de SqlJoinClause.On(String onClause, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql.WhereStringObjectArray">
            <summary>Establecer el shim de Sql.Where(String sql, Object[] args)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSql`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Sql`1</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql`1.#ctor(NPoco.Sql{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSql`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AllInstances.AppendSql">
            <summary>Establecer el shim de Sql`1.Append(Sql sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AllInstances.AppendSqlOfT0">
            <summary>Establecer el shim de Sql`1.Append(Sql`1&lt;!0&gt; sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AllInstances.AppendStringObjectArray">
            <summary>Establecer el shim de Sql`1.Append(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AllInstances.FromObjectArray">
            <summary>Establecer el shim de Sql`1.From(Object[] tables)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AllInstances.GroupByObjectArray">
            <summary>Establecer el shim de Sql`1.GroupBy(Object[] columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AllInstances.InnerJoinString">
            <summary>Establecer el shim de Sql`1.InnerJoin(String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AllInstances.JoinStringString">
            <summary>Establecer el shim de Sql`1.Join(String joinType, String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AllInstances.LeftJoinString">
            <summary>Establecer el shim de Sql`1.LeftJoin(String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AllInstances.OrderByObjectArray">
            <summary>Establecer el shim de Sql`1.OrderBy(Object[] columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AllInstances.RightJoinString">
            <summary>Establecer el shim de Sql`1.RightJoin(String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AllInstances.SelectObjectArray">
            <summary>Establecer el shim de Sql`1.Select(Object[] columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AllInstances.SqlContextGet">
            <summary>Establecer el shim de Sql`1.get_SqlContext()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AllInstances.WhereStringObjectArray">
            <summary>Establecer el shim de Sql`1.Where(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AppendSql">
            <summary>Establecer el shim de Sql`1.Append(Sql sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AppendSqlOfT0">
            <summary>Establecer el shim de Sql`1.Append(Sql`1&lt;!0&gt; sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.AppendStringObjectArray">
            <summary>Establecer el shim de Sql`1.Append(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.ConstructorT0">
            <summary>Establecer el shim de Sql`1.Sql`1(!0 sqlContext)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.ConstructorT0BooleanStringObjectArray">
            <summary>Establecer el shim de Sql`1.Sql`1(!0 sqlContext, Boolean isBuilt, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.ConstructorT0StringObjectArray">
            <summary>Establecer el shim de Sql`1.Sql`1(!0 sqlContext, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.FromObjectArray">
            <summary>Establecer el shim de Sql`1.From(Object[] tables)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.GroupByObjectArray">
            <summary>Establecer el shim de Sql`1.GroupBy(Object[] columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.InnerJoinString">
            <summary>Establecer el shim de Sql`1.InnerJoin(String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.JoinStringString">
            <summary>Establecer el shim de Sql`1.Join(String joinType, String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.LeftJoinString">
            <summary>Establecer el shim de Sql`1.LeftJoin(String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.OrderByObjectArray">
            <summary>Establecer el shim de Sql`1.OrderBy(Object[] columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.RightJoinString">
            <summary>Establecer el shim de Sql`1.RightJoin(String table)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.SelectObjectArray">
            <summary>Establecer el shim de Sql`1.Select(Object[] columns)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSql`1.ShimSqlJoinClause`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Sql`1+SqlJoinClause`1</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql`1.ShimSqlJoinClause`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql`1.ShimSqlJoinClause`1.#ctor(NPoco.Sql{`0}.SqlJoinClause{`1})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSql`1.ShimSqlJoinClause`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.ShimSqlJoinClause`1.AllInstances.OnStringObjectArray">
            <summary>Establecer el shim de SqlJoinClause`1.On(String onClause, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.ShimSqlJoinClause`1.AllInstances.SqlContextGet">
            <summary>Establecer el shim de SqlJoinClause`1.get_SqlContext()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql`1.ShimSqlJoinClause`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSql`1.ShimSqlJoinClause`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.ShimSqlJoinClause`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.ShimSqlJoinClause`1.ConstructorSqlOfT1">
            <summary>Establecer el shim de SqlJoinClause`1.SqlJoinClause`1(Sql`1&lt;!1&gt; sql)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.ShimSqlJoinClause`1.OnStringObjectArray">
            <summary>Establecer el shim de SqlJoinClause`1.On(String onClause, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.ShimSqlJoinClause`1.SqlContextGet">
            <summary>Establecer el shim de SqlJoinClause`1.get_SqlContext()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.SqlContextGet">
            <summary>Establecer el shim de Sql`1.get_SqlContext()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSql`1.WhereStringObjectArray">
            <summary>Establecer el shim de Sql`1.Where(String sql, Object[] args)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSqlBuilder">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.SqlBuilder</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSqlBuilder.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSqlBuilder.#ctor(NPoco.SqlBuilder)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.AddClauseStringStringObjectArrayStringStringString">
            <summary>Establecer el shim de SqlBuilder.AddClause(String name, String sql, Object[] parameters, String joiner, String prefix, String postfix)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.AddTemplateStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.AddTemplate(String sql, Object[] parameters)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSqlBuilder.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.AllInstances.AddClauseStringStringObjectArrayStringStringString">
            <summary>Establecer el shim de SqlBuilder.AddClause(String name, String sql, Object[] parameters, String joiner, String prefix, String postfix)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.AllInstances.AddTemplateStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.AddTemplate(String sql, Object[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.AllInstances.GroupByStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.GroupBy(String sql, Object[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.AllInstances.HavingStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.Having(String sql, Object[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.AllInstances.JoinStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.Join(String sql, Object[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.AllInstances.LeftJoinStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.LeftJoin(String sql, Object[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.AllInstances.OrderByColsStringArray">
            <summary>Establecer el shim de SqlBuilder.OrderByCols(String[] columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.AllInstances.OrderByStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.OrderBy(String sql, Object[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.AllInstances.ReuseParametersGet">
            <summary>Establecer el shim de SqlBuilder.get_ReuseParameters()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.AllInstances.ReuseParametersSetBoolean">
            <summary>Establecer el shim de SqlBuilder.set_ReuseParameters(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.AllInstances.SelectStringArray">
            <summary>Establecer el shim de SqlBuilder.Select(String[] columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.AllInstances.WhereNamedStringStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.WhereNamed(String name, String sql, Object[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.AllInstances.WhereStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.Where(String sql, Object[] parameters)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSqlBuilder.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSqlBuilder.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.Constructor">
            <summary>Establecer el shim de SqlBuilder.SqlBuilder()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ConstructorDictionaryOfStringString">
            <summary>Establecer el shim de SqlBuilder.SqlBuilder(Dictionary`2&lt;String,String&gt; defaultOverrides)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.GroupByStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.GroupBy(String sql, Object[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.HavingStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.Having(String sql, Object[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.JoinStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.Join(String sql, Object[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.LeftJoinStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.LeftJoin(String sql, Object[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.OrderByColsStringArray">
            <summary>Establecer el shim de SqlBuilder.OrderByCols(String[] columns)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.OrderByStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.OrderBy(String sql, Object[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ReuseParametersGet">
            <summary>Establecer el shim de SqlBuilder.get_ReuseParameters()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ReuseParametersSetBoolean">
            <summary>Establecer el shim de SqlBuilder.set_ReuseParameters(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.SelectStringArray">
            <summary>Establecer el shim de SqlBuilder.Select(String[] columns)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSqlBuilder.ShimTemplate">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.SqlBuilder+Template</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.#ctor(NPoco.SqlBuilder.Template)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.AllInstances.ParametersGet">
            <summary>Establecer el shim de Template.get_Parameters()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.AllInstances.RawSqlGet">
            <summary>Establecer el shim de Template.get_RawSql()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.AllInstances.ReplaceDefaults">
            <summary>Establecer el shim de Template.ReplaceDefaults()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.AllInstances.ResolveSql">
            <summary>Establecer el shim de Template.ResolveSql()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.AllInstances.TokenReplacementRequiredGet">
            <summary>Establecer el shim de Template.get_TokenReplacementRequired()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.AllInstances.TokenReplacementRequiredSetBoolean">
            <summary>Establecer el shim de Template.set_TokenReplacementRequired(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.AllInstances._ReplaceDefaultsb__11_0Match">
            <summary>Establecer el shim de Template.&lt;ReplaceDefaults&gt;b__11_0(Match x)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.ConstructorSqlBuilderStringObjectArray">
            <summary>Establecer el shim de Template.Template(SqlBuilder builder, String sql, Object[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.GetFullTokenRegexPatternString">
            <summary>Establecer el shim de Template.GetFullTokenRegexPattern(String key)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.ParametersGet">
            <summary>Establecer el shim de Template.get_Parameters()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.RawSqlGet">
            <summary>Establecer el shim de Template.get_RawSql()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.ReplaceDefaults">
            <summary>Establecer el shim de Template.ReplaceDefaults()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.ResolveSql">
            <summary>Establecer el shim de Template.ResolveSql()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.StaticConstructor">
            <summary>Establecer el shim de Template.Template()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.TokenReplacementRequiredGet">
            <summary>Establecer el shim de Template.get_TokenReplacementRequired()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate.TokenReplacementRequiredSetBoolean">
            <summary>Establecer el shim de Template.set_TokenReplacementRequired(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.ShimTemplate._ReplaceDefaultsb__11_0Match">
            <summary>Establecer el shim de Template.&lt;ReplaceDefaults&gt;b__11_0(Match x)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.WhereNamedStringStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.WhereNamed(String name, String sql, Object[] parameters)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlBuilder.WhereStringObjectArray">
            <summary>Establecer el shim de SqlBuilder.Where(String sql, Object[] parameters)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimSqlExtensions">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.SqlExtensions</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSqlExtensions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSqlExtensions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimSqlExtensions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlExtensions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimSqlExtensions.ToSqlSqlBuilderTemplate">
            <summary>Establecer el shim de SqlExtensions.ToSql(Template template)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimStringExtensions">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.StringExtensions</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimStringExtensions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimStringExtensions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimStringExtensions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimStringExtensions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimStringExtensions.BreakUpCamelCaseString">
            <summary>Establecer el shim de StringExtensions.BreakUpCamelCase(String s)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimTableInfo">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.TableInfo</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTableInfo.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTableInfo.#ctor(NPoco.TableInfo)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimTableInfo.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AllInstances.AutoAliasGet">
            <summary>Establecer el shim de TableInfo.get_AutoAlias()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AllInstances.AutoAliasSetString">
            <summary>Establecer el shim de TableInfo.set_AutoAlias(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AllInstances.AutoIncrementGet">
            <summary>Establecer el shim de TableInfo.get_AutoIncrement()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AllInstances.AutoIncrementSetBoolean">
            <summary>Establecer el shim de TableInfo.set_AutoIncrement(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AllInstances.Clone">
            <summary>Establecer el shim de TableInfo.Clone()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AllInstances.PersistedTypeGet">
            <summary>Establecer el shim de TableInfo.get_PersistedType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AllInstances.PersistedTypeSetType">
            <summary>Establecer el shim de TableInfo.set_PersistedType(Type value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AllInstances.PrimaryKeyGet">
            <summary>Establecer el shim de TableInfo.get_PrimaryKey()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AllInstances.PrimaryKeySetString">
            <summary>Establecer el shim de TableInfo.set_PrimaryKey(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AllInstances.SequenceNameGet">
            <summary>Establecer el shim de TableInfo.get_SequenceName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AllInstances.SequenceNameSetString">
            <summary>Establecer el shim de TableInfo.set_SequenceName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AllInstances.TableNameGet">
            <summary>Establecer el shim de TableInfo.get_TableName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AllInstances.TableNameSetString">
            <summary>Establecer el shim de TableInfo.set_TableName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AllInstances.UseOutputClauseGet">
            <summary>Establecer el shim de TableInfo.get_UseOutputClause()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AllInstances.UseOutputClauseSetBoolean">
            <summary>Establecer el shim de TableInfo.set_UseOutputClause(Boolean value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AutoAliasGet">
            <summary>Establecer el shim de TableInfo.get_AutoAlias()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AutoAliasSetString">
            <summary>Establecer el shim de TableInfo.set_AutoAlias(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AutoIncrementGet">
            <summary>Establecer el shim de TableInfo.get_AutoIncrement()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.AutoIncrementSetBoolean">
            <summary>Establecer el shim de TableInfo.set_AutoIncrement(Boolean value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTableInfo.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTableInfo.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.Clone">
            <summary>Establecer el shim de TableInfo.Clone()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.Constructor">
            <summary>Establecer el shim de TableInfo.TableInfo()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.FromPocoType">
            <summary>Establecer el shim de TableInfo.FromPoco(Type t)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.PersistedTypeGet">
            <summary>Establecer el shim de TableInfo.get_PersistedType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.PersistedTypeSetType">
            <summary>Establecer el shim de TableInfo.set_PersistedType(Type value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.PrimaryKeyGet">
            <summary>Establecer el shim de TableInfo.get_PrimaryKey()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.PrimaryKeySetString">
            <summary>Establecer el shim de TableInfo.set_PrimaryKey(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.SequenceNameGet">
            <summary>Establecer el shim de TableInfo.get_SequenceName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.SequenceNameSetString">
            <summary>Establecer el shim de TableInfo.set_SequenceName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.TableNameGet">
            <summary>Establecer el shim de TableInfo.get_TableName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.TableNameSetString">
            <summary>Establecer el shim de TableInfo.set_TableName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.UseOutputClauseGet">
            <summary>Establecer el shim de TableInfo.get_UseOutputClause()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableInfo.UseOutputClauseSetBoolean">
            <summary>Establecer el shim de TableInfo.set_UseOutputClause(Boolean value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimTableNameAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.TableNameAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTableNameAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTableNameAttribute.#ctor(NPoco.TableNameAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimTableNameAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableNameAttribute.AllInstances.ValueGet">
            <summary>Establecer el shim de TableNameAttribute.get_Value()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableNameAttribute.AllInstances.ValueSetString">
            <summary>Establecer el shim de TableNameAttribute.set_Value(String value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTableNameAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTableNameAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableNameAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableNameAttribute.ConstructorString">
            <summary>Establecer el shim de TableNameAttribute.TableNameAttribute(String tableName)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableNameAttribute.ValueGet">
            <summary>Establecer el shim de TableNameAttribute.get_Value()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTableNameAttribute.ValueSetString">
            <summary>Establecer el shim de TableNameAttribute.set_Value(String value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimTransaction">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Transaction</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTransaction.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTransaction.#ctor(NPoco.Transaction)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimTransaction.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTransaction.AllInstances.Complete">
            <summary>Establecer el shim de Transaction.Complete()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTransaction.AllInstances.Dispose">
            <summary>Establecer el shim de Transaction.Dispose()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTransaction.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTransaction.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTransaction.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTransaction.Bind(NPoco.ITransaction)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTransaction.Bind(System.IDisposable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTransaction.Complete">
            <summary>Establecer el shim de Transaction.Complete()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTransaction.ConstructorIDatabaseIsolationLevel">
            <summary>Establecer el shim de Transaction.Transaction(IDatabase db, IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTransaction.Dispose">
            <summary>Establecer el shim de Transaction.Dispose()</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimTypeHelpers">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.TypeHelpers</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTypeHelpers.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTypeHelpers.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimTypeHelpers.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTypeHelpers.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTypeHelpers.GetTheTypeObject">
            <summary>Establecer el shim de TypeHelpers.GetTheType(Object that)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimTypeHelpers.IsAClassType">
            <summary>Establecer el shim de TypeHelpers.IsAClass(Type type)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimUpdateBatch">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.UpdateBatch</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimUpdateBatch.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimUpdateBatch.#ctor(NPoco.UpdateBatch)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimUpdateBatch.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimUpdateBatch.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimUpdateBatch.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateBatch.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateBatch.Constructor">
            <summary>Establecer el shim de UpdateBatch.UpdateBatch()</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimUpdateBatch.ForOf1M0SnapshotOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NPoco.Snapshot{``0},NPoco.UpdateBatch{``0}})">
            <summary>Establecer el shim de UpdateBatch.For(!!0 poco, Snapshot`1&lt;!!0&gt; snapshot)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimUpdateBatch`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.UpdateBatch`1</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimUpdateBatch`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimUpdateBatch`1.#ctor(NPoco.UpdateBatch{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimUpdateBatch`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateBatch`1.AllInstances.PocoGet">
            <summary>Establecer el shim de UpdateBatch`1.get_Poco()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateBatch`1.AllInstances.PocoSetT0">
            <summary>Establecer el shim de UpdateBatch`1.set_Poco(!0 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateBatch`1.AllInstances.SnapshotGet">
            <summary>Establecer el shim de UpdateBatch`1.get_Snapshot()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateBatch`1.AllInstances.SnapshotSetSnapshotOfT0">
            <summary>Establecer el shim de UpdateBatch`1.set_Snapshot(Snapshot`1&lt;!0&gt; value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimUpdateBatch`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimUpdateBatch`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateBatch`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateBatch`1.Constructor">
            <summary>Establecer el shim de UpdateBatch`1.UpdateBatch`1()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateBatch`1.PocoGet">
            <summary>Establecer el shim de UpdateBatch`1.get_Poco()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateBatch`1.PocoSetT0">
            <summary>Establecer el shim de UpdateBatch`1.set_Poco(!0 value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateBatch`1.SnapshotGet">
            <summary>Establecer el shim de UpdateBatch`1.get_Snapshot()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateBatch`1.SnapshotSetSnapshotOfT0">
            <summary>Establecer el shim de UpdateBatch`1.set_Snapshot(Snapshot`1&lt;!0&gt; value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimUpdateContext">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.UpdateContext</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimUpdateContext.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimUpdateContext.#ctor(NPoco.UpdateContext)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimUpdateContext.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.AllInstances.ColumnsToUpdateGet">
            <summary>Establecer el shim de UpdateContext.get_ColumnsToUpdate()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.AllInstances.ColumnsToUpdateSetIEnumerableOfString">
            <summary>Establecer el shim de UpdateContext.set_ColumnsToUpdate(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.AllInstances.PocoGet">
            <summary>Establecer el shim de UpdateContext.get_Poco()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.AllInstances.PocoSetObject">
            <summary>Establecer el shim de UpdateContext.set_Poco(Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.AllInstances.PrimaryKeyNameGet">
            <summary>Establecer el shim de UpdateContext.get_PrimaryKeyName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.AllInstances.PrimaryKeyNameSetString">
            <summary>Establecer el shim de UpdateContext.set_PrimaryKeyName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.AllInstances.PrimaryKeyValueGet">
            <summary>Establecer el shim de UpdateContext.get_PrimaryKeyValue()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.AllInstances.PrimaryKeyValueSetObject">
            <summary>Establecer el shim de UpdateContext.set_PrimaryKeyValue(Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.AllInstances.TableNameGet">
            <summary>Establecer el shim de UpdateContext.get_TableName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.AllInstances.TableNameSetString">
            <summary>Establecer el shim de UpdateContext.set_TableName(String value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimUpdateContext.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimUpdateContext.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.ColumnsToUpdateGet">
            <summary>Establecer el shim de UpdateContext.get_ColumnsToUpdate()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.ColumnsToUpdateSetIEnumerableOfString">
            <summary>Establecer el shim de UpdateContext.set_ColumnsToUpdate(IEnumerable`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.ConstructorObjectStringStringObjectIEnumerableOfString">
            <summary>Establecer el shim de UpdateContext.UpdateContext(Object poco, String tableName, String primaryKeyName, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columnsToUpdate)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.PocoGet">
            <summary>Establecer el shim de UpdateContext.get_Poco()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.PocoSetObject">
            <summary>Establecer el shim de UpdateContext.set_Poco(Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.PrimaryKeyNameGet">
            <summary>Establecer el shim de UpdateContext.get_PrimaryKeyName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.PrimaryKeyNameSetString">
            <summary>Establecer el shim de UpdateContext.set_PrimaryKeyName(String value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.PrimaryKeyValueGet">
            <summary>Establecer el shim de UpdateContext.get_PrimaryKeyValue()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.PrimaryKeyValueSetObject">
            <summary>Establecer el shim de UpdateContext.set_PrimaryKeyValue(Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.TableNameGet">
            <summary>Establecer el shim de UpdateContext.get_TableName()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimUpdateContext.TableNameSetString">
            <summary>Establecer el shim de UpdateContext.set_TableName(String value)</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimVersionColumnAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.VersionColumnAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimVersionColumnAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimVersionColumnAttribute.#ctor(NPoco.VersionColumnAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Fakes.ShimVersionColumnAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimVersionColumnAttribute.AllInstances.VersionColumnTypeGet">
            <summary>Establecer el shim de VersionColumnAttribute.get_VersionColumnType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimVersionColumnAttribute.AllInstances.VersionColumnTypeSetVersionColumnType">
            <summary>Establecer el shim de VersionColumnAttribute.set_VersionColumnType(VersionColumnType value)</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimVersionColumnAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Fakes.ShimVersionColumnAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimVersionColumnAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimVersionColumnAttribute.Constructor">
            <summary>Establecer el shim de VersionColumnAttribute.VersionColumnAttribute()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimVersionColumnAttribute.ConstructorStringVersionColumnType">
            <summary>Establecer el shim de VersionColumnAttribute.VersionColumnAttribute(String name, VersionColumnType versionColumnType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimVersionColumnAttribute.ConstructorVersionColumnType">
            <summary>Establecer el shim de VersionColumnAttribute.VersionColumnAttribute(VersionColumnType versionColumnType)</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimVersionColumnAttribute.VersionColumnTypeGet">
            <summary>Establecer el shim de VersionColumnAttribute.get_VersionColumnType()</summary>
        </member>
        <member name="P:NPoco.Fakes.ShimVersionColumnAttribute.VersionColumnTypeSetVersionColumnType">
            <summary>Establecer el shim de VersionColumnAttribute.set_VersionColumnType(VersionColumnType value)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubAliasAttribute">
            <summary>Tipo stub de NPoco.AliasAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.StubAliasAttribute.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubAliasAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubAliasAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubAliasAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubAliasAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubAliasAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubAliasAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAliasAttribute</summary>
        </member>
        <member name="P:NPoco.Fakes.StubAliasAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubAliasAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubAliasAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubAliasAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubAliasAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubAliasAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubAliasAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubAliasAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubAnsiString">
            <summary>Tipo stub de NPoco.AnsiString</summary>
        </member>
        <member name="M:NPoco.Fakes.StubAnsiString.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubAnsiString.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubAnsiString.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAnsiString</summary>
        </member>
        <member name="P:NPoco.Fakes.StubAnsiString.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubAnsiString.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubAutoSelectHelper">
            <summary>Tipo stub de NPoco.AutoSelectHelper</summary>
        </member>
        <member name="M:NPoco.Fakes.StubAutoSelectHelper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubAutoSelectHelper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubAutoSelectHelper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAutoSelectHelper</summary>
        </member>
        <member name="P:NPoco.Fakes.StubAutoSelectHelper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubAutoSelectHelper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubBatchOptions">
            <summary>Tipo stub de NPoco.BatchOptions</summary>
        </member>
        <member name="M:NPoco.Fakes.StubBatchOptions.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubBatchOptions.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubBatchOptions.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubBatchOptions</summary>
        </member>
        <member name="P:NPoco.Fakes.StubBatchOptions.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubBatchOptions.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubCache`2">
            <summary>Tipo stub de NPoco.Cache`2</summary>
        </member>
        <member name="M:NPoco.Fakes.StubCache`2.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubCache`2.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubCache`2.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubCache</summary>
        </member>
        <member name="P:NPoco.Fakes.StubCache`2.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubCache`2.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubColumnAttribute">
            <summary>Tipo stub de NPoco.ColumnAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.StubColumnAttribute.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubColumnAttribute.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubColumnAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubColumnAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubColumnAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubColumnAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubColumnAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubColumnAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubColumnAttribute</summary>
        </member>
        <member name="P:NPoco.Fakes.StubColumnAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubColumnAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubColumnAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubColumnAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubColumnAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubColumnAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubColumnAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubColumnAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubColumnInfo">
            <summary>Tipo stub de NPoco.ColumnInfo</summary>
        </member>
        <member name="M:NPoco.Fakes.StubColumnInfo.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubColumnInfo.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubColumnInfo.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubColumnInfo</summary>
        </member>
        <member name="P:NPoco.Fakes.StubColumnInfo.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubColumnInfo.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubColumnTypeAttribute">
            <summary>Tipo stub de NPoco.ColumnTypeAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.StubColumnTypeAttribute.#ctor(System.Type)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubColumnTypeAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubColumnTypeAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubColumnTypeAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubColumnTypeAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubColumnTypeAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubColumnTypeAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubColumnTypeAttribute</summary>
        </member>
        <member name="P:NPoco.Fakes.StubColumnTypeAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubColumnTypeAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubColumnTypeAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubColumnTypeAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubColumnTypeAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubColumnTypeAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubColumnTypeAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubColumnTypeAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubComplexMappingAttribute">
            <summary>Tipo stub de NPoco.ComplexMappingAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComplexMappingAttribute.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComplexMappingAttribute.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubComplexMappingAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComplexMappingAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubComplexMappingAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComplexMappingAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubComplexMappingAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComplexMappingAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubComplexMappingAttribute</summary>
        </member>
        <member name="P:NPoco.Fakes.StubComplexMappingAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubComplexMappingAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComplexMappingAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubComplexMappingAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComplexMappingAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubComplexMappingAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubComplexMappingAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubComplexMappingAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubComputedColumnAttribute">
            <summary>Tipo stub de NPoco.ComputedColumnAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComputedColumnAttribute.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComputedColumnAttribute.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComputedColumnAttribute.#ctor(NPoco.ComputedColumnType)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComputedColumnAttribute.#ctor(System.String,NPoco.ComputedColumnType)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubComputedColumnAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComputedColumnAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubComputedColumnAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComputedColumnAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubComputedColumnAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComputedColumnAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubComputedColumnAttribute</summary>
        </member>
        <member name="P:NPoco.Fakes.StubComputedColumnAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubComputedColumnAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComputedColumnAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubComputedColumnAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubComputedColumnAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubComputedColumnAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubComputedColumnAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubComputedColumnAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubConstructAttribute">
            <summary>Tipo stub de NPoco.ConstructAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.StubConstructAttribute.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubConstructAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubConstructAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubConstructAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubConstructAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubConstructAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubConstructAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubConstructAttribute</summary>
        </member>
        <member name="P:NPoco.Fakes.StubConstructAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubConstructAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubConstructAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubConstructAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubConstructAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubConstructAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubConstructAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubConstructAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubDatabase">
            <summary>Tipo stub de NPoco.Database</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.#ctor(System.Data.Common.DbConnection)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.#ctor(System.Data.Common.DbConnection,NPoco.DatabaseType)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.#ctor(System.Data.Common.DbConnection,NPoco.DatabaseType,System.Nullable{System.Data.IsolationLevel})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.#ctor(System.String,NPoco.DatabaseType,System.Data.Common.DbProviderFactory)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.#ctor(System.Data.Common.DbConnection,NPoco.DatabaseType,System.Nullable{System.Data.IsolationLevel},System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.#ctor(System.String,NPoco.DatabaseType,System.Data.Common.DbProviderFactory,System.Nullable{System.Data.IsolationLevel},System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.AddParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>Establecer el stub de Database.AddParameter(DbCommand cmd, Object value)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.AddParameterDbCommandObject">
            <summary>Establecer el stub de Database.AddParameter(DbCommand cmd, Object value)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDatabase.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.CreateCommand(System.Data.Common.DbConnection,System.Data.CommandType,System.String,System.Object[])">
            <summary>Establecer el stub de Database.CreateCommand(DbConnection connection, CommandType commandType, String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.CreateCommandDbConnectionCommandTypeStringObjectArray">
            <summary>Establecer el stub de Database.CreateCommand(DbConnection connection, CommandType commandType, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.Delete(System.String,System.String,System.Object,System.Object)">
            <summary>Establecer el stub de Database.Delete(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.DeleteAsync(System.String,System.String,System.Object,System.Object)">
            <summary>Establecer el stub de Database.DeleteAsync(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.DeleteAsyncStringStringObjectObject">
            <summary>Establecer el stub de Database.DeleteAsync(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.DeleteStringStringObjectObject">
            <summary>Establecer el stub de Database.Delete(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.ExecutionHook``1(System.Func{``0})">
            <summary>Establecer el stub de Database.ExecutionHook(Func`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.ExecutionHookAsync``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>Establecer el stub de Database.ExecutionHookAsync(Func`1&lt;Task`1&lt;!!0&gt;&gt; action)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.ExecutionHookAsyncOf1FuncOfTaskOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de ExecutionHookAsync(Func`1&lt;Task`1&lt;!!0&gt;&gt; action)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.ExecutionHookOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},``0})">
            <summary>Establecer stubs de ExecutionHook(Func`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.FormatCommand(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de Database.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.FormatCommandDbCommand">
            <summary>Establecer el stub de Database.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDatabase</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.Insert``1(System.String,System.String,System.Boolean,``0)">
            <summary>Establecer el stub de Database.Insert(String tableName, String primaryKeyName, Boolean autoIncrement, !!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.InsertAsync``1(System.String,System.String,System.Boolean,``0)">
            <summary>Establecer el stub de Database.InsertAsync(String tableName, String primaryKeyName, Boolean autoIncrement, !!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.InsertAsyncOf1StringStringBooleanM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Boolean,``0,System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer stubs de InsertAsync(String tableName, String primaryKeyName, Boolean autoIncrement, !!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.InsertOf1StringStringBooleanM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Boolean,``0,System.Object})">
            <summary>Establecer stubs de Insert(String tableName, String primaryKeyName, Boolean autoIncrement, !!0 poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDatabase.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDatabase.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.OnAbortTransaction">
            <summary>Establecer el stub de Database.OnAbortTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.OnAbortTransaction01">
            <summary>Establecer el stub de Database.OnAbortTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.OnBeginTransaction">
            <summary>Establecer el stub de Database.OnBeginTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.OnBeginTransaction01">
            <summary>Establecer el stub de Database.OnBeginTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.OnCompleteTransaction">
            <summary>Establecer el stub de Database.OnCompleteTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.OnCompleteTransaction01">
            <summary>Establecer el stub de Database.OnCompleteTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.OnConnectionClosing(System.Data.Common.DbConnection)">
            <summary>Establecer el stub de Database.OnConnectionClosing(DbConnection conn)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.OnConnectionClosingDbConnection">
            <summary>Establecer el stub de Database.OnConnectionClosing(DbConnection conn)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.OnConnectionOpened(System.Data.Common.DbConnection)">
            <summary>Establecer el stub de Database.OnConnectionOpened(DbConnection conn)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.OnConnectionOpenedDbConnection">
            <summary>Establecer el stub de Database.OnConnectionOpened(DbConnection conn)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.OnDeleting(NPoco.DeleteContext)">
            <summary>Establecer el stub de Database.OnDeleting(DeleteContext deleteContext)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.OnDeletingDeleteContext">
            <summary>Establecer el stub de Database.OnDeleting(DeleteContext deleteContext)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.OnException(System.Exception)">
            <summary>Establecer el stub de Database.OnException(Exception exception)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.OnExceptionException">
            <summary>Establecer el stub de Database.OnException(Exception exception)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.OnExecutedCommand(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de Database.OnExecutedCommand(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.OnExecutedCommandDbCommand">
            <summary>Establecer el stub de Database.OnExecutedCommand(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.OnExecutingCommand(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de Database.OnExecutingCommand(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.OnExecutingCommandDbCommand">
            <summary>Establecer el stub de Database.OnExecutingCommand(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.OnInserting(NPoco.InsertContext)">
            <summary>Establecer el stub de Database.OnInserting(InsertContext insertContext)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.OnInsertingInsertContext">
            <summary>Establecer el stub de Database.OnInserting(InsertContext insertContext)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.OnUpdating(NPoco.UpdateContext)">
            <summary>Establecer el stub de Database.OnUpdating(UpdateContext updateContext)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.OnUpdatingUpdateContext">
            <summary>Establecer el stub de Database.OnUpdating(UpdateContext updateContext)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.Update(System.String,System.String,System.Object,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Establecer el stub de Database.Update(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabase.UpdateAsync(System.String,System.String,System.Object,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Establecer el stub de Database.UpdateAsync(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.UpdateAsyncStringStringObjectObjectIEnumerableOfString">
            <summary>Establecer el stub de Database.UpdateAsync(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabase.UpdateStringStringObjectObjectIEnumerableOfString">
            <summary>Establecer el stub de Database.Update(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubDatabaseFactory">
            <summary>Tipo stub de NPoco.DatabaseFactory</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseFactory.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseFactory.#ctor(NPoco.DatabaseFactoryConfigOptions)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDatabaseFactory.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseFactory.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDatabaseFactory</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDatabaseFactory.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDatabaseFactory.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubDatabaseFactoryConfig">
            <summary>Tipo stub de NPoco.DatabaseFactoryConfig</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseFactoryConfig.#ctor(NPoco.DatabaseFactoryConfigOptions)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDatabaseFactoryConfig.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseFactoryConfig.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDatabaseFactoryConfig</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDatabaseFactoryConfig.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDatabaseFactoryConfig.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubDatabaseFactoryConfigOptions">
            <summary>Tipo stub de NPoco.DatabaseFactoryConfigOptions</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseFactoryConfigOptions.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDatabaseFactoryConfigOptions.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseFactoryConfigOptions.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDatabaseFactoryConfigOptions</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDatabaseFactoryConfigOptions.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDatabaseFactoryConfigOptions.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubDatabaseType">
            <summary>Tipo stub de NPoco.DatabaseType</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.BuildPageQuery(System.Int64,System.Int64,NPoco.PagingHelper.SQLParts,System.Object[]@)">
            <summary>Establecer el stub de DatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.BuildPageQueryInt64Int64PagingHelperSQLPartsObjectArrayRef">
            <summary>Establecer el stub de DatabaseType.BuildPageQuery(Int64 skip, Int64 take, SQLParts parts, Object[]&amp; args)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDatabaseType.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.EscapeSqlIdentifier(System.String)">
            <summary>Establecer el stub de DatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.EscapeSqlIdentifierString">
            <summary>Establecer el stub de DatabaseType.EscapeSqlIdentifier(String str)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.EscapeTableName(System.String)">
            <summary>Establecer el stub de DatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.EscapeTableNameString">
            <summary>Establecer el stub de DatabaseType.EscapeTableName(String tableName)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.ExecuteInsert``1(NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[])">
            <summary>Establecer el stub de DatabaseType.ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.ExecuteInsertAsync``1(NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[])">
            <summary>Establecer el stub de DatabaseType.ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.ExecuteInsertAsyncOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer stubs de ExecuteInsertAsync(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.ExecuteInsertOf1DatabaseDbCommandStringBooleanM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Database,System.Data.Common.DbCommand,System.String,System.Boolean,``0,System.Object[],System.Object})">
            <summary>Establecer stubs de ExecuteInsert(Database db, DbCommand cmd, String primaryKeyName, Boolean useOutputClause, !!0 poco, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.ExecuteNonQueryAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.ExecuteNonQueryAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteNonQueryAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.ExecuteReaderAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.ExecuteReaderAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteReaderAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.ExecuteScalarAsync(NPoco.Database,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.ExecuteScalarAsyncDatabaseDbCommand">
            <summary>Establecer el stub de DatabaseType.ExecuteScalarAsync(Database database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.ExpressionVisitor``1(NPoco.IDatabase,NPoco.PocoData,System.Boolean)">
            <summary>Establecer el stub de DatabaseType.ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.ExpressionVisitorOf1IDatabasePocoDataBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,NPoco.PocoData,System.Boolean,NPoco.Expressions.SqlExpression{``0}})">
            <summary>Establecer stubs de ExpressionVisitor(IDatabase db, PocoData pocoData, Boolean prefixTableName)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.FormatCommand(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.FormatCommand(System.String,System.Object[])">
            <summary>Establecer el stub de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.FormatCommandDbCommand">
            <summary>Establecer el stub de DatabaseType.FormatCommand(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.FormatCommandStringObjectArray">
            <summary>Establecer el stub de DatabaseType.FormatCommand(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.GetAutoIncrementExpression(NPoco.TableInfo)">
            <summary>Establecer el stub de DatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.GetAutoIncrementExpressionTableInfo">
            <summary>Establecer el stub de DatabaseType.GetAutoIncrementExpression(TableInfo ti)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.GetDefaultInsertSql(System.String,System.String,System.Boolean,System.String[],System.String[])">
            <summary>Establecer el stub de DatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.GetDefaultInsertSqlStringStringBooleanStringArrayStringArray">
            <summary>Establecer el stub de DatabaseType.GetDefaultInsertSql(String tableName, String primaryKeyName, Boolean useOutputClause, String[] names, String[] parameters)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.GetDefaultTransactionIsolationLevel">
            <summary>Establecer el stub de DatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.GetDefaultTransactionIsolationLevel01">
            <summary>Establecer el stub de DatabaseType.GetDefaultTransactionIsolationLevel()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.GetExistsSql">
            <summary>Establecer el stub de DatabaseType.GetExistsSql()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.GetExistsSql01">
            <summary>Establecer el stub de DatabaseType.GetExistsSql()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.GetInsertOutputClause(System.String,System.Boolean)">
            <summary>Establecer el stub de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.GetInsertOutputClauseStringBoolean">
            <summary>Establecer el stub de DatabaseType.GetInsertOutputClause(String primaryKeyName, Boolean useOutputClause)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.GetParameterPrefix(System.String)">
            <summary>Establecer el stub de DatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.GetParameterPrefixString">
            <summary>Establecer el stub de DatabaseType.GetParameterPrefix(String connectionString)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.GetProviderName">
            <summary>Establecer el stub de DatabaseType.GetProviderName()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.GetProviderName01">
            <summary>Establecer el stub de DatabaseType.GetProviderName()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.GetSQLForTransactionLevel(System.Data.IsolationLevel)">
            <summary>Establecer el stub de DatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.GetSQLForTransactionLevelIsolationLevel">
            <summary>Establecer el stub de DatabaseType.GetSQLForTransactionLevel(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDatabaseType</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.InsertBulk``1(NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de DatabaseType.InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.InsertBulkAsync``1(NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de DatabaseType.InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.InsertBulkAsyncOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions,System.Threading.Tasks.Task})">
            <summary>Establecer stubs de InsertBulkAsync(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.InsertBulkOf1IDatabaseIEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NPoco.IDatabase,System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions})">
            <summary>Establecer stubs de InsertBulk(IDatabase db, IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDatabaseType.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDatabaseType.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.LookupDbType(System.Type,System.String)">
            <summary>Establecer el stub de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.LookupDbTypeTypeString">
            <summary>Establecer el stub de DatabaseType.LookupDbType(Type type, String name)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.MapParameterValue(System.Object)">
            <summary>Establecer el stub de DatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.MapParameterValueObject">
            <summary>Establecer el stub de DatabaseType.MapParameterValue(Object value)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.PreExecute(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de DatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.PreExecuteDbCommand">
            <summary>Establecer el stub de DatabaseType.PreExecute(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.ProcessDefaultMappings(NPoco.PocoColumn,System.Object)">
            <summary>Establecer el stub de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.ProcessDefaultMappingsPocoColumnObject">
            <summary>Establecer el stub de DatabaseType.ProcessDefaultMappings(PocoColumn pocoColumn, Object value)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDatabaseType.UseColumnAliases">
            <summary>Establecer el stub de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDatabaseType.UseColumnAliases01">
            <summary>Establecer el stub de DatabaseType.UseColumnAliases()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubDefaultMapper">
            <summary>Tipo stub de NPoco.DefaultMapper</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDefaultMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDefaultMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDefaultMapper.GetFromDbConverter(System.Type,System.Type)">
            <summary>Establecer el stub de DefaultMapper.GetFromDbConverter(Type destType, Type sourceType)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDefaultMapper.GetFromDbConverter(System.Reflection.MemberInfo,System.Type)">
            <summary>Establecer el stub de DefaultMapper.GetFromDbConverter(MemberInfo destMemberInfo, Type sourceType)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDefaultMapper.GetFromDbConverterMemberInfoType">
            <summary>Establecer el stub de DefaultMapper.GetFromDbConverter(MemberInfo destMemberInfo, Type sourceType)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDefaultMapper.GetFromDbConverterTypeType">
            <summary>Establecer el stub de DefaultMapper.GetFromDbConverter(Type destType, Type sourceType)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDefaultMapper.GetParameterConverter(System.Data.Common.DbCommand,System.Type)">
            <summary>Establecer el stub de DefaultMapper.GetParameterConverter(DbCommand dbCommand, Type sourceType)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDefaultMapper.GetParameterConverterDbCommandType">
            <summary>Establecer el stub de DefaultMapper.GetParameterConverter(DbCommand dbCommand, Type sourceType)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDefaultMapper.GetToDbConverter(System.Type,System.Reflection.MemberInfo)">
            <summary>Establecer el stub de DefaultMapper.GetToDbConverter(Type destType, MemberInfo sourceMemberInfo)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubDefaultMapper.GetToDbConverterTypeMemberInfo">
            <summary>Establecer el stub de DefaultMapper.GetToDbConverter(Type destType, MemberInfo sourceMemberInfo)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDefaultMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDefaultMapper</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDefaultMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDefaultMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubDeleteContext">
            <summary>Tipo stub de NPoco.DeleteContext</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDeleteContext.#ctor(System.Object,System.String,System.String,System.Object)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDeleteContext.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubDeleteContext.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDeleteContext</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDeleteContext.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubDeleteContext.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubEnumMapper">
            <summary>Tipo stub de NPoco.EnumMapper</summary>
        </member>
        <member name="M:NPoco.Fakes.StubEnumMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubEnumMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubEnumMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubEnumMapper</summary>
        </member>
        <member name="P:NPoco.Fakes.StubEnumMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubEnumMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubExpandoColumn">
            <summary>Tipo stub de NPoco.ExpandoColumn</summary>
        </member>
        <member name="M:NPoco.Fakes.StubExpandoColumn.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubExpandoColumn.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubExpandoColumn.ChangeType(System.Object)">
            <summary>Establecer el stub de ExpandoColumn.ChangeType(Object val)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubExpandoColumn.ChangeTypeObject">
            <summary>Establecer el stub de ExpandoColumn.ChangeType(Object val)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubExpandoColumn.GetValue(System.Object)">
            <summary>Establecer el stub de ExpandoColumn.GetValue(Object target)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubExpandoColumn.GetValueObject">
            <summary>Establecer el stub de ExpandoColumn.GetValue(Object target)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubExpandoColumn.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubExpandoColumn</summary>
        </member>
        <member name="P:NPoco.Fakes.StubExpandoColumn.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubExpandoColumn.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubExpandoColumn.SetValue(System.Object,System.Object)">
            <summary>Establecer el stub de ExpandoColumn.SetValue(Object target, Object val)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubExpandoColumn.SetValueObjectObject">
            <summary>Establecer el stub de ExpandoColumn.SetValue(Object target, Object val)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubExplicitColumnsAttribute">
            <summary>Tipo stub de NPoco.ExplicitColumnsAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.StubExplicitColumnsAttribute.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubExplicitColumnsAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubExplicitColumnsAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubExplicitColumnsAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubExplicitColumnsAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubExplicitColumnsAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubExplicitColumnsAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubExplicitColumnsAttribute</summary>
        </member>
        <member name="P:NPoco.Fakes.StubExplicitColumnsAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubExplicitColumnsAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubExplicitColumnsAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubExplicitColumnsAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubExplicitColumnsAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubExplicitColumnsAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubExplicitColumnsAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubExplicitColumnsAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubFastCreate">
            <summary>Tipo stub de NPoco.FastCreate</summary>
        </member>
        <member name="M:NPoco.Fakes.StubFastCreate.#ctor(System.Type,NPoco.MapperCollection)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubFastCreate.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubFastCreate.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubFastCreate</summary>
        </member>
        <member name="P:NPoco.Fakes.StubFastCreate.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubFastCreate.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubFastJsonColumnSerializer">
            <summary>Tipo stub de NPoco.FastJsonColumnSerializer</summary>
        </member>
        <member name="M:NPoco.Fakes.StubFastJsonColumnSerializer.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubFastJsonColumnSerializer.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubFastJsonColumnSerializer.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubFastJsonColumnSerializer</summary>
        </member>
        <member name="P:NPoco.Fakes.StubFastJsonColumnSerializer.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubFastJsonColumnSerializer.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubFluentPocoDataFactory">
            <summary>Tipo stub de NPoco.FluentPocoDataFactory</summary>
        </member>
        <member name="M:NPoco.Fakes.StubFluentPocoDataFactory.#ctor(System.Func{System.Type,NPoco.IPocoDataFactory,NPoco.InitializedPocoDataBuilder})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubFluentPocoDataFactory.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubFluentPocoDataFactory.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubFluentPocoDataFactory</summary>
        </member>
        <member name="P:NPoco.Fakes.StubFluentPocoDataFactory.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubFluentPocoDataFactory.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIAsyncDatabase">
            <summary>Tipo stub de NPoco.IAsyncDatabase</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.#ctor">
            <summary>Inicializa una nueva instancia de type StubIAsyncDatabase</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.AbortTransaction">
            <summary>Establecer el stub de IBaseDatabase.AbortTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.AddParameterDbCommandObject">
            <summary>Establecer el stub de IBaseDatabase.AddParameter(DbCommand cmd, Object value)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.BeginTransaction">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.BeginTransactionIsolationLevel">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.CloseSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.CloseSharedConnection()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.CompleteTransaction">
            <summary>Establecer el stub de IBaseDatabase.CompleteTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIAsyncDatabase.NPoco#IBaseDatabase#Connection">
            <summary>Establecer el stub de IBaseDatabase.get_Connection()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.ConnectionGet">
            <summary>Establecer el stub de IBaseDatabase.get_Connection()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.CreateCommandDbConnectionCommandTypeStringObjectArray">
            <summary>Establecer el stub de IBaseDatabase.CreateCommand(DbConnection connection, CommandType commandType, String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.CreateParameter">
            <summary>Establecer el stub de IBaseDatabase.CreateParameter()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIAsyncDatabase.NPoco#IBaseDatabase#Data">
            <summary>Establecer el stub de IBaseDatabase.get_Data()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.DataGet">
            <summary>Establecer el stub de IBaseDatabase.get_Data()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.DeleteAsyncObject">
            <summary>Establecer el stub de IAsyncDatabase.DeleteAsync(Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.DeleteManyAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IAsyncDeleteQueryProvider{``0}})">
            <summary>Establecer stubs de DeleteManyAsync()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.ExecuteAsyncSql">
            <summary>Establecer el stub de IAsyncDatabase.ExecuteAsync(Sql sql)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.ExecuteAsyncStringObjectArray">
            <summary>Establecer el stub de IAsyncDatabase.ExecuteAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.ExecuteScalarAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de ExecuteScalarAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.ExecuteScalarAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de ExecuteScalarAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchMultipleAsyncOf2Sql``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchMultipleAsyncOf2StringObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchMultipleAsyncOf3FuncOfListOfM0ListOfM1M2Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql,System.Threading.Tasks.Task{``2}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchMultipleAsyncOf3FuncOfListOfM0ListOfM1M2StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[],System.Threading.Tasks.Task{``2}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchMultipleAsyncOf3Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchMultipleAsyncOf3StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchMultipleAsyncOf4FuncOfListOfM0ListOfM1ListOfM2M3Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql,System.Threading.Tasks.Task{``3}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchMultipleAsyncOf4FuncOfListOfM0ListOfM1ListOfM2M3StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[],System.Threading.Tasks.Task{``3}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchMultipleAsyncOf4Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchMultipleAsyncOf4StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchMultipleAsyncOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4Sql``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql,System.Threading.Tasks.Task{``4}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FetchMultipleAsyncOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4StringObjectArray``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[],System.Threading.Tasks.Task{``4}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FirstAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FirstAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FirstOrDefaultAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.FirstOrDefaultAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.GetTransaction">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.GetTransactionIsolationLevel">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.InsertAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer stubs de InsertAsync(!!0 poco)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.InsertAsyncStringStringObject">
            <summary>Establecer el stub de IAsyncDatabase.InsertAsync(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.InsertBatchAsyncOf1IEnumerableOfM0BatchOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},NPoco.BatchOptions,System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer stubs de InsertBatchAsync(IEnumerable`1&lt;!!0&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.InsertBulkAsyncOf1IEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions,System.Threading.Tasks.Task})">
            <summary>Establecer stubs de InsertBulkAsync(IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.IsNewAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>Establecer stubs de IsNewAsync(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#DeleteAsync(System.Object)">
            <summary>Establecer el stub de IAsyncDatabase.DeleteAsync(Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#DeleteManyAsync``1">
            <summary>Establecer el stub de IAsyncDatabase.DeleteManyAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#ExecuteAsync(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncDatabase.ExecuteAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#ExecuteAsync(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncDatabase.ExecuteAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#ExecuteScalarAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncDatabase.ExecuteScalarAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#ExecuteScalarAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncDatabase.ExecuteScalarAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#InsertAsync``1(``0)">
            <summary>Establecer el stub de IAsyncDatabase.InsertAsync(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#InsertAsync(System.String,System.String,System.Object)">
            <summary>Establecer el stub de IAsyncDatabase.InsertAsync(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#InsertBatchAsync``1(System.Collections.Generic.IEnumerable{``0},NPoco.BatchOptions)">
            <summary>Establecer el stub de IAsyncDatabase.InsertBatchAsync(IEnumerable`1&lt;!!0&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#InsertBulkAsync``1(System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de IAsyncDatabase.InsertBulkAsync(IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#IsNewAsync``1(``0)">
            <summary>Establecer el stub de IAsyncDatabase.IsNewAsync(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#SaveAsync``1(``0)">
            <summary>Establecer el stub de IAsyncDatabase.SaveAsync(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#UpdateAsync(System.Object)">
            <summary>Establecer el stub de IAsyncDatabase.UpdateAsync(Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#UpdateAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>Establecer el stub de IAsyncDatabase.UpdateAsync(!!0 poco, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#UpdateAsync(System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Establecer el stub de IAsyncDatabase.UpdateAsync(Object poco, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#UpdateBatchAsync``1(System.Collections.Generic.IEnumerable{NPoco.UpdateBatch{``0}},NPoco.BatchOptions)">
            <summary>Establecer el stub de IAsyncDatabase.UpdateBatchAsync(IEnumerable`1&lt;UpdateBatch`1&lt;!!0&gt;&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncDatabase#UpdateManyAsync``1">
            <summary>Establecer el stub de IAsyncDatabase.UpdateManyAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchAsync``1">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchAsync``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchAsync``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``2(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``2(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``5(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``5(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FirstAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FirstAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FirstOrDefaultAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#FirstOrDefaultAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#PageAsync``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.PageAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#PageAsync``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.PageAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#QueryAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.QueryAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#QueryAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.QueryAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#QueryAsync``1">
            <summary>Establecer el stub de IAsyncQueryDatabase.QueryAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#SingleAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#SingleAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#SingleByIdAsync``1(System.Object)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#SingleOrDefaultAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#SingleOrDefaultAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#SingleOrDefaultByIdAsync``1(System.Object)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleOrDefaultByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#SkipTakeAsync``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SkipTakeAsync(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IAsyncQueryDatabase#SkipTakeAsync``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.SkipTakeAsync(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IBaseDatabase#AbortTransaction">
            <summary>Establecer el stub de IBaseDatabase.AbortTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IBaseDatabase#AddParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>Establecer el stub de IBaseDatabase.AddParameter(DbCommand cmd, Object value)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IBaseDatabase#BeginTransaction">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IBaseDatabase#BeginTransaction(System.Data.IsolationLevel)">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IBaseDatabase#CloseSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.CloseSharedConnection()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IBaseDatabase#CompleteTransaction">
            <summary>Establecer el stub de IBaseDatabase.CompleteTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IBaseDatabase#CreateCommand(System.Data.Common.DbConnection,System.Data.CommandType,System.String,System.Object[])">
            <summary>Establecer el stub de IBaseDatabase.CreateCommand(DbConnection connection, CommandType commandType, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IBaseDatabase#CreateParameter">
            <summary>Establecer el stub de IBaseDatabase.CreateParameter()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IBaseDatabase#GetTransaction">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IBaseDatabase#GetTransaction(System.Data.IsolationLevel)">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IBaseDatabase#OpenSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.OpenSharedConnection()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.NPoco#IBaseDatabase#SetTransaction(System.Data.Common.DbTransaction)">
            <summary>Establecer el stub de IBaseDatabase.SetTransaction(DbTransaction tran)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.OpenSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.OpenSharedConnection()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.PageAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{NPoco.Page{``0}}})">
            <summary>Establecer stubs de PageAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.PageAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{NPoco.Page{``0}}})">
            <summary>Establecer stubs de PageAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.QueryAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IAsyncQueryProviderWithIncludes{``0}})">
            <summary>Establecer stubs de QueryAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.QueryAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer stubs de QueryAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.QueryAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer stubs de QueryAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.SaveAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task})">
            <summary>Establecer stubs de SaveAsync(!!0 poco)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.SetTransactionDbTransaction">
            <summary>Establecer el stub de IBaseDatabase.SetTransaction(DbTransaction tran)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.SingleAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.SingleAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.SingleByIdAsyncOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.SingleOrDefaultAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.SingleOrDefaultAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.SingleOrDefaultByIdAsyncOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleOrDefaultByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.SkipTakeAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de SkipTakeAsync(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.SkipTakeAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de SkipTakeAsync(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.System#IDisposable#Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIAsyncDatabase.NPoco#IBaseDatabase#Transaction">
            <summary>Establecer el stub de IBaseDatabase.get_Transaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.TransactionGet">
            <summary>Establecer el stub de IBaseDatabase.get_Transaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.UpdateAsyncObject">
            <summary>Establecer el stub de IAsyncDatabase.UpdateAsync(Object poco)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncDatabase.UpdateAsyncObjectIEnumerableOfString">
            <summary>Establecer el stub de IAsyncDatabase.UpdateAsync(Object poco, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.UpdateAsyncOf1M0ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer stubs de UpdateAsync(!!0 poco, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.UpdateBatchAsyncOf1IEnumerableOfUpdateBatchOfM0BatchOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{NPoco.UpdateBatch{``0}},NPoco.BatchOptions,System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer stubs de UpdateBatchAsync(IEnumerable`1&lt;UpdateBatch`1&lt;!!0&gt;&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncDatabase.UpdateManyAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IAsyncUpdateQueryProvider{``0}})">
            <summary>Establecer stubs de UpdateManyAsync()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIAsyncQueryDatabase">
            <summary>Tipo stub de NPoco.IAsyncQueryDatabase</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.#ctor">
            <summary>Inicializa una nueva instancia de type StubIAsyncQueryDatabase</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.AbortTransaction">
            <summary>Establecer el stub de IBaseDatabase.AbortTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.AddParameterDbCommandObject">
            <summary>Establecer el stub de IBaseDatabase.AddParameter(DbCommand cmd, Object value)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.BeginTransaction">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.BeginTransactionIsolationLevel">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.CloseSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.CloseSharedConnection()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.CompleteTransaction">
            <summary>Establecer el stub de IBaseDatabase.CompleteTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IBaseDatabase#Connection">
            <summary>Establecer el stub de IBaseDatabase.get_Connection()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.ConnectionGet">
            <summary>Establecer el stub de IBaseDatabase.get_Connection()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.CreateCommandDbConnectionCommandTypeStringObjectArray">
            <summary>Establecer el stub de IBaseDatabase.CreateCommand(DbConnection connection, CommandType commandType, String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.CreateParameter">
            <summary>Establecer el stub de IBaseDatabase.CreateParameter()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IBaseDatabase#Data">
            <summary>Establecer el stub de IBaseDatabase.get_Data()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.DataGet">
            <summary>Establecer el stub de IBaseDatabase.get_Data()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchMultipleAsyncOf2Sql``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchMultipleAsyncOf2StringObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchMultipleAsyncOf3FuncOfListOfM0ListOfM1M2Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql,System.Threading.Tasks.Task{``2}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchMultipleAsyncOf3FuncOfListOfM0ListOfM1M2StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[],System.Threading.Tasks.Task{``2}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchMultipleAsyncOf3Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchMultipleAsyncOf3StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchMultipleAsyncOf4FuncOfListOfM0ListOfM1ListOfM2M3Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql,System.Threading.Tasks.Task{``3}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchMultipleAsyncOf4FuncOfListOfM0ListOfM1ListOfM2M3StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[],System.Threading.Tasks.Task{``3}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchMultipleAsyncOf4Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchMultipleAsyncOf4StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchMultipleAsyncOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4Sql``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql,System.Threading.Tasks.Task{``4}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FetchMultipleAsyncOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4StringObjectArray``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[],System.Threading.Tasks.Task{``4}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FirstAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FirstAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FirstOrDefaultAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.FirstOrDefaultAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.GetTransaction">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.GetTransactionIsolationLevel">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchAsync``1">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchAsync``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchAsync``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``5(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``2(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``2(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``5(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FirstAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FirstAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FirstOrDefaultAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#FirstOrDefaultAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#PageAsync``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.PageAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#PageAsync``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.PageAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#QueryAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.QueryAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#QueryAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.QueryAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#QueryAsync``1">
            <summary>Establecer el stub de IAsyncQueryDatabase.QueryAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#SingleAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#SingleAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#SingleByIdAsync``1(System.Object)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#SingleOrDefaultAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#SingleOrDefaultAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#SingleOrDefaultByIdAsync``1(System.Object)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleOrDefaultByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#SkipTakeAsync``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SkipTakeAsync(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IAsyncQueryDatabase#SkipTakeAsync``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.SkipTakeAsync(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IBaseDatabase#AbortTransaction">
            <summary>Establecer el stub de IBaseDatabase.AbortTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IBaseDatabase#AddParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>Establecer el stub de IBaseDatabase.AddParameter(DbCommand cmd, Object value)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IBaseDatabase#BeginTransaction">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IBaseDatabase#BeginTransaction(System.Data.IsolationLevel)">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IBaseDatabase#CloseSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.CloseSharedConnection()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IBaseDatabase#CompleteTransaction">
            <summary>Establecer el stub de IBaseDatabase.CompleteTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IBaseDatabase#CreateCommand(System.Data.Common.DbConnection,System.Data.CommandType,System.String,System.Object[])">
            <summary>Establecer el stub de IBaseDatabase.CreateCommand(DbConnection connection, CommandType commandType, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IBaseDatabase#CreateParameter">
            <summary>Establecer el stub de IBaseDatabase.CreateParameter()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IBaseDatabase#GetTransaction">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IBaseDatabase#GetTransaction(System.Data.IsolationLevel)">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IBaseDatabase#OpenSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.OpenSharedConnection()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IBaseDatabase#SetTransaction(System.Data.Common.DbTransaction)">
            <summary>Establecer el stub de IBaseDatabase.SetTransaction(DbTransaction tran)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.OpenSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.OpenSharedConnection()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.PageAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{NPoco.Page{``0}}})">
            <summary>Establecer stubs de PageAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.PageAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{NPoco.Page{``0}}})">
            <summary>Establecer stubs de PageAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.QueryAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IAsyncQueryProviderWithIncludes{``0}})">
            <summary>Establecer stubs de QueryAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.QueryAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer stubs de QueryAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.QueryAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer stubs de QueryAsync(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.SetTransactionDbTransaction">
            <summary>Establecer el stub de IBaseDatabase.SetTransaction(DbTransaction tran)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.SingleAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.SingleAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.SingleByIdAsyncOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.SingleOrDefaultAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.SingleOrDefaultAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.SingleOrDefaultByIdAsyncOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleOrDefaultByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.SkipTakeAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de SkipTakeAsync(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.SkipTakeAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de SkipTakeAsync(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIAsyncQueryDatabase.System#IDisposable#Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIAsyncQueryDatabase.NPoco#IBaseDatabase#Transaction">
            <summary>Establecer el stub de IBaseDatabase.get_Transaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIAsyncQueryDatabase.TransactionGet">
            <summary>Establecer el stub de IBaseDatabase.get_Transaction()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIBaseDatabase">
            <summary>Tipo stub de NPoco.IBaseDatabase</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIBaseDatabase.#ctor">
            <summary>Inicializa una nueva instancia de type StubIBaseDatabase</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.AbortTransaction">
            <summary>Establecer el stub de IBaseDatabase.AbortTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.AddParameterDbCommandObject">
            <summary>Establecer el stub de IBaseDatabase.AddParameter(DbCommand cmd, Object value)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.BeginTransaction">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.BeginTransactionIsolationLevel">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.CloseSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.CloseSharedConnection()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.CompleteTransaction">
            <summary>Establecer el stub de IBaseDatabase.CompleteTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIBaseDatabase.NPoco#IBaseDatabase#Connection">
            <summary>Establecer el stub de IBaseDatabase.get_Connection()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.ConnectionGet">
            <summary>Establecer el stub de IBaseDatabase.get_Connection()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.CreateCommandDbConnectionCommandTypeStringObjectArray">
            <summary>Establecer el stub de IBaseDatabase.CreateCommand(DbConnection connection, CommandType commandType, String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.CreateParameter">
            <summary>Establecer el stub de IBaseDatabase.CreateParameter()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIBaseDatabase.NPoco#IBaseDatabase#Data">
            <summary>Establecer el stub de IBaseDatabase.get_Data()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.DataGet">
            <summary>Establecer el stub de IBaseDatabase.get_Data()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.GetTransaction">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.GetTransactionIsolationLevel">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIBaseDatabase.NPoco#IBaseDatabase#AbortTransaction">
            <summary>Establecer el stub de IBaseDatabase.AbortTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIBaseDatabase.NPoco#IBaseDatabase#AddParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>Establecer el stub de IBaseDatabase.AddParameter(DbCommand cmd, Object value)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIBaseDatabase.NPoco#IBaseDatabase#BeginTransaction">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIBaseDatabase.NPoco#IBaseDatabase#BeginTransaction(System.Data.IsolationLevel)">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIBaseDatabase.NPoco#IBaseDatabase#CloseSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.CloseSharedConnection()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIBaseDatabase.NPoco#IBaseDatabase#CompleteTransaction">
            <summary>Establecer el stub de IBaseDatabase.CompleteTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIBaseDatabase.NPoco#IBaseDatabase#CreateCommand(System.Data.Common.DbConnection,System.Data.CommandType,System.String,System.Object[])">
            <summary>Establecer el stub de IBaseDatabase.CreateCommand(DbConnection connection, CommandType commandType, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIBaseDatabase.NPoco#IBaseDatabase#CreateParameter">
            <summary>Establecer el stub de IBaseDatabase.CreateParameter()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIBaseDatabase.NPoco#IBaseDatabase#GetTransaction">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIBaseDatabase.NPoco#IBaseDatabase#GetTransaction(System.Data.IsolationLevel)">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIBaseDatabase.NPoco#IBaseDatabase#OpenSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.OpenSharedConnection()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIBaseDatabase.NPoco#IBaseDatabase#SetTransaction(System.Data.Common.DbTransaction)">
            <summary>Establecer el stub de IBaseDatabase.SetTransaction(DbTransaction tran)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.OpenSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.OpenSharedConnection()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.SetTransactionDbTransaction">
            <summary>Establecer el stub de IBaseDatabase.SetTransaction(DbTransaction tran)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIBaseDatabase.System#IDisposable#Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIBaseDatabase.NPoco#IBaseDatabase#Transaction">
            <summary>Establecer el stub de IBaseDatabase.get_Transaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIBaseDatabase.TransactionGet">
            <summary>Establecer el stub de IBaseDatabase.get_Transaction()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIColumnSerializer">
            <summary>Tipo stub de NPoco.IColumnSerializer</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIColumnSerializer.#ctor">
            <summary>Inicializa una nueva instancia de type StubIColumnSerializer</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIColumnSerializer.DeserializeStringType">
            <summary>Establecer el stub de IColumnSerializer.Deserialize(String value, Type targetType)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIColumnSerializer.NPoco#IColumnSerializer#Deserialize(System.String,System.Type)">
            <summary>Establecer el stub de IColumnSerializer.Deserialize(String value, Type targetType)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIColumnSerializer.NPoco#IColumnSerializer#Serialize(System.Object)">
            <summary>Establecer el stub de IColumnSerializer.Serialize(Object value)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIColumnSerializer.SerializeObject">
            <summary>Establecer el stub de IColumnSerializer.Serialize(Object value)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIConnectionInterceptor">
            <summary>Tipo stub de NPoco.IConnectionInterceptor</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIConnectionInterceptor.#ctor">
            <summary>Inicializa una nueva instancia de type StubIConnectionInterceptor</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIConnectionInterceptor.NPoco#IConnectionInterceptor#OnConnectionClosing(NPoco.IDatabase,System.Data.Common.DbConnection)">
            <summary>Establecer el stub de IConnectionInterceptor.OnConnectionClosing(IDatabase database, DbConnection conn)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIConnectionInterceptor.NPoco#IConnectionInterceptor#OnConnectionOpened(NPoco.IDatabase,System.Data.Common.DbConnection)">
            <summary>Establecer el stub de IConnectionInterceptor.OnConnectionOpened(IDatabase database, DbConnection conn)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIConnectionInterceptor.OnConnectionClosingIDatabaseDbConnection">
            <summary>Establecer el stub de IConnectionInterceptor.OnConnectionClosing(IDatabase database, DbConnection conn)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIConnectionInterceptor.OnConnectionOpenedIDatabaseDbConnection">
            <summary>Establecer el stub de IConnectionInterceptor.OnConnectionOpened(IDatabase database, DbConnection conn)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIDataInterceptor">
            <summary>Tipo stub de NPoco.IDataInterceptor</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDataInterceptor.#ctor">
            <summary>Inicializa una nueva instancia de type StubIDataInterceptor</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDataInterceptor.NPoco#IDataInterceptor#OnDeleting(NPoco.IDatabase,NPoco.DeleteContext)">
            <summary>Establecer el stub de IDataInterceptor.OnDeleting(IDatabase database, DeleteContext deleteContext)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDataInterceptor.NPoco#IDataInterceptor#OnInserting(NPoco.IDatabase,NPoco.InsertContext)">
            <summary>Establecer el stub de IDataInterceptor.OnInserting(IDatabase database, InsertContext insertContext)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDataInterceptor.NPoco#IDataInterceptor#OnUpdating(NPoco.IDatabase,NPoco.UpdateContext)">
            <summary>Establecer el stub de IDataInterceptor.OnUpdating(IDatabase database, UpdateContext updateContext)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDataInterceptor.OnDeletingIDatabaseDeleteContext">
            <summary>Establecer el stub de IDataInterceptor.OnDeleting(IDatabase database, DeleteContext deleteContext)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDataInterceptor.OnInsertingIDatabaseInsertContext">
            <summary>Establecer el stub de IDataInterceptor.OnInserting(IDatabase database, InsertContext insertContext)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDataInterceptor.OnUpdatingIDatabaseUpdateContext">
            <summary>Establecer el stub de IDataInterceptor.OnUpdating(IDatabase database, UpdateContext updateContext)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIDatabase">
            <summary>Tipo stub de NPoco.IDatabase</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.#ctor">
            <summary>Inicializa una nueva instancia de type StubIDatabase</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.AbortTransaction">
            <summary>Establecer el stub de IBaseDatabase.AbortTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.AddParameterDbCommandObject">
            <summary>Establecer el stub de IBaseDatabase.AddParameter(DbCommand cmd, Object value)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.AttachBackingFieldToMappers">
            <summary>Asocia delegados para emular StubIDatabase.Mappers como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.AttachBackingFieldToOneTimeCommandTimeout">
            <summary>Asocia delegados para emular StubIDatabase.OneTimeCommandTimeout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.AttachBackingFieldToPocoDataFactory">
            <summary>Asocia delegados para emular StubIDatabase.PocoDataFactory como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.BeginTransaction">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.BeginTransactionIsolationLevel">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.BuildPageQueriesOf1Int64Int64StringObjectArrayRefStringOutStringOut``1(Microsoft.QualityTools.Testing.Fakes.Delegates.NPocoDelegates.Ref3Out4Out5Action6{System.Int64,System.Int64,System.String,System.Object[],System.String,System.String})">
            <summary>Establecer stubs de BuildPageQueries(Int64 skip, Int64 take, String sql, Object[]&amp; args, String&amp; sqlCount, String&amp; sqlPage)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.CloseSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.CloseSharedConnection()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.CompleteTransaction">
            <summary>Establecer el stub de IBaseDatabase.CompleteTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabase.NPoco#IBaseDatabase#Connection">
            <summary>Establecer el stub de IBaseDatabase.get_Connection()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.ConnectionGet">
            <summary>Establecer el stub de IBaseDatabase.get_Connection()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseConfig#ConnectionString">
            <summary>Establecer el stub de IDatabaseConfig.get_ConnectionString()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.ConnectionStringGet">
            <summary>Establecer el stub de IDatabaseConfig.get_ConnectionString()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.CreateCommandDbConnectionCommandTypeStringObjectArray">
            <summary>Establecer el stub de IBaseDatabase.CreateCommand(DbConnection connection, CommandType commandType, String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.CreateParameter">
            <summary>Establecer el stub de IBaseDatabase.CreateParameter()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabase.NPoco#IBaseDatabase#Data">
            <summary>Establecer el stub de IBaseDatabase.get_Data()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.DataGet">
            <summary>Establecer el stub de IBaseDatabase.get_Data()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseConfig#DatabaseType">
            <summary>Establecer el stub de IDatabaseConfig.get_DatabaseType()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.DatabaseTypeGet">
            <summary>Establecer el stub de IDatabaseConfig.get_DatabaseType()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.DeleteAsyncObject">
            <summary>Establecer el stub de IAsyncDatabase.DeleteAsync(Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.DeleteManyAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IAsyncDeleteQueryProvider{``0}})">
            <summary>Establecer stubs de DeleteManyAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.DeleteManyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IDeleteQueryProvider{``0}})">
            <summary>Establecer stubs de DeleteMany()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.DeleteObject">
            <summary>Establecer el stub de IDatabase.Delete(Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.DeleteOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Int32})">
            <summary>Establecer stubs de Delete(Object pocoOrPrimaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.DeleteOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Int32})">
            <summary>Establecer stubs de Delete(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.DeleteOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Int32})">
            <summary>Establecer stubs de Delete(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.DeleteStringStringObject">
            <summary>Establecer el stub de IDatabase.Delete(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.DeleteStringStringObjectObject">
            <summary>Establecer el stub de IDatabase.Delete(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.DictionaryOf2Sql``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Collections.Generic.Dictionary{``0,``1}})">
            <summary>Establecer stubs de Dictionary(Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.DictionaryOf2StringObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.Dictionary{``0,``1}})">
            <summary>Establecer stubs de Dictionary(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.ExecuteAsyncSql">
            <summary>Establecer el stub de IAsyncDatabase.ExecuteAsync(Sql sql)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.ExecuteAsyncStringObjectArray">
            <summary>Establecer el stub de IAsyncDatabase.ExecuteAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.ExecuteScalarAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de ExecuteScalarAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.ExecuteScalarAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de ExecuteScalarAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.ExecuteScalarOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,``0})">
            <summary>Establecer stubs de ExecuteScalar(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.ExecuteScalarOf1StringCommandTypeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.CommandType,System.Object[],``0})">
            <summary>Establecer stubs de ExecuteScalar(String sql, CommandType commandType, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.ExecuteScalarOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Establecer stubs de ExecuteScalar(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.ExecuteSql">
            <summary>Establecer el stub de IDatabaseQuery.Execute(Sql sql)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.ExecuteStringCommandTypeObjectArray">
            <summary>Establecer el stub de IDatabaseQuery.Execute(String sql, CommandType commandType, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.ExecuteStringObjectArray">
            <summary>Establecer el stub de IDatabaseQuery.Execute(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.ExistsOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Boolean})">
            <summary>Establecer stubs de Exists(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleAsyncOf2Sql``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleAsyncOf2StringObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleAsyncOf3FuncOfListOfM0ListOfM1M2Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql,System.Threading.Tasks.Task{``2}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleAsyncOf3FuncOfListOfM0ListOfM1M2StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[],System.Threading.Tasks.Task{``2}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleAsyncOf3Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleAsyncOf3StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleAsyncOf4FuncOfListOfM0ListOfM1ListOfM2M3Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql,System.Threading.Tasks.Task{``3}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleAsyncOf4FuncOfListOfM0ListOfM1ListOfM2M3StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[],System.Threading.Tasks.Task{``3}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleAsyncOf4Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleAsyncOf4StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleAsyncOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4Sql``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql,System.Threading.Tasks.Task{``4}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleAsyncOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4StringObjectArray``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[],System.Threading.Tasks.Task{``4}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleOf2Sql``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}})">
            <summary>Establecer stubs de FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleOf2StringObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}})">
            <summary>Establecer stubs de FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleOf3FuncOfListOfM0ListOfM1M2Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql,``2})">
            <summary>Establecer stubs de FetchMultiple(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleOf3FuncOfListOfM0ListOfM1M2StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[],``2})">
            <summary>Establecer stubs de FetchMultiple(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleOf3Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}})">
            <summary>Establecer stubs de FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleOf3StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}})">
            <summary>Establecer stubs de FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleOf4FuncOfListOfM0ListOfM1ListOfM2M3Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql,``3})">
            <summary>Establecer stubs de FetchMultiple(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleOf4FuncOfListOfM0ListOfM1ListOfM2M3StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[],``3})">
            <summary>Establecer stubs de FetchMultiple(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleOf4Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}})">
            <summary>Establecer stubs de FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleOf4StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}})">
            <summary>Establecer stubs de FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4Sql``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql,``4})">
            <summary>Establecer stubs de FetchMultiple(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchMultipleOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4StringObjectArray``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[],``4})">
            <summary>Establecer stubs de FetchMultiple(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de Fetch()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de Fetch(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de Fetch(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de Fetch(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de Fetch(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchOneToManyOf1ExpressionOfFuncOfM0IListFuncOfM0ObjectSql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object},NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Func`2&lt;!!0,Object&gt; idFunc, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchOneToManyOf1ExpressionOfFuncOfM0IListFuncOfM0ObjectStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object},System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Func`2&lt;!!0,Object&gt; idFunc, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchOneToManyOf1ExpressionOfFuncOfM0IListSql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FetchOneToManyOf1ExpressionOfFuncOfM0IListStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.FetchTypeSql">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(Type type, Sql Sql)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.FetchTypeStringObjectArray">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(Type type, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FirstAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FirstAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FirstIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NPoco.Sql,``0})">
            <summary>Establecer stubs de FirstInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FirstIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,System.Object[],``0})">
            <summary>Establecer stubs de FirstInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FirstOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,``0})">
            <summary>Establecer stubs de First(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FirstOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Establecer stubs de First(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FirstOrDefaultAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FirstOrDefaultAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FirstOrDefaultIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NPoco.Sql,``0})">
            <summary>Establecer stubs de FirstOrDefaultInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FirstOrDefaultIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,System.Object[],``0})">
            <summary>Establecer stubs de FirstOrDefaultInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FirstOrDefaultOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,``0})">
            <summary>Establecer stubs de FirstOrDefault(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.FirstOrDefaultOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Establecer stubs de FirstOrDefault(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.GetTransaction">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.GetTransactionIsolationLevel">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.InsertAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task{System.Object}})">
            <summary>Establecer stubs de InsertAsync(!!0 poco)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.InsertAsyncStringStringObject">
            <summary>Establecer el stub de IAsyncDatabase.InsertAsync(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.InsertBatchAsyncOf1IEnumerableOfM0BatchOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},NPoco.BatchOptions,System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer stubs de InsertBatchAsync(IEnumerable`1&lt;!!0&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.InsertBatchOf1IEnumerableOfM0BatchOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},NPoco.BatchOptions,System.Int32})">
            <summary>Establecer stubs de InsertBatch(IEnumerable`1&lt;!!0&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.InsertBulkAsyncOf1IEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions,System.Threading.Tasks.Task})">
            <summary>Establecer stubs de InsertBulkAsync(IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.InsertBulkOf1IEnumerableOfM0InsertBulkOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions})">
            <summary>Establecer stubs de InsertBulk(IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.InsertOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Object})">
            <summary>Establecer stubs de Insert(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.InsertOf1StringStringBooleanM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,System.Boolean,``0,System.Object})">
            <summary>Establecer stubs de Insert(String tableName, String primaryKeyName, Boolean autoIncrement, !!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.InsertOf1StringStringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.String,``0,System.Object})">
            <summary>Establecer stubs de Insert(String tableName, String primaryKeyName, !!0 poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseConfig#Interceptors">
            <summary>Establecer el stub de IDatabaseConfig.get_Interceptors()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.InterceptorsGet">
            <summary>Establecer el stub de IDatabaseConfig.get_Interceptors()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.IsNewAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>Establecer stubs de IsNewAsync(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.IsNewOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Boolean})">
            <summary>Establecer stubs de IsNew(!!0 poco)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseConfig#Mappers">
            <summary>Establecer el stub de IDatabaseConfig.get_Mappers()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.MappersGet">
            <summary>Establecer el stub de IDatabaseConfig.get_Mappers()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.MappersSetMapperCollection">
            <summary>Establecer el stub de IDatabaseConfig.set_Mappers(MapperCollection value)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#DeleteAsync(System.Object)">
            <summary>Establecer el stub de IAsyncDatabase.DeleteAsync(Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#DeleteManyAsync``1">
            <summary>Establecer el stub de IAsyncDatabase.DeleteManyAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#ExecuteAsync(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncDatabase.ExecuteAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#ExecuteAsync(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncDatabase.ExecuteAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#ExecuteScalarAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncDatabase.ExecuteScalarAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#ExecuteScalarAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncDatabase.ExecuteScalarAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#InsertAsync``1(``0)">
            <summary>Establecer el stub de IAsyncDatabase.InsertAsync(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#InsertAsync(System.String,System.String,System.Object)">
            <summary>Establecer el stub de IAsyncDatabase.InsertAsync(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#InsertBatchAsync``1(System.Collections.Generic.IEnumerable{``0},NPoco.BatchOptions)">
            <summary>Establecer el stub de IAsyncDatabase.InsertBatchAsync(IEnumerable`1&lt;!!0&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#InsertBulkAsync``1(System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de IAsyncDatabase.InsertBulkAsync(IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#IsNewAsync``1(``0)">
            <summary>Establecer el stub de IAsyncDatabase.IsNewAsync(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#SaveAsync``1(``0)">
            <summary>Establecer el stub de IAsyncDatabase.SaveAsync(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#UpdateAsync(System.Object)">
            <summary>Establecer el stub de IAsyncDatabase.UpdateAsync(Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#UpdateAsync``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>Establecer el stub de IAsyncDatabase.UpdateAsync(!!0 poco, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#UpdateAsync(System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Establecer el stub de IAsyncDatabase.UpdateAsync(Object poco, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#UpdateBatchAsync``1(System.Collections.Generic.IEnumerable{NPoco.UpdateBatch{``0}},NPoco.BatchOptions)">
            <summary>Establecer el stub de IAsyncDatabase.UpdateBatchAsync(IEnumerable`1&lt;UpdateBatch`1&lt;!!0&gt;&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncDatabase#UpdateManyAsync``1">
            <summary>Establecer el stub de IAsyncDatabase.UpdateManyAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchAsync``1">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchAsync``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchAsync``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``2(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``5(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``2(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``5(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FirstAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FirstAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FirstOrDefaultAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#FirstOrDefaultAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#PageAsync``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.PageAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#PageAsync``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.PageAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#QueryAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.QueryAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#QueryAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.QueryAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#QueryAsync``1">
            <summary>Establecer el stub de IAsyncQueryDatabase.QueryAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#SingleAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#SingleAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#SingleByIdAsync``1(System.Object)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#SingleOrDefaultAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#SingleOrDefaultAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#SingleOrDefaultByIdAsync``1(System.Object)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleOrDefaultByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#SkipTakeAsync``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SkipTakeAsync(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IAsyncQueryDatabase#SkipTakeAsync``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.SkipTakeAsync(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IBaseDatabase#AbortTransaction">
            <summary>Establecer el stub de IBaseDatabase.AbortTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IBaseDatabase#AddParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>Establecer el stub de IBaseDatabase.AddParameter(DbCommand cmd, Object value)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IBaseDatabase#BeginTransaction">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IBaseDatabase#BeginTransaction(System.Data.IsolationLevel)">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IBaseDatabase#CloseSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.CloseSharedConnection()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IBaseDatabase#CompleteTransaction">
            <summary>Establecer el stub de IBaseDatabase.CompleteTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IBaseDatabase#CreateCommand(System.Data.Common.DbConnection,System.Data.CommandType,System.String,System.Object[])">
            <summary>Establecer el stub de IBaseDatabase.CreateCommand(DbConnection connection, CommandType commandType, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IBaseDatabase#CreateParameter">
            <summary>Establecer el stub de IBaseDatabase.CreateParameter()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IBaseDatabase#GetTransaction">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IBaseDatabase#GetTransaction(System.Data.IsolationLevel)">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IBaseDatabase#OpenSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.OpenSharedConnection()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IBaseDatabase#SetTransaction(System.Data.Common.DbTransaction)">
            <summary>Establecer el stub de IBaseDatabase.SetTransaction(DbTransaction tran)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Delete``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabase.Delete(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Delete(System.Object)">
            <summary>Establecer el stub de IDatabase.Delete(Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Delete``1(System.Object)">
            <summary>Establecer el stub de IDatabase.Delete(Object pocoOrPrimaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Delete``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabase.Delete(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Delete(System.String,System.String,System.Object)">
            <summary>Establecer el stub de IDatabase.Delete(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Delete(System.String,System.String,System.Object,System.Object)">
            <summary>Establecer el stub de IDatabase.Delete(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#DeleteMany``1">
            <summary>Establecer el stub de IDatabase.DeleteMany()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Insert``1(``0)">
            <summary>Establecer el stub de IDatabase.Insert(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Insert``1(System.String,System.String,``0)">
            <summary>Establecer el stub de IDatabase.Insert(String tableName, String primaryKeyName, !!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Insert``1(System.String,System.String,System.Boolean,``0)">
            <summary>Establecer el stub de IDatabase.Insert(String tableName, String primaryKeyName, Boolean autoIncrement, !!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#InsertBatch``1(System.Collections.Generic.IEnumerable{``0},NPoco.BatchOptions)">
            <summary>Establecer el stub de IDatabase.InsertBatch(IEnumerable`1&lt;!!0&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#InsertBulk``1(System.Collections.Generic.IEnumerable{``0},NPoco.InsertBulkOptions)">
            <summary>Establecer el stub de IDatabase.InsertBulk(IEnumerable`1&lt;!!0&gt; pocos, InsertBulkOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#IsNew``1(``0)">
            <summary>Establecer el stub de IDatabase.IsNew(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Save``1(``0)">
            <summary>Establecer el stub de IDatabase.Save(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Update``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabase.Update(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Update(System.Object)">
            <summary>Establecer el stub de IDatabase.Update(Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Update(System.Object,System.Object)">
            <summary>Establecer el stub de IDatabase.Update(Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Update(System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Establecer el stub de IDatabase.Update(Object poco, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Update``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabase.Update(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Update``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>Establecer el stub de IDatabase.Update(!!0 poco, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Update(System.Object,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Establecer el stub de IDatabase.Update(Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Update(System.String,System.String,System.Object)">
            <summary>Establecer el stub de IDatabase.Update(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Update(System.String,System.String,System.Object,System.Object)">
            <summary>Establecer el stub de IDatabase.Update(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Update(System.String,System.String,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Establecer el stub de IDatabase.Update(String tableName, String primaryKeyName, Object poco, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#Update(System.String,System.String,System.Object,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Establecer el stub de IDatabase.Update(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#UpdateBatch``1(System.Collections.Generic.IEnumerable{NPoco.UpdateBatch{``0}},NPoco.BatchOptions)">
            <summary>Establecer el stub de IDatabase.UpdateBatch(IEnumerable`1&lt;UpdateBatch`1&lt;!!0&gt;&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabase#UpdateMany``1">
            <summary>Establecer el stub de IDatabase.UpdateMany()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#BuildPageQueries``1(System.Int64,System.Int64,System.String,System.Object[]@,System.String@,System.String@)">
            <summary>Establecer el stub de IDatabaseQuery.BuildPageQueries(Int64 skip, Int64 take, String sql, Object[]&amp; args, String&amp; sqlCount, String&amp; sqlPage)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Dictionary``2(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Dictionary(Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Dictionary``2(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Dictionary(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Execute(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Execute(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Execute(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Execute(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Execute(System.String,System.Data.CommandType,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Execute(String sql, CommandType commandType, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#ExecuteScalar``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.ExecuteScalar(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#ExecuteScalar``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.ExecuteScalar(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#ExecuteScalar``1(System.String,System.Data.CommandType,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.ExecuteScalar(String sql, CommandType commandType, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Exists``1(System.Object)">
            <summary>Establecer el stub de IDatabaseQuery.Exists(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Fetch(System.Type,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(Type type, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Fetch``1">
            <summary>Establecer el stub de IDatabaseQuery.Fetch()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Fetch``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Fetch``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Fetch``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Fetch``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Fetch(System.Type,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(Type type, Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchMultiple``2(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchMultiple``3(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchMultiple``3(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchMultiple``4(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchMultiple``4(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchMultiple``3(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchMultiple``3(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchMultiple``4(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchMultiple``4(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchMultiple``5(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchMultiple``2(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchMultiple``5(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchOneToMany``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchOneToMany``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchOneToMany``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object},NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Func`2&lt;!!0,Object&gt; idFunc, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FetchOneToMany``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object},System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Func`2&lt;!!0,Object&gt; idFunc, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#First``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.First(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#First``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.First(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FirstInto``1(``0,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FirstInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FirstInto``1(``0,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FirstInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FirstOrDefault``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FirstOrDefault(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FirstOrDefault``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FirstOrDefault(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FirstOrDefaultInto``1(``0,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FirstOrDefaultInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#FirstOrDefaultInto``1(``0,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FirstOrDefaultInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Page``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Page(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Page``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Page(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Query``1">
            <summary>Establecer el stub de IDatabaseQuery.Query()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Query``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Query(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Query(System.Type,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Query(Type type, Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Query``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Query(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Query(System.Type,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Query(Type type, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Single``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Single(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#Single``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Single(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#SingleById``1(System.Object)">
            <summary>Establecer el stub de IDatabaseQuery.SingleById(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#SingleInto``1(``0,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.SingleInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#SingleInto``1(``0,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.SingleInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#SingleOrDefault``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.SingleOrDefault(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#SingleOrDefault``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.SingleOrDefault(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#SingleOrDefaultById``1(System.Object)">
            <summary>Establecer el stub de IDatabaseQuery.SingleOrDefaultById(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#SingleOrDefaultInto``1(``0,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.SingleOrDefaultInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#SingleOrDefaultInto``1(``0,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.SingleOrDefaultInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#SkipTake``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.SkipTake(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#SkipTake``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.SkipTake(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseQuery#OneTimeCommandTimeout">
            <summary>Establecer el stub de IDatabaseQuery.get_OneTimeCommandTimeout()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.OneTimeCommandTimeoutGet">
            <summary>Establecer el stub de IDatabaseQuery.get_OneTimeCommandTimeout()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.OneTimeCommandTimeoutSetInt32">
            <summary>Establecer el stub de IDatabaseQuery.set_OneTimeCommandTimeout(Int32 value)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.OpenSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.OpenSharedConnection()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.PageAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{NPoco.Page{``0}}})">
            <summary>Establecer stubs de PageAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.PageAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{NPoco.Page{``0}}})">
            <summary>Establecer stubs de PageAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.PageOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,NPoco.Page{``0}})">
            <summary>Establecer stubs de Page(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.PageOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],NPoco.Page{``0}})">
            <summary>Establecer stubs de Page(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabase.NPoco#IDatabaseConfig#PocoDataFactory">
            <summary>Establecer el stub de IDatabaseConfig.get_PocoDataFactory()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.PocoDataFactoryGet">
            <summary>Establecer el stub de IDatabaseConfig.get_PocoDataFactory()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.PocoDataFactorySetIPocoDataFactory">
            <summary>Establecer el stub de IDatabaseConfig.set_PocoDataFactory(IPocoDataFactory value)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.QueryAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IAsyncQueryProviderWithIncludes{``0}})">
            <summary>Establecer stubs de QueryAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.QueryAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer stubs de QueryAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.QueryAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer stubs de QueryAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.QueryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IQueryProviderWithIncludes{``0}})">
            <summary>Establecer stubs de Query()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.QueryOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer stubs de Query(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.QueryOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer stubs de Query(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.QueryTypeSql">
            <summary>Establecer el stub de IDatabaseQuery.Query(Type type, Sql Sql)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.QueryTypeStringObjectArray">
            <summary>Establecer el stub de IDatabaseQuery.Query(Type type, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SaveAsyncOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Threading.Tasks.Task})">
            <summary>Establecer stubs de SaveAsync(!!0 poco)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SaveOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Establecer stubs de Save(!!0 poco)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.SetTransactionDbTransaction">
            <summary>Establecer el stub de IBaseDatabase.SetTransaction(DbTransaction tran)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleByIdAsyncOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleByIdOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Establecer stubs de SingleById(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NPoco.Sql,``0})">
            <summary>Establecer stubs de SingleInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,System.Object[],``0})">
            <summary>Establecer stubs de SingleInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,``0})">
            <summary>Establecer stubs de Single(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Establecer stubs de Single(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleOrDefaultAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleOrDefaultAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleOrDefaultByIdAsyncOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleOrDefaultByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleOrDefaultByIdOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Establecer stubs de SingleOrDefaultById(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleOrDefaultIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NPoco.Sql,``0})">
            <summary>Establecer stubs de SingleOrDefaultInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleOrDefaultIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,System.Object[],``0})">
            <summary>Establecer stubs de SingleOrDefaultInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleOrDefaultOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,``0})">
            <summary>Establecer stubs de SingleOrDefault(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SingleOrDefaultOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Establecer stubs de SingleOrDefault(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SkipTakeAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de SkipTakeAsync(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SkipTakeAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de SkipTakeAsync(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SkipTakeOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de SkipTake(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.SkipTakeOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de SkipTake(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.System#IDisposable#Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabase.NPoco#IBaseDatabase#Transaction">
            <summary>Establecer el stub de IBaseDatabase.get_Transaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.TransactionGet">
            <summary>Establecer el stub de IBaseDatabase.get_Transaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.UpdateAsyncObject">
            <summary>Establecer el stub de IAsyncDatabase.UpdateAsync(Object poco)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.UpdateAsyncObjectIEnumerableOfString">
            <summary>Establecer el stub de IAsyncDatabase.UpdateAsync(Object poco, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.UpdateAsyncOf1M0ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer stubs de UpdateAsync(!!0 poco, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.UpdateBatchAsyncOf1IEnumerableOfUpdateBatchOfM0BatchOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{NPoco.UpdateBatch{``0}},NPoco.BatchOptions,System.Threading.Tasks.Task{System.Int32}})">
            <summary>Establecer stubs de UpdateBatchAsync(IEnumerable`1&lt;UpdateBatch`1&lt;!!0&gt;&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.UpdateBatchOf1IEnumerableOfUpdateBatchOfM0BatchOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{NPoco.UpdateBatch{``0}},NPoco.BatchOptions,System.Int32})">
            <summary>Establecer stubs de UpdateBatch(IEnumerable`1&lt;UpdateBatch`1&lt;!!0&gt;&gt; pocos, BatchOptions options)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.UpdateManyAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IAsyncUpdateQueryProvider{``0}})">
            <summary>Establecer stubs de UpdateManyAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.UpdateManyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IUpdateQueryProvider{``0}})">
            <summary>Establecer stubs de UpdateMany()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.UpdateObject">
            <summary>Establecer el stub de IDatabase.Update(Object poco)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.UpdateObjectIEnumerableOfString">
            <summary>Establecer el stub de IDatabase.Update(Object poco, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.UpdateObjectObject">
            <summary>Establecer el stub de IDatabase.Update(Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.UpdateObjectObjectIEnumerableOfString">
            <summary>Establecer el stub de IDatabase.Update(Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.UpdateOf1M0ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Int32})">
            <summary>Establecer stubs de Update(!!0 poco, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; fields)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.UpdateOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Int32})">
            <summary>Establecer stubs de Update(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabase.UpdateOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Int32})">
            <summary>Establecer stubs de Update(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.UpdateStringStringObject">
            <summary>Establecer el stub de IDatabase.Update(String tableName, String primaryKeyName, Object poco)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.UpdateStringStringObjectIEnumerableOfString">
            <summary>Establecer el stub de IDatabase.Update(String tableName, String primaryKeyName, Object poco, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.UpdateStringStringObjectObject">
            <summary>Establecer el stub de IDatabase.Update(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabase.UpdateStringStringObjectObjectIEnumerableOfString">
            <summary>Establecer el stub de IDatabase.Update(String tableName, String primaryKeyName, Object poco, Object primaryKeyValue, IEnumerable`1&lt;String&gt; columns)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIDatabaseConfig">
            <summary>Tipo stub de NPoco.IDatabaseConfig</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseConfig.#ctor">
            <summary>Inicializa una nueva instancia de type StubIDatabaseConfig</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseConfig.AttachBackingFieldToMappers">
            <summary>Asocia delegados para emular StubIDatabaseConfig.Mappers como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseConfig.AttachBackingFieldToPocoDataFactory">
            <summary>Asocia delegados para emular StubIDatabaseConfig.PocoDataFactory como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabaseConfig.NPoco#IDatabaseConfig#ConnectionString">
            <summary>Establecer el stub de IDatabaseConfig.get_ConnectionString()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseConfig.ConnectionStringGet">
            <summary>Establecer el stub de IDatabaseConfig.get_ConnectionString()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabaseConfig.NPoco#IDatabaseConfig#DatabaseType">
            <summary>Establecer el stub de IDatabaseConfig.get_DatabaseType()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseConfig.DatabaseTypeGet">
            <summary>Establecer el stub de IDatabaseConfig.get_DatabaseType()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabaseConfig.NPoco#IDatabaseConfig#Interceptors">
            <summary>Establecer el stub de IDatabaseConfig.get_Interceptors()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseConfig.InterceptorsGet">
            <summary>Establecer el stub de IDatabaseConfig.get_Interceptors()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabaseConfig.NPoco#IDatabaseConfig#Mappers">
            <summary>Establecer el stub de IDatabaseConfig.get_Mappers()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseConfig.MappersGet">
            <summary>Establecer el stub de IDatabaseConfig.get_Mappers()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseConfig.MappersSetMapperCollection">
            <summary>Establecer el stub de IDatabaseConfig.set_Mappers(MapperCollection value)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabaseConfig.NPoco#IDatabaseConfig#PocoDataFactory">
            <summary>Establecer el stub de IDatabaseConfig.get_PocoDataFactory()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseConfig.PocoDataFactoryGet">
            <summary>Establecer el stub de IDatabaseConfig.get_PocoDataFactory()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseConfig.PocoDataFactorySetIPocoDataFactory">
            <summary>Establecer el stub de IDatabaseConfig.set_PocoDataFactory(IPocoDataFactory value)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIDatabaseHelpers">
            <summary>Tipo stub de NPoco.IDatabaseHelpers</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseHelpers.#ctor">
            <summary>Inicializa una nueva instancia de type StubIDatabaseHelpers</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseHelpers.ExecuteNonQueryHelperAsyncDbCommand">
            <summary>Establecer el stub de IDatabaseHelpers.ExecuteNonQueryHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseHelpers.ExecuteNonQueryHelperDbCommand">
            <summary>Establecer el stub de IDatabaseHelpers.ExecuteNonQueryHelper(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseHelpers.ExecuteReaderHelperAsyncDbCommand">
            <summary>Establecer el stub de IDatabaseHelpers.ExecuteReaderHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseHelpers.ExecuteReaderHelperDbCommand">
            <summary>Establecer el stub de IDatabaseHelpers.ExecuteReaderHelper(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseHelpers.ExecuteScalarHelperAsyncDbCommand">
            <summary>Establecer el stub de IDatabaseHelpers.ExecuteScalarHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseHelpers.ExecuteScalarHelperDbCommand">
            <summary>Establecer el stub de IDatabaseHelpers.ExecuteScalarHelper(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseHelpers.NPoco#IDatabaseHelpers#ExecuteNonQueryHelper(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de IDatabaseHelpers.ExecuteNonQueryHelper(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseHelpers.NPoco#IDatabaseHelpers#ExecuteNonQueryHelperAsync(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de IDatabaseHelpers.ExecuteNonQueryHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseHelpers.NPoco#IDatabaseHelpers#ExecuteReaderHelper(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de IDatabaseHelpers.ExecuteReaderHelper(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseHelpers.NPoco#IDatabaseHelpers#ExecuteReaderHelperAsync(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de IDatabaseHelpers.ExecuteReaderHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseHelpers.NPoco#IDatabaseHelpers#ExecuteScalarHelper(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de IDatabaseHelpers.ExecuteScalarHelper(DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseHelpers.NPoco#IDatabaseHelpers#ExecuteScalarHelperAsync(System.Data.Common.DbCommand)">
            <summary>Establecer el stub de IDatabaseHelpers.ExecuteScalarHelperAsync(DbCommand cmd)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIDatabaseQuery">
            <summary>Tipo stub de NPoco.IDatabaseQuery</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.#ctor">
            <summary>Inicializa una nueva instancia de type StubIDatabaseQuery</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.AbortTransaction">
            <summary>Establecer el stub de IBaseDatabase.AbortTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.AddParameterDbCommandObject">
            <summary>Establecer el stub de IBaseDatabase.AddParameter(DbCommand cmd, Object value)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.AttachBackingFieldToOneTimeCommandTimeout">
            <summary>Asocia delegados para emular StubIDatabaseQuery.OneTimeCommandTimeout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.BeginTransaction">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.BeginTransactionIsolationLevel">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.BuildPageQueriesOf1Int64Int64StringObjectArrayRefStringOutStringOut``1(Microsoft.QualityTools.Testing.Fakes.Delegates.NPocoDelegates.Ref3Out4Out5Action6{System.Int64,System.Int64,System.String,System.Object[],System.String,System.String})">
            <summary>Establecer stubs de BuildPageQueries(Int64 skip, Int64 take, String sql, Object[]&amp; args, String&amp; sqlCount, String&amp; sqlPage)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.CloseSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.CloseSharedConnection()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.CompleteTransaction">
            <summary>Establecer el stub de IBaseDatabase.CompleteTransaction()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabaseQuery.NPoco#IBaseDatabase#Connection">
            <summary>Establecer el stub de IBaseDatabase.get_Connection()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.ConnectionGet">
            <summary>Establecer el stub de IBaseDatabase.get_Connection()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.CreateCommandDbConnectionCommandTypeStringObjectArray">
            <summary>Establecer el stub de IBaseDatabase.CreateCommand(DbConnection connection, CommandType commandType, String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.CreateParameter">
            <summary>Establecer el stub de IBaseDatabase.CreateParameter()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabaseQuery.NPoco#IBaseDatabase#Data">
            <summary>Establecer el stub de IBaseDatabase.get_Data()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.DataGet">
            <summary>Establecer el stub de IBaseDatabase.get_Data()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.DictionaryOf2Sql``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Collections.Generic.Dictionary{``0,``1}})">
            <summary>Establecer stubs de Dictionary(Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.DictionaryOf2StringObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.Dictionary{``0,``1}})">
            <summary>Establecer stubs de Dictionary(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.ExecuteScalarOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,``0})">
            <summary>Establecer stubs de ExecuteScalar(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.ExecuteScalarOf1StringCommandTypeObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.CommandType,System.Object[],``0})">
            <summary>Establecer stubs de ExecuteScalar(String sql, CommandType commandType, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.ExecuteScalarOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Establecer stubs de ExecuteScalar(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.ExecuteSql">
            <summary>Establecer el stub de IDatabaseQuery.Execute(Sql sql)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.ExecuteStringCommandTypeObjectArray">
            <summary>Establecer el stub de IDatabaseQuery.Execute(String sql, CommandType commandType, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.ExecuteStringObjectArray">
            <summary>Establecer el stub de IDatabaseQuery.Execute(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.ExistsOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Boolean})">
            <summary>Establecer stubs de Exists(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de FetchAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleAsyncOf2Sql``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleAsyncOf2StringObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleAsyncOf3FuncOfListOfM0ListOfM1M2Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql,System.Threading.Tasks.Task{``2}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleAsyncOf3FuncOfListOfM0ListOfM1M2StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[],System.Threading.Tasks.Task{``2}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleAsyncOf3Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleAsyncOf3StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleAsyncOf4FuncOfListOfM0ListOfM1ListOfM2M3Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql,System.Threading.Tasks.Task{``3}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleAsyncOf4FuncOfListOfM0ListOfM1ListOfM2M3StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[],System.Threading.Tasks.Task{``3}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleAsyncOf4Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleAsyncOf4StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}}})">
            <summary>Establecer stubs de FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleAsyncOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4Sql``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql,System.Threading.Tasks.Task{``4}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleAsyncOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4StringObjectArray``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[],System.Threading.Tasks.Task{``4}})">
            <summary>Establecer stubs de FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleOf2Sql``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}})">
            <summary>Establecer stubs de FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleOf2StringObjectArray``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1}}})">
            <summary>Establecer stubs de FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleOf3FuncOfListOfM0ListOfM1M2Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql,``2})">
            <summary>Establecer stubs de FetchMultiple(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleOf3FuncOfListOfM0ListOfM1M2StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[],``2})">
            <summary>Establecer stubs de FetchMultiple(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleOf3Sql``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}})">
            <summary>Establecer stubs de FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleOf3StringObjectArray``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2}}})">
            <summary>Establecer stubs de FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleOf4FuncOfListOfM0ListOfM1ListOfM2M3Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql,``3})">
            <summary>Establecer stubs de FetchMultiple(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleOf4FuncOfListOfM0ListOfM1ListOfM2M3StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[],``3})">
            <summary>Establecer stubs de FetchMultiple(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleOf4Sql``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}})">
            <summary>Establecer stubs de FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleOf4StringObjectArray``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.ValueTuple{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3}}})">
            <summary>Establecer stubs de FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4Sql``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql,``4})">
            <summary>Establecer stubs de FetchMultiple(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchMultipleOf5FuncOfListOfM0ListOfM1ListOfM2ListOfM3M4StringObjectArray``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[],``4})">
            <summary>Establecer stubs de FetchMultiple(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de Fetch()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de Fetch(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de Fetch(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de Fetch(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de Fetch(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchOneToManyOf1ExpressionOfFuncOfM0IListFuncOfM0ObjectSql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object},NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Func`2&lt;!!0,Object&gt; idFunc, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchOneToManyOf1ExpressionOfFuncOfM0IListFuncOfM0ObjectStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object},System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Func`2&lt;!!0,Object&gt; idFunc, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchOneToManyOf1ExpressionOfFuncOfM0IListSql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FetchOneToManyOf1ExpressionOfFuncOfM0IListStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.FetchTypeSql">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(Type type, Sql Sql)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.FetchTypeStringObjectArray">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(Type type, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FirstAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FirstAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FirstIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NPoco.Sql,``0})">
            <summary>Establecer stubs de FirstInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FirstIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,System.Object[],``0})">
            <summary>Establecer stubs de FirstInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FirstOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,``0})">
            <summary>Establecer stubs de First(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FirstOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Establecer stubs de First(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FirstOrDefaultAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FirstOrDefaultAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de FirstOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FirstOrDefaultIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NPoco.Sql,``0})">
            <summary>Establecer stubs de FirstOrDefaultInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FirstOrDefaultIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,System.Object[],``0})">
            <summary>Establecer stubs de FirstOrDefaultInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FirstOrDefaultOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,``0})">
            <summary>Establecer stubs de FirstOrDefault(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.FirstOrDefaultOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Establecer stubs de FirstOrDefault(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.GetTransaction">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.GetTransactionIsolationLevel">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchAsync``1">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchAsync``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchAsync``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``2(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``2(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``5(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``5(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``4(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FetchMultipleAsync``3(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FetchMultipleAsync(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FirstAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FirstAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FirstOrDefaultAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#FirstOrDefaultAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.FirstOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#PageAsync``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.PageAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#PageAsync``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.PageAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#QueryAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.QueryAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#QueryAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.QueryAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#QueryAsync``1">
            <summary>Establecer el stub de IAsyncQueryDatabase.QueryAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#SingleAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#SingleAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#SingleByIdAsync``1(System.Object)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#SingleOrDefaultAsync``1(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#SingleOrDefaultAsync``1(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#SingleOrDefaultByIdAsync``1(System.Object)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SingleOrDefaultByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#SkipTakeAsync``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryDatabase.SkipTakeAsync(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IAsyncQueryDatabase#SkipTakeAsync``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryDatabase.SkipTakeAsync(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IBaseDatabase#AbortTransaction">
            <summary>Establecer el stub de IBaseDatabase.AbortTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IBaseDatabase#AddParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>Establecer el stub de IBaseDatabase.AddParameter(DbCommand cmd, Object value)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IBaseDatabase#BeginTransaction">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IBaseDatabase#BeginTransaction(System.Data.IsolationLevel)">
            <summary>Establecer el stub de IBaseDatabase.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IBaseDatabase#CloseSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.CloseSharedConnection()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IBaseDatabase#CompleteTransaction">
            <summary>Establecer el stub de IBaseDatabase.CompleteTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IBaseDatabase#CreateCommand(System.Data.Common.DbConnection,System.Data.CommandType,System.String,System.Object[])">
            <summary>Establecer el stub de IBaseDatabase.CreateCommand(DbConnection connection, CommandType commandType, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IBaseDatabase#CreateParameter">
            <summary>Establecer el stub de IBaseDatabase.CreateParameter()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IBaseDatabase#GetTransaction">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IBaseDatabase#GetTransaction(System.Data.IsolationLevel)">
            <summary>Establecer el stub de IBaseDatabase.GetTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IBaseDatabase#OpenSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.OpenSharedConnection()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IBaseDatabase#SetTransaction(System.Data.Common.DbTransaction)">
            <summary>Establecer el stub de IBaseDatabase.SetTransaction(DbTransaction tran)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#BuildPageQueries``1(System.Int64,System.Int64,System.String,System.Object[]@,System.String@,System.String@)">
            <summary>Establecer el stub de IDatabaseQuery.BuildPageQueries(Int64 skip, Int64 take, String sql, Object[]&amp; args, String&amp; sqlCount, String&amp; sqlPage)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Dictionary``2(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Dictionary(Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Dictionary``2(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Dictionary(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Execute(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Execute(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Execute(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Execute(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Execute(System.String,System.Data.CommandType,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Execute(String sql, CommandType commandType, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#ExecuteScalar``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.ExecuteScalar(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#ExecuteScalar``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.ExecuteScalar(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#ExecuteScalar``1(System.String,System.Data.CommandType,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.ExecuteScalar(String sql, CommandType commandType, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Exists``1(System.Object)">
            <summary>Establecer el stub de IDatabaseQuery.Exists(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Fetch(System.Type,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(Type type, Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Fetch``1">
            <summary>Establecer el stub de IDatabaseQuery.Fetch()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Fetch(System.Type,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(Type type, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Fetch``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Fetch``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Fetch``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Fetch``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Fetch(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchMultiple``2(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchMultiple``2(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchMultiple``3(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchMultiple``3(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchMultiple``5(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchMultiple``3(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchMultiple``4(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchMultiple``3(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},``2},System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Func`3&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,!!2&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchMultiple``4(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchMultiple``4(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchMultiple``4(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},``3},System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Func`4&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,!!3&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchMultiple``5(System.Func{System.Collections.Generic.List{``0},System.Collections.Generic.List{``1},System.Collections.Generic.List{``2},System.Collections.Generic.List{``3},``4},System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchMultiple(Func`5&lt;List`1&lt;!!0&gt;,List`1&lt;!!1&gt;,List`1&lt;!!2&gt;,List`1&lt;!!3&gt;,!!4&gt; cb, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchOneToMany``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchOneToMany``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchOneToMany``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object},NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Func`2&lt;!!0,Object&gt; idFunc, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FetchOneToMany``1(System.Linq.Expressions.Expression{System.Func{``0,System.Collections.IList}},System.Func{``0,System.Object},System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FetchOneToMany(Expression`1&lt;Func`2&lt;!!0,IList&gt;&gt; many, Func`2&lt;!!0,Object&gt; idFunc, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#First``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.First(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#First``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.First(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FirstInto``1(``0,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FirstInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FirstInto``1(``0,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FirstInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FirstOrDefault``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FirstOrDefault(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FirstOrDefault``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FirstOrDefault(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FirstOrDefaultInto``1(``0,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.FirstOrDefaultInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#FirstOrDefaultInto``1(``0,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.FirstOrDefaultInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Page``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Page(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Page``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Page(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Query``1">
            <summary>Establecer el stub de IDatabaseQuery.Query()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Query``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Query(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Query(System.Type,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Query(Type type, Sql Sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Query(System.Type,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Query(Type type, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Query``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Query(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Single``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.Single(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#Single``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.Single(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#SingleById``1(System.Object)">
            <summary>Establecer el stub de IDatabaseQuery.SingleById(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#SingleInto``1(``0,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.SingleInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#SingleInto``1(``0,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.SingleInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#SingleOrDefault``1(NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.SingleOrDefault(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#SingleOrDefault``1(System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.SingleOrDefault(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#SingleOrDefaultById``1(System.Object)">
            <summary>Establecer el stub de IDatabaseQuery.SingleOrDefaultById(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#SingleOrDefaultInto``1(``0,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.SingleOrDefaultInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#SingleOrDefaultInto``1(``0,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.SingleOrDefaultInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#SkipTake``1(System.Int64,System.Int64,NPoco.Sql)">
            <summary>Establecer el stub de IDatabaseQuery.SkipTake(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#SkipTake``1(System.Int64,System.Int64,System.String,System.Object[])">
            <summary>Establecer el stub de IDatabaseQuery.SkipTake(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabaseQuery.NPoco#IDatabaseQuery#OneTimeCommandTimeout">
            <summary>Establecer el stub de IDatabaseQuery.get_OneTimeCommandTimeout()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.OneTimeCommandTimeoutGet">
            <summary>Establecer el stub de IDatabaseQuery.get_OneTimeCommandTimeout()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.OneTimeCommandTimeoutSetInt32">
            <summary>Establecer el stub de IDatabaseQuery.set_OneTimeCommandTimeout(Int32 value)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.OpenSharedConnection">
            <summary>Establecer el stub de IBaseDatabase.OpenSharedConnection()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.PageAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{NPoco.Page{``0}}})">
            <summary>Establecer stubs de PageAsync(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.PageAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{NPoco.Page{``0}}})">
            <summary>Establecer stubs de PageAsync(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.PageOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,NPoco.Page{``0}})">
            <summary>Establecer stubs de Page(Int64 page, Int64 itemsPerPage, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.PageOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],NPoco.Page{``0}})">
            <summary>Establecer stubs de Page(Int64 page, Int64 itemsPerPage, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.QueryAsyncOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IAsyncQueryProviderWithIncludes{``0}})">
            <summary>Establecer stubs de QueryAsync()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.QueryAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer stubs de QueryAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.QueryAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.IAsyncEnumerable{``0}})">
            <summary>Establecer stubs de QueryAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.QueryOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.IQueryProviderWithIncludes{``0}})">
            <summary>Establecer stubs de Query()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.QueryOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer stubs de Query(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.QueryOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Establecer stubs de Query(String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.QueryTypeSql">
            <summary>Establecer el stub de IDatabaseQuery.Query(Type type, Sql Sql)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.QueryTypeStringObjectArray">
            <summary>Establecer el stub de IDatabaseQuery.Query(Type type, String sql, Object[] args)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.SetTransactionDbTransaction">
            <summary>Establecer el stub de IBaseDatabase.SetTransaction(DbTransaction tran)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleByIdAsyncOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleByIdOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Establecer stubs de SingleById(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NPoco.Sql,``0})">
            <summary>Establecer stubs de SingleInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,System.Object[],``0})">
            <summary>Establecer stubs de SingleInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,``0})">
            <summary>Establecer stubs de Single(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Establecer stubs de Single(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleOrDefaultAsyncOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleOrDefaultAsync(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleOrDefaultAsyncOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleOrDefaultAsync(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleOrDefaultByIdAsyncOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Threading.Tasks.Task{``0}})">
            <summary>Establecer stubs de SingleOrDefaultByIdAsync(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleOrDefaultByIdOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Establecer stubs de SingleOrDefaultById(Object primaryKey)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleOrDefaultIntoOf1M0Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NPoco.Sql,``0})">
            <summary>Establecer stubs de SingleOrDefaultInto(!!0 instance, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleOrDefaultIntoOf1M0StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String,System.Object[],``0})">
            <summary>Establecer stubs de SingleOrDefaultInto(!!0 instance, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleOrDefaultOf1Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Sql,``0})">
            <summary>Establecer stubs de SingleOrDefault(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SingleOrDefaultOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],``0})">
            <summary>Establecer stubs de SingleOrDefault(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SkipTakeAsyncOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de SkipTakeAsync(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SkipTakeAsyncOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de SkipTakeAsync(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SkipTakeOf1Int64Int64Sql``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,NPoco.Sql,System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de SkipTake(Int64 skip, Int64 take, Sql sql)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.SkipTakeOf1Int64Int64StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int64,System.Int64,System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de SkipTake(Int64 skip, Int64 take, String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIDatabaseQuery.System#IDisposable#Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIDatabaseQuery.NPoco#IBaseDatabase#Transaction">
            <summary>Establecer el stub de IBaseDatabase.get_Transaction()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIDatabaseQuery.TransactionGet">
            <summary>Establecer el stub de IBaseDatabase.get_Transaction()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIExceptionInterceptor">
            <summary>Tipo stub de NPoco.IExceptionInterceptor</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIExceptionInterceptor.#ctor">
            <summary>Inicializa una nueva instancia de type StubIExceptionInterceptor</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIExceptionInterceptor.NPoco#IExceptionInterceptor#OnException(NPoco.IDatabase,System.Exception)">
            <summary>Establecer el stub de IExceptionInterceptor.OnException(IDatabase database, Exception exception)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIExceptionInterceptor.OnExceptionIDatabaseException">
            <summary>Establecer el stub de IExceptionInterceptor.OnException(IDatabase database, Exception exception)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIExecutingInterceptor">
            <summary>Tipo stub de NPoco.IExecutingInterceptor</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIExecutingInterceptor.#ctor">
            <summary>Inicializa una nueva instancia de type StubIExecutingInterceptor</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIExecutingInterceptor.NPoco#IExecutingInterceptor#OnExecutedCommand(NPoco.IDatabase,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de IExecutingInterceptor.OnExecutedCommand(IDatabase database, DbCommand cmd)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIExecutingInterceptor.NPoco#IExecutingInterceptor#OnExecutingCommand(NPoco.IDatabase,System.Data.Common.DbCommand)">
            <summary>Establecer el stub de IExecutingInterceptor.OnExecutingCommand(IDatabase database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIExecutingInterceptor.OnExecutedCommandIDatabaseDbCommand">
            <summary>Establecer el stub de IExecutingInterceptor.OnExecutedCommand(IDatabase database, DbCommand cmd)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIExecutingInterceptor.OnExecutingCommandIDatabaseDbCommand">
            <summary>Establecer el stub de IExecutingInterceptor.OnExecutingCommand(IDatabase database, DbCommand cmd)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIInterceptor">
            <summary>Tipo stub de NPoco.IInterceptor</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIInterceptor.#ctor">
            <summary>Inicializa una nueva instancia de type StubIInterceptor</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIMapper">
            <summary>Tipo stub de NPoco.IMapper</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIMapper.#ctor">
            <summary>Inicializa una nueva instancia de type StubIMapper</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIMapper.GetFromDbConverterMemberInfoType">
            <summary>Establecer el stub de IMapper.GetFromDbConverter(MemberInfo memberInfo, Type sourceType)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIMapper.GetFromDbConverterTypeType">
            <summary>Establecer el stub de IMapper.GetFromDbConverter(Type destType, Type sourceType)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIMapper.GetParameterConverterDbCommandType">
            <summary>Establecer el stub de IMapper.GetParameterConverter(DbCommand dbCommand, Type sourceType)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIMapper.GetToDbConverterTypeMemberInfo">
            <summary>Establecer el stub de IMapper.GetToDbConverter(Type destType, MemberInfo sourceMemberInfo)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIMapper.NPoco#IMapper#GetFromDbConverter(System.Type,System.Type)">
            <summary>Establecer el stub de IMapper.GetFromDbConverter(Type destType, Type sourceType)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIMapper.NPoco#IMapper#GetFromDbConverter(System.Reflection.MemberInfo,System.Type)">
            <summary>Establecer el stub de IMapper.GetFromDbConverter(MemberInfo memberInfo, Type sourceType)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIMapper.NPoco#IMapper#GetParameterConverter(System.Data.Common.DbCommand,System.Type)">
            <summary>Establecer el stub de IMapper.GetParameterConverter(DbCommand dbCommand, Type sourceType)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIMapper.NPoco#IMapper#GetToDbConverter(System.Type,System.Reflection.MemberInfo)">
            <summary>Establecer el stub de IMapper.GetToDbConverter(Type destType, MemberInfo sourceMemberInfo)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIOnLoaded">
            <summary>Tipo stub de NPoco.IOnLoaded</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIOnLoaded.#ctor">
            <summary>Inicializa una nueva instancia de type StubIOnLoaded</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIOnLoaded.NPoco#IOnLoaded#OnLoaded">
            <summary>Establecer el stub de IOnLoaded.OnLoaded()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIOnLoaded.OnLoaded">
            <summary>Establecer el stub de IOnLoaded.OnLoaded()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIPocoDataFactory">
            <summary>Tipo stub de NPoco.IPocoDataFactory</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIPocoDataFactory.#ctor">
            <summary>Inicializa una nueva instancia de type StubIPocoDataFactory</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIPocoDataFactory.ForObjectObjectStringBoolean">
            <summary>Establecer el stub de IPocoDataFactory.ForObject(Object o, String primaryKeyName, Boolean autoIncrement)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIPocoDataFactory.ForTypeType">
            <summary>Establecer el stub de IPocoDataFactory.ForType(Type type)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIPocoDataFactory.NPoco#IPocoDataFactory#ForObject(System.Object,System.String,System.Boolean)">
            <summary>Establecer el stub de IPocoDataFactory.ForObject(Object o, String primaryKeyName, Boolean autoIncrement)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIPocoDataFactory.NPoco#IPocoDataFactory#ForType(System.Type)">
            <summary>Establecer el stub de IPocoDataFactory.ForType(Type type)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIPocoDataFactory.NPoco#IPocoDataFactory#TableInfoForType(System.Type)">
            <summary>Establecer el stub de IPocoDataFactory.TableInfoForType(Type type)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIPocoDataFactory.TableInfoForTypeType">
            <summary>Establecer el stub de IPocoDataFactory.TableInfoForType(Type type)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubITransaction">
            <summary>Tipo stub de NPoco.ITransaction</summary>
        </member>
        <member name="M:NPoco.Fakes.StubITransaction.#ctor">
            <summary>Inicializa una nueva instancia de type StubITransaction</summary>
        </member>
        <member name="F:NPoco.Fakes.StubITransaction.Complete">
            <summary>Establecer el stub de ITransaction.Complete()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubITransaction.Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubITransaction.NPoco#ITransaction#Complete">
            <summary>Establecer el stub de ITransaction.Complete()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubITransaction.System#IDisposable#Dispose">
            <summary>Establecer el stub de IDisposable.Dispose()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubITransactionInterceptor">
            <summary>Tipo stub de NPoco.ITransactionInterceptor</summary>
        </member>
        <member name="M:NPoco.Fakes.StubITransactionInterceptor.#ctor">
            <summary>Inicializa una nueva instancia de type StubITransactionInterceptor</summary>
        </member>
        <member name="M:NPoco.Fakes.StubITransactionInterceptor.NPoco#ITransactionInterceptor#OnAbortTransaction(NPoco.IDatabase)">
            <summary>Establecer el stub de ITransactionInterceptor.OnAbortTransaction(IDatabase database)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubITransactionInterceptor.NPoco#ITransactionInterceptor#OnBeginTransaction(NPoco.IDatabase)">
            <summary>Establecer el stub de ITransactionInterceptor.OnBeginTransaction(IDatabase database)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubITransactionInterceptor.NPoco#ITransactionInterceptor#OnCompleteTransaction(NPoco.IDatabase)">
            <summary>Establecer el stub de ITransactionInterceptor.OnCompleteTransaction(IDatabase database)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubITransactionInterceptor.OnAbortTransactionIDatabase">
            <summary>Establecer el stub de ITransactionInterceptor.OnAbortTransaction(IDatabase database)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubITransactionInterceptor.OnBeginTransactionIDatabase">
            <summary>Establecer el stub de ITransactionInterceptor.OnBeginTransaction(IDatabase database)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubITransactionInterceptor.OnCompleteTransactionIDatabase">
            <summary>Establecer el stub de ITransactionInterceptor.OnCompleteTransaction(IDatabase database)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIValueObject">
            <summary>Tipo stub de NPoco.IValueObject</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIValueObject.#ctor">
            <summary>Inicializa una nueva instancia de type StubIValueObject</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIValueObject`1">
            <summary>Tipo stub de NPoco.IValueObject`1</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIValueObject`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIValueObject</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIValueObject`1.AttachBackingFieldToValue">
            <summary>Asocia delegados para emular StubIValueObject.Value como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIValueObject`1.NPoco#IValueObject{TColumnType}#Value">
            <summary>Establecer el stub de IValueObject`1.get_Value()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIValueObject`1.ValueGet">
            <summary>Establecer el stub de IValueObject`1.get_Value()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIValueObject`1.ValueSetT0">
            <summary>Establecer el stub de IValueObject`1.set_Value(!0 value)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubIgnoreAttribute">
            <summary>Tipo stub de NPoco.IgnoreAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIgnoreAttribute.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIgnoreAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIgnoreAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIgnoreAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIgnoreAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIgnoreAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIgnoreAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubIgnoreAttribute</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIgnoreAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIgnoreAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIgnoreAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIgnoreAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubIgnoreAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIgnoreAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubIgnoreAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubIgnoreAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubInitializedPocoDataBuilder">
            <summary>Tipo stub de NPoco.InitializedPocoDataBuilder</summary>
        </member>
        <member name="M:NPoco.Fakes.StubInitializedPocoDataBuilder.#ctor">
            <summary>Inicializa una nueva instancia de type StubInitializedPocoDataBuilder</summary>
        </member>
        <member name="F:NPoco.Fakes.StubInitializedPocoDataBuilder.Build">
            <summary>Establecer el stub de InitializedPocoDataBuilder.Build()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubInitializedPocoDataBuilder.BuildTableInfo">
            <summary>Establecer el stub de InitializedPocoDataBuilder.BuildTableInfo()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubInitializedPocoDataBuilder.NPoco#InitializedPocoDataBuilder#Build">
            <summary>Establecer el stub de InitializedPocoDataBuilder.Build()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubInitializedPocoDataBuilder.NPoco#InitializedPocoDataBuilder#BuildTableInfo">
            <summary>Establecer el stub de InitializedPocoDataBuilder.BuildTableInfo()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubInsertBulkOptions">
            <summary>Tipo stub de NPoco.InsertBulkOptions</summary>
        </member>
        <member name="M:NPoco.Fakes.StubInsertBulkOptions.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubInsertBulkOptions.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubInsertBulkOptions.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubInsertBulkOptions</summary>
        </member>
        <member name="P:NPoco.Fakes.StubInsertBulkOptions.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubInsertBulkOptions.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubInsertContext">
            <summary>Tipo stub de NPoco.InsertContext</summary>
        </member>
        <member name="M:NPoco.Fakes.StubInsertContext.#ctor(System.Object,System.String,System.Boolean,System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubInsertContext.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubInsertContext.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubInsertContext</summary>
        </member>
        <member name="P:NPoco.Fakes.StubInsertContext.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubInsertContext.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubMapperCollection">
            <summary>Tipo stub de NPoco.MapperCollection</summary>
        </member>
        <member name="M:NPoco.Fakes.StubMapperCollection.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubMapperCollection.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubMapperCollection.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMapperCollection</summary>
        </member>
        <member name="P:NPoco.Fakes.StubMapperCollection.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubMapperCollection.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubMappingFactory">
            <summary>Tipo stub de NPoco.MappingFactory</summary>
        </member>
        <member name="M:NPoco.Fakes.StubMappingFactory.#ctor(NPoco.PocoData,System.Data.Common.DbDataReader)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubMappingFactory.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubMappingFactory.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMappingFactory</summary>
        </member>
        <member name="P:NPoco.Fakes.StubMappingFactory.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubMappingFactory.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubMappingHelper">
            <summary>Tipo stub de NPoco.MappingHelper</summary>
        </member>
        <member name="M:NPoco.Fakes.StubMappingHelper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubMappingHelper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubMappingHelper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMappingHelper</summary>
        </member>
        <member name="P:NPoco.Fakes.StubMappingHelper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubMappingHelper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubMemberAccessor">
            <summary>Tipo stub de NPoco.MemberAccessor</summary>
        </member>
        <member name="M:NPoco.Fakes.StubMemberAccessor.#ctor(System.Type,System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubMemberAccessor.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubMemberAccessor.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMemberAccessor</summary>
        </member>
        <member name="P:NPoco.Fakes.StubMemberAccessor.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubMemberAccessor.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubMemberInfoData">
            <summary>Tipo stub de NPoco.MemberInfoData</summary>
        </member>
        <member name="M:NPoco.Fakes.StubMemberInfoData.#ctor(System.Reflection.MemberInfo)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubMemberInfoData.#ctor(System.String,System.Type,System.Type)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubMemberInfoData.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubMemberInfoData.Equals(System.Object)">
            <summary>Establecer el stub de MemberInfoData.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubMemberInfoData.EqualsObject">
            <summary>Establecer el stub de MemberInfoData.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubMemberInfoData.GetHashCode">
            <summary>Establecer el stub de MemberInfoData.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubMemberInfoData.GetHashCode01">
            <summary>Establecer el stub de MemberInfoData.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubMemberInfoData.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMemberInfoData</summary>
        </member>
        <member name="P:NPoco.Fakes.StubMemberInfoData.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubMemberInfoData.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubOneToManyHelper">
            <summary>Tipo stub de NPoco.OneToManyHelper</summary>
        </member>
        <member name="M:NPoco.Fakes.StubOneToManyHelper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubOneToManyHelper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubOneToManyHelper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubOneToManyHelper</summary>
        </member>
        <member name="P:NPoco.Fakes.StubOneToManyHelper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubOneToManyHelper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubPage`1">
            <summary>Tipo stub de NPoco.Page`1</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPage`1.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPage`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPage`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPage</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPage`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPage`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubPagingHelper">
            <summary>Tipo stub de NPoco.PagingHelper</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPagingHelper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPagingHelper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPagingHelper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPagingHelper</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPagingHelper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPagingHelper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubParameterHelper">
            <summary>Tipo stub de NPoco.ParameterHelper</summary>
        </member>
        <member name="M:NPoco.Fakes.StubParameterHelper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubParameterHelper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubParameterHelper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubParameterHelper</summary>
        </member>
        <member name="P:NPoco.Fakes.StubParameterHelper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubParameterHelper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubPersistedTypeAttribute">
            <summary>Tipo stub de NPoco.PersistedTypeAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPersistedTypeAttribute.#ctor(System.Type)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPersistedTypeAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPersistedTypeAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPersistedTypeAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPersistedTypeAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPersistedTypeAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPersistedTypeAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPersistedTypeAttribute</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPersistedTypeAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPersistedTypeAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPersistedTypeAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPersistedTypeAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPersistedTypeAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPersistedTypeAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPersistedTypeAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPersistedTypeAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubPocoColumn">
            <summary>Tipo stub de NPoco.PocoColumn</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoColumn.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoColumn.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoColumn.ChangeType(System.Object)">
            <summary>Establecer el stub de PocoColumn.ChangeType(Object val)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoColumn.ChangeTypeObject">
            <summary>Establecer el stub de PocoColumn.ChangeType(Object val)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoColumn.GetValue(System.Object)">
            <summary>Establecer el stub de PocoColumn.GetValue(Object target)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoColumn.GetValueObject">
            <summary>Establecer el stub de PocoColumn.GetValue(Object target)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoColumn.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPocoColumn</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoColumn.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoColumn.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoColumn.SetValue(System.Object,System.Object)">
            <summary>Establecer el stub de PocoColumn.SetValue(Object target, Object val)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoColumn.SetValueObjectObject">
            <summary>Establecer el stub de PocoColumn.SetValue(Object target, Object val)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubPocoData">
            <summary>Tipo stub de NPoco.PocoData</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoData.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoData.#ctor(System.Type,NPoco.MapperCollection,NPoco.FastCreate)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoData.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoData.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPocoData</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoData.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoData.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubPocoDataBuilder">
            <summary>Tipo stub de NPoco.PocoDataBuilder</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoDataBuilder.#ctor(System.Type,NPoco.MapperCollection)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoDataBuilder.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoDataBuilder.GetColumnInfo(System.Reflection.MemberInfo,System.Type)">
            <summary>Establecer el stub de PocoDataBuilder.GetColumnInfo(MemberInfo mi, Type type)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoDataBuilder.GetColumnInfoMemberInfoType">
            <summary>Establecer el stub de PocoDataBuilder.GetColumnInfo(MemberInfo mi, Type type)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoDataBuilder.GetColumnName(System.String,System.String)">
            <summary>Establecer el stub de PocoDataBuilder.GetColumnName(String prefix, String columnName)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoDataBuilder.GetColumnNameStringString">
            <summary>Establecer el stub de PocoDataBuilder.GetColumnName(String prefix, String columnName)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoDataBuilder.GetTableInfo(System.Type,NPoco.ColumnInfo[],System.Collections.Generic.List{System.Reflection.MemberInfo})">
            <summary>Establecer el stub de PocoDataBuilder.GetTableInfo(Type type, ColumnInfo[] columnInfos, List`1&lt;MemberInfo&gt; memberInfos)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoDataBuilder.GetTableInfoTypeColumnInfoArrayListOfMemberInfo">
            <summary>Establecer el stub de PocoDataBuilder.GetTableInfo(Type type, ColumnInfo[] columnInfos, List`1&lt;MemberInfo&gt; memberInfos)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoDataBuilder.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPocoDataBuilder</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoDataBuilder.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoDataBuilder.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoDataBuilder.ShouldIncludePrivateColumn(System.Reflection.MemberInfo,System.Type)">
            <summary>Establecer el stub de PocoDataBuilder.ShouldIncludePrivateColumn(MemberInfo mi, Type t)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoDataBuilder.ShouldIncludePrivateColumnMemberInfoType">
            <summary>Establecer el stub de PocoDataBuilder.ShouldIncludePrivateColumn(MemberInfo mi, Type t)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubPocoDataFactory">
            <summary>Tipo stub de NPoco.PocoDataFactory</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoDataFactory.#ctor(NPoco.MapperCollection)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoDataFactory.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoDataFactory.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPocoDataFactory</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoDataFactory.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoDataFactory.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubPocoExpando">
            <summary>Tipo stub de NPoco.PocoExpando</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoExpando.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.GetDynamicMemberNames">
            <summary>Establecer el stub de DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoExpando.GetDynamicMemberNames01">
            <summary>Establecer el stub de DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>Establecer el stub de DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoExpando.GetMetaObjectExpression">
            <summary>Establecer el stub de DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPocoExpando</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoExpando.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoExpando.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.TryBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Object,System.Object@)">
            <summary>Establecer el stub de DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoExpando.TryBinaryOperationBinaryOperationBinderObjectObjectOut">
            <summary>Establecer el stub de DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>Establecer el stub de DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoExpando.TryConvertConvertBinderObjectOut">
            <summary>Establecer el stub de DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.TryCreateInstance(System.Dynamic.CreateInstanceBinder,System.Object[],System.Object@)">
            <summary>Establecer el stub de DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoExpando.TryCreateInstanceCreateInstanceBinderObjectArrayObjectOut">
            <summary>Establecer el stub de DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.TryDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Object[])">
            <summary>Establecer el stub de DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoExpando.TryDeleteIndexDeleteIndexBinderObjectArray">
            <summary>Establecer el stub de DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.TryDeleteMember(System.Dynamic.DeleteMemberBinder)">
            <summary>Establecer el stub de PocoExpando.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoExpando.TryDeleteMemberDeleteMemberBinder">
            <summary>Establecer el stub de PocoExpando.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
            <summary>Establecer el stub de DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoExpando.TryGetIndexGetIndexBinderObjectArrayObjectOut">
            <summary>Establecer el stub de DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>Establecer el stub de PocoExpando.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoExpando.TryGetMemberGetMemberBinderObjectOut">
            <summary>Establecer el stub de PocoExpando.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
            <summary>Establecer el stub de DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoExpando.TryInvokeInvokeBinderObjectArrayObjectOut">
            <summary>Establecer el stub de DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
            <summary>Establecer el stub de PocoExpando.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoExpando.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Establecer el stub de PocoExpando.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
            <summary>Establecer el stub de DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoExpando.TrySetIndexSetIndexBinderObjectArrayObject">
            <summary>Establecer el stub de DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>Establecer el stub de PocoExpando.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoExpando.TrySetMemberSetMemberBinderObject">
            <summary>Establecer el stub de PocoExpando.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoExpando.TryUnaryOperation(System.Dynamic.UnaryOperationBinder,System.Object@)">
            <summary>Establecer el stub de DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoExpando.TryUnaryOperationUnaryOperationBinderObjectOut">
            <summary>Establecer el stub de DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubPocoMember">
            <summary>Tipo stub de NPoco.PocoMember</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoMember.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoMember.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoMember.Create(System.Data.Common.DbDataReader)">
            <summary>Establecer el stub de PocoMember.Create(DbDataReader dataReader)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoMember.CreateDbDataReader">
            <summary>Establecer el stub de PocoMember.Create(DbDataReader dataReader)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoMember.GetValue(System.Object)">
            <summary>Establecer el stub de PocoMember.GetValue(Object target)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoMember.GetValueObject">
            <summary>Establecer el stub de PocoMember.GetValue(Object target)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoMember.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPocoMember</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoMember.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPocoMember.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPocoMember.SetValue(System.Object,System.Object)">
            <summary>Establecer el stub de PocoMember.SetValue(Object target, Object value)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPocoMember.SetValueObjectObject">
            <summary>Establecer el stub de PocoMember.SetValue(Object target, Object value)</summary>
        </member>
        <member name="T:NPoco.Fakes.StubPrimaryKeyAttribute">
            <summary>Tipo stub de NPoco.PrimaryKeyAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPrimaryKeyAttribute.#ctor(System.String[])">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPrimaryKeyAttribute.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPrimaryKeyAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPrimaryKeyAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPrimaryKeyAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPrimaryKeyAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPrimaryKeyAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPrimaryKeyAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPrimaryKeyAttribute</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPrimaryKeyAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPrimaryKeyAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPrimaryKeyAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPrimaryKeyAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubPrimaryKeyAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPrimaryKeyAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubPrimaryKeyAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubPrimaryKeyAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubReferenceAttribute">
            <summary>Tipo stub de NPoco.ReferenceAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.StubReferenceAttribute.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubReferenceAttribute.#ctor(NPoco.ReferenceType)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubReferenceAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubReferenceAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubReferenceAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubReferenceAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubReferenceAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubReferenceAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubReferenceAttribute</summary>
        </member>
        <member name="P:NPoco.Fakes.StubReferenceAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubReferenceAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubReferenceAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubReferenceAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubReferenceAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubReferenceAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubReferenceAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubReferenceAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubReferenceEqualityComparer">
            <summary>Tipo stub de NPoco.ReferenceEqualityComparer</summary>
        </member>
        <member name="M:NPoco.Fakes.StubReferenceEqualityComparer.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubReferenceEqualityComparer.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubReferenceEqualityComparer.Equals(System.Object,System.Object)">
            <summary>Establecer el stub de ReferenceEqualityComparer.Equals(Object x, Object y)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubReferenceEqualityComparer.EqualsObjectObject">
            <summary>Establecer el stub de ReferenceEqualityComparer.Equals(Object x, Object y)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubReferenceEqualityComparer.GetHashCode(System.Object)">
            <summary>Establecer el stub de ReferenceEqualityComparer.GetHashCode(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubReferenceEqualityComparer.GetHashCodeObject">
            <summary>Establecer el stub de ReferenceEqualityComparer.GetHashCode(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubReferenceEqualityComparer.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubReferenceEqualityComparer</summary>
        </member>
        <member name="P:NPoco.Fakes.StubReferenceEqualityComparer.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubReferenceEqualityComparer.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubRelator">
            <summary>Tipo stub de NPoco.Relator</summary>
        </member>
        <member name="M:NPoco.Fakes.StubRelator.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubRelator.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubRelator.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRelator</summary>
        </member>
        <member name="P:NPoco.Fakes.StubRelator.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubRelator.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubResultColumnAttribute">
            <summary>Tipo stub de NPoco.ResultColumnAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.StubResultColumnAttribute.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubResultColumnAttribute.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubResultColumnAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubResultColumnAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubResultColumnAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubResultColumnAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubResultColumnAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubResultColumnAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubResultColumnAttribute</summary>
        </member>
        <member name="P:NPoco.Fakes.StubResultColumnAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubResultColumnAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubResultColumnAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubResultColumnAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubResultColumnAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubResultColumnAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubResultColumnAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubResultColumnAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubSerializedColumnAttribute">
            <summary>Tipo stub de NPoco.SerializedColumnAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSerializedColumnAttribute.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSerializedColumnAttribute.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSerializedColumnAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSerializedColumnAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubSerializedColumnAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSerializedColumnAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubSerializedColumnAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSerializedColumnAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSerializedColumnAttribute</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSerializedColumnAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSerializedColumnAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSerializedColumnAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubSerializedColumnAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSerializedColumnAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubSerializedColumnAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSerializedColumnAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubSerializedColumnAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubSnapshot`1">
            <summary>Tipo stub de NPoco.Snapshot`1</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSnapshot`1.#ctor(NPoco.PocoData,`0)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSnapshot`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSnapshot`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSnapshot</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSnapshot`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSnapshot`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubSql">
            <summary>Tipo stub de NPoco.Sql</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSql.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSql.#ctor(System.String,System.Object[])">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSql.#ctor(System.Boolean,System.String,System.Object[])">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSql.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSql.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSql</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSql.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSql.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubSql`1">
            <summary>Tipo stub de NPoco.Sql`1</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSql`1.#ctor(`0)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSql`1.#ctor(`0,System.String,System.Object[])">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSql`1.#ctor(`0,System.Boolean,System.String,System.Object[])">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSql`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSql`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSql</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSql`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSql`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubSqlBuilder">
            <summary>Tipo stub de NPoco.SqlBuilder</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSqlBuilder.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSqlBuilder.#ctor(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSqlBuilder.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubSqlBuilder.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSqlBuilder</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSqlBuilder.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubSqlBuilder.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubTableInfo">
            <summary>Tipo stub de NPoco.TableInfo</summary>
        </member>
        <member name="M:NPoco.Fakes.StubTableInfo.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubTableInfo.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubTableInfo.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTableInfo</summary>
        </member>
        <member name="P:NPoco.Fakes.StubTableInfo.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubTableInfo.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubTableNameAttribute">
            <summary>Tipo stub de NPoco.TableNameAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.StubTableNameAttribute.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubTableNameAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubTableNameAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubTableNameAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubTableNameAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubTableNameAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubTableNameAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTableNameAttribute</summary>
        </member>
        <member name="P:NPoco.Fakes.StubTableNameAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubTableNameAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubTableNameAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubTableNameAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubTableNameAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubTableNameAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubTableNameAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubTableNameAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NPoco.Fakes.StubTransaction">
            <summary>Tipo stub de NPoco.Transaction</summary>
        </member>
        <member name="M:NPoco.Fakes.StubTransaction.#ctor(NPoco.IDatabase,System.Data.IsolationLevel)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubTransaction.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubTransaction.Complete">
            <summary>Establecer el stub de Transaction.Complete()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubTransaction.Complete01">
            <summary>Establecer el stub de Transaction.Complete()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubTransaction.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTransaction</summary>
        </member>
        <member name="P:NPoco.Fakes.StubTransaction.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubTransaction.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubUpdateBatch">
            <summary>Tipo stub de NPoco.UpdateBatch</summary>
        </member>
        <member name="M:NPoco.Fakes.StubUpdateBatch.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubUpdateBatch.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubUpdateBatch.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubUpdateBatch</summary>
        </member>
        <member name="P:NPoco.Fakes.StubUpdateBatch.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubUpdateBatch.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubUpdateBatch`1">
            <summary>Tipo stub de NPoco.UpdateBatch`1</summary>
        </member>
        <member name="M:NPoco.Fakes.StubUpdateBatch`1.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubUpdateBatch`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubUpdateBatch`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubUpdateBatch</summary>
        </member>
        <member name="P:NPoco.Fakes.StubUpdateBatch`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubUpdateBatch`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubUpdateContext">
            <summary>Tipo stub de NPoco.UpdateContext</summary>
        </member>
        <member name="M:NPoco.Fakes.StubUpdateContext.#ctor(System.Object,System.String,System.String,System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubUpdateContext.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubUpdateContext.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubUpdateContext</summary>
        </member>
        <member name="P:NPoco.Fakes.StubUpdateContext.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubUpdateContext.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Fakes.StubVersionColumnAttribute">
            <summary>Tipo stub de NPoco.VersionColumnAttribute</summary>
        </member>
        <member name="M:NPoco.Fakes.StubVersionColumnAttribute.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubVersionColumnAttribute.#ctor(NPoco.VersionColumnType)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Fakes.StubVersionColumnAttribute.#ctor(System.String,NPoco.VersionColumnType)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Fakes.StubVersionColumnAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Fakes.StubVersionColumnAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubVersionColumnAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NPoco.Fakes.StubVersionColumnAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubVersionColumnAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubVersionColumnAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubVersionColumnAttribute</summary>
        </member>
        <member name="P:NPoco.Fakes.StubVersionColumnAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Fakes.StubVersionColumnAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Fakes.StubVersionColumnAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubVersionColumnAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NPoco.Fakes.StubVersionColumnAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NPoco.Fakes.StubVersionColumnAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:NPoco.Fakes.StubVersionColumnAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:NPoco.Fakes.StubVersionColumnAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.ColumnBuilder`1</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.#ctor(NPoco.FluentMappings.ColumnBuilder{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.ComplexMappingString">
            <summary>Establecer el shim de ColumnBuilder`1.ComplexMapping(String prefix)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.Computed">
            <summary>Establecer el shim de ColumnBuilder`1.Computed()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.ComputedComputedColumnType">
            <summary>Establecer el shim de ColumnBuilder`1.Computed(ComputedColumnType computedColumnType)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.ForceToUtcBoolean">
            <summary>Establecer el shim de ColumnBuilder`1.ForceToUtc(Boolean enabled)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.Ignore">
            <summary>Establecer el shim de ColumnBuilder`1.Ignore()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.ReferenceExpressionOfFuncOfT0ObjectReferenceType">
            <summary>Establecer el shim de ColumnBuilder`1.Reference(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; member, ReferenceType referenceType)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.ReferenceReferenceType">
            <summary>Establecer el shim de ColumnBuilder`1.Reference(ReferenceType referenceType)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.Result">
            <summary>Establecer el shim de ColumnBuilder`1.Result()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.Serialized">
            <summary>Establecer el shim de ColumnBuilder`1.Serialized()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.ValueObject">
            <summary>Establecer el shim de ColumnBuilder`1.ValueObject()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.ValueObjectExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de ColumnBuilder`1.ValueObject(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; member)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.ValueObjectString">
            <summary>Establecer el shim de ColumnBuilder`1.ValueObject(String name)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.Version">
            <summary>Establecer el shim de ColumnBuilder`1.Version()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.VersionVersionColumnType">
            <summary>Establecer el shim de ColumnBuilder`1.Version(VersionColumnType versionColumnType)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.WithAliasString">
            <summary>Establecer el shim de ColumnBuilder`1.WithAlias(String alias)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.WithDbTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.FluentMappings.ColumnBuilder{`0},NPoco.FluentMappings.IColumnBuilder{`0}})">
            <summary>Establecer el shim de ColumnBuilder`1.WithDbType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.WithDbTypeType">
            <summary>Establecer el shim de ColumnBuilder`1.WithDbType(Type type)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.WithNameString">
            <summary>Establecer el shim de ColumnBuilder`1.WithName(String name)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.AllInstances.WithNameStringBoolean">
            <summary>Establecer el shim de ColumnBuilder`1.WithName(String name, Boolean exactMatch)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.Bind(NPoco.FluentMappings.IColumnBuilder{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.ComplexMappingString">
            <summary>Establecer el shim de ColumnBuilder`1.ComplexMapping(String prefix)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.Computed">
            <summary>Establecer el shim de ColumnBuilder`1.Computed()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.ComputedComputedColumnType">
            <summary>Establecer el shim de ColumnBuilder`1.Computed(ComputedColumnType computedColumnType)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.ConstructorColumnDefinition">
            <summary>Establecer el shim de ColumnBuilder`1.ColumnBuilder`1(ColumnDefinition columnDefinition)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.ForceToUtcBoolean">
            <summary>Establecer el shim de ColumnBuilder`1.ForceToUtc(Boolean enabled)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.Ignore">
            <summary>Establecer el shim de ColumnBuilder`1.Ignore()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.ReferenceExpressionOfFuncOfT0ObjectReferenceType">
            <summary>Establecer el shim de ColumnBuilder`1.Reference(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; member, ReferenceType referenceType)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.ReferenceReferenceType">
            <summary>Establecer el shim de ColumnBuilder`1.Reference(ReferenceType referenceType)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.Result">
            <summary>Establecer el shim de ColumnBuilder`1.Result()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.Serialized">
            <summary>Establecer el shim de ColumnBuilder`1.Serialized()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.ValueObject">
            <summary>Establecer el shim de ColumnBuilder`1.ValueObject()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.ValueObjectExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de ColumnBuilder`1.ValueObject(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; member)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.ValueObjectString">
            <summary>Establecer el shim de ColumnBuilder`1.ValueObject(String name)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.Version">
            <summary>Establecer el shim de ColumnBuilder`1.Version()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.VersionVersionColumnType">
            <summary>Establecer el shim de ColumnBuilder`1.Version(VersionColumnType versionColumnType)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.WithAliasString">
            <summary>Establecer el shim de ColumnBuilder`1.WithAlias(String alias)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.WithDbTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.FluentMappings.IColumnBuilder{`0}})">
            <summary>Establecer el shim de ColumnBuilder`1.WithDbType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.WithDbTypeType">
            <summary>Establecer el shim de ColumnBuilder`1.WithDbType(Type type)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.WithNameString">
            <summary>Establecer el shim de ColumnBuilder`1.WithName(String name)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnBuilder`1.WithNameStringBoolean">
            <summary>Establecer el shim de ColumnBuilder`1.WithName(String name, Boolean exactMatch)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimColumnConfigurationBuilder`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.ColumnConfigurationBuilder`1</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnConfigurationBuilder`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnConfigurationBuilder`1.#ctor(NPoco.FluentMappings.ColumnConfigurationBuilder{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimColumnConfigurationBuilder`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnConfigurationBuilder`1.AllInstances.ColumnOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.FluentMappings.ColumnConfigurationBuilder{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.FluentMappings.IColumnBuilder{``0}})">
            <summary>Establecer el shim de ColumnConfigurationBuilder`1.Column(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; property)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnConfigurationBuilder`1.AllInstances.ColumnOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.FluentMappings.ColumnConfigurationBuilder{`0},System.String,NPoco.FluentMappings.IColumnBuilder{``0}})">
            <summary>Establecer el shim de ColumnConfigurationBuilder`1.Column(String privateProperty)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnConfigurationBuilder`1.AllInstances.ManyOf1ExpressionOfFuncOfT0IListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.FluentMappings.ColumnConfigurationBuilder{`0},System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}},NPoco.FluentMappings.IManyColumnBuilder{``0}})">
            <summary>Establecer el shim de ColumnConfigurationBuilder`1.Many(Expression`1&lt;Func`2&lt;!0,IList`1&lt;!!0&gt;&gt;&gt; property)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnConfigurationBuilder`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnConfigurationBuilder`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnConfigurationBuilder`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnConfigurationBuilder`1.ColumnOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.FluentMappings.IColumnBuilder{``0}})">
            <summary>Establecer el shim de ColumnConfigurationBuilder`1.Column(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; property)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnConfigurationBuilder`1.ColumnOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,NPoco.FluentMappings.IColumnBuilder{``0}})">
            <summary>Establecer el shim de ColumnConfigurationBuilder`1.Column(String privateProperty)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnConfigurationBuilder`1.ConstructorDictionaryOfStringColumnDefinition">
            <summary>Establecer el shim de ColumnConfigurationBuilder`1.ColumnConfigurationBuilder`1(Dictionary`2&lt;String,ColumnDefinition&gt; columnDefinitions)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnConfigurationBuilder`1.ManyOf1ExpressionOfFuncOfT0IListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IList{``0}}},NPoco.FluentMappings.IManyColumnBuilder{``0}})">
            <summary>Establecer el shim de ColumnConfigurationBuilder`1.Many(Expression`1&lt;Func`2&lt;!0,IList`1&lt;!!0&gt;&gt;&gt; property)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimColumnDefinition">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.ColumnDefinition</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnDefinition.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnDefinition.#ctor(NPoco.FluentMappings.ColumnDefinition)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ComplexPrefixGet">
            <summary>Establecer el shim de ColumnDefinition.get_ComplexPrefix()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ComplexPrefixSetString">
            <summary>Establecer el shim de ColumnDefinition.set_ComplexPrefix(String value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ComputedColumnGet">
            <summary>Establecer el shim de ColumnDefinition.get_ComputedColumn()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ComputedColumnSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_ComputedColumn(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ComputedColumnTypeGet">
            <summary>Establecer el shim de ColumnDefinition.get_ComputedColumnType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ComputedColumnTypeSetNullableOfComputedColumnType">
            <summary>Establecer el shim de ColumnDefinition.set_ComputedColumnType(Nullable`1&lt;ComputedColumnType&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.DbColumnAliasGet">
            <summary>Establecer el shim de ColumnDefinition.get_DbColumnAlias()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.DbColumnAliasSetString">
            <summary>Establecer el shim de ColumnDefinition.set_DbColumnAlias(String value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.DbColumnNameGet">
            <summary>Establecer el shim de ColumnDefinition.get_DbColumnName()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.DbColumnNameSetString">
            <summary>Establecer el shim de ColumnDefinition.set_DbColumnName(String value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.DbColumnTypeGet">
            <summary>Establecer el shim de ColumnDefinition.get_DbColumnType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.DbColumnTypeSetType">
            <summary>Establecer el shim de ColumnDefinition.set_DbColumnType(Type value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ExactColumnNameMatchGet">
            <summary>Establecer el shim de ColumnDefinition.get_ExactColumnNameMatch()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ExactColumnNameMatchSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_ExactColumnNameMatch(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ForceUtcGet">
            <summary>Establecer el shim de ColumnDefinition.get_ForceUtc()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ForceUtcSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_ForceUtc(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.IgnoreColumnGet">
            <summary>Establecer el shim de ColumnDefinition.get_IgnoreColumn()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.IgnoreColumnSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_IgnoreColumn(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.IsComplexMappingGet">
            <summary>Establecer el shim de ColumnDefinition.get_IsComplexMapping()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.IsComplexMappingSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_IsComplexMapping(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.IsReferenceMemberGet">
            <summary>Establecer el shim de ColumnDefinition.get_IsReferenceMember()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.IsReferenceMemberSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_IsReferenceMember(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.MemberInfoChainGet">
            <summary>Establecer el shim de ColumnDefinition.get_MemberInfoChain()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.MemberInfoChainSetMemberInfoArray">
            <summary>Establecer el shim de ColumnDefinition.set_MemberInfoChain(MemberInfo[] value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.MemberInfoGet">
            <summary>Establecer el shim de ColumnDefinition.get_MemberInfo()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.MemberInfoSetMemberInfo">
            <summary>Establecer el shim de ColumnDefinition.set_MemberInfo(MemberInfo value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ReferenceMemberGet">
            <summary>Establecer el shim de ColumnDefinition.get_ReferenceMember()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ReferenceMemberSetMemberInfo">
            <summary>Establecer el shim de ColumnDefinition.set_ReferenceMember(MemberInfo value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ReferenceTypeGet">
            <summary>Establecer el shim de ColumnDefinition.get_ReferenceType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ReferenceTypeSetNullableOfReferenceType">
            <summary>Establecer el shim de ColumnDefinition.set_ReferenceType(Nullable`1&lt;ReferenceType&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ResultColumnGet">
            <summary>Establecer el shim de ColumnDefinition.get_ResultColumn()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ResultColumnSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_ResultColumn(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.SerializedGet">
            <summary>Establecer el shim de ColumnDefinition.get_Serialized()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.SerializedSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_Serialized(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ValueObjectColumnGet">
            <summary>Establecer el shim de ColumnDefinition.get_ValueObjectColumn()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ValueObjectColumnNameGet">
            <summary>Establecer el shim de ColumnDefinition.get_ValueObjectColumnName()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ValueObjectColumnNameSetString">
            <summary>Establecer el shim de ColumnDefinition.set_ValueObjectColumnName(String value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.ValueObjectColumnSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_ValueObjectColumn(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.VersionColumnGet">
            <summary>Establecer el shim de ColumnDefinition.get_VersionColumn()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.VersionColumnSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_VersionColumn(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.VersionColumnTypeGet">
            <summary>Establecer el shim de ColumnDefinition.get_VersionColumnType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.AllInstances.VersionColumnTypeSetNullableOfVersionColumnType">
            <summary>Establecer el shim de ColumnDefinition.set_VersionColumnType(Nullable`1&lt;VersionColumnType&gt; value)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnDefinition.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimColumnDefinition.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ComplexPrefixGet">
            <summary>Establecer el shim de ColumnDefinition.get_ComplexPrefix()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ComplexPrefixSetString">
            <summary>Establecer el shim de ColumnDefinition.set_ComplexPrefix(String value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ComputedColumnGet">
            <summary>Establecer el shim de ColumnDefinition.get_ComputedColumn()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ComputedColumnSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_ComputedColumn(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ComputedColumnTypeGet">
            <summary>Establecer el shim de ColumnDefinition.get_ComputedColumnType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ComputedColumnTypeSetNullableOfComputedColumnType">
            <summary>Establecer el shim de ColumnDefinition.set_ComputedColumnType(Nullable`1&lt;ComputedColumnType&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.Constructor">
            <summary>Establecer el shim de ColumnDefinition.ColumnDefinition()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.DbColumnAliasGet">
            <summary>Establecer el shim de ColumnDefinition.get_DbColumnAlias()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.DbColumnAliasSetString">
            <summary>Establecer el shim de ColumnDefinition.set_DbColumnAlias(String value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.DbColumnNameGet">
            <summary>Establecer el shim de ColumnDefinition.get_DbColumnName()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.DbColumnNameSetString">
            <summary>Establecer el shim de ColumnDefinition.set_DbColumnName(String value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.DbColumnTypeGet">
            <summary>Establecer el shim de ColumnDefinition.get_DbColumnType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.DbColumnTypeSetType">
            <summary>Establecer el shim de ColumnDefinition.set_DbColumnType(Type value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ExactColumnNameMatchGet">
            <summary>Establecer el shim de ColumnDefinition.get_ExactColumnNameMatch()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ExactColumnNameMatchSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_ExactColumnNameMatch(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ForceUtcGet">
            <summary>Establecer el shim de ColumnDefinition.get_ForceUtc()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ForceUtcSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_ForceUtc(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.IgnoreColumnGet">
            <summary>Establecer el shim de ColumnDefinition.get_IgnoreColumn()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.IgnoreColumnSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_IgnoreColumn(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.IsComplexMappingGet">
            <summary>Establecer el shim de ColumnDefinition.get_IsComplexMapping()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.IsComplexMappingSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_IsComplexMapping(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.IsReferenceMemberGet">
            <summary>Establecer el shim de ColumnDefinition.get_IsReferenceMember()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.IsReferenceMemberSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_IsReferenceMember(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.MemberInfoChainGet">
            <summary>Establecer el shim de ColumnDefinition.get_MemberInfoChain()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.MemberInfoChainSetMemberInfoArray">
            <summary>Establecer el shim de ColumnDefinition.set_MemberInfoChain(MemberInfo[] value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.MemberInfoGet">
            <summary>Establecer el shim de ColumnDefinition.get_MemberInfo()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.MemberInfoSetMemberInfo">
            <summary>Establecer el shim de ColumnDefinition.set_MemberInfo(MemberInfo value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ReferenceMemberGet">
            <summary>Establecer el shim de ColumnDefinition.get_ReferenceMember()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ReferenceMemberSetMemberInfo">
            <summary>Establecer el shim de ColumnDefinition.set_ReferenceMember(MemberInfo value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ReferenceTypeGet">
            <summary>Establecer el shim de ColumnDefinition.get_ReferenceType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ReferenceTypeSetNullableOfReferenceType">
            <summary>Establecer el shim de ColumnDefinition.set_ReferenceType(Nullable`1&lt;ReferenceType&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ResultColumnGet">
            <summary>Establecer el shim de ColumnDefinition.get_ResultColumn()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ResultColumnSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_ResultColumn(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.SerializedGet">
            <summary>Establecer el shim de ColumnDefinition.get_Serialized()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.SerializedSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_Serialized(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ValueObjectColumnGet">
            <summary>Establecer el shim de ColumnDefinition.get_ValueObjectColumn()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ValueObjectColumnNameGet">
            <summary>Establecer el shim de ColumnDefinition.get_ValueObjectColumnName()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ValueObjectColumnNameSetString">
            <summary>Establecer el shim de ColumnDefinition.set_ValueObjectColumnName(String value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.ValueObjectColumnSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_ValueObjectColumn(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.VersionColumnGet">
            <summary>Establecer el shim de ColumnDefinition.get_VersionColumn()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.VersionColumnSetNullableOfBoolean">
            <summary>Establecer el shim de ColumnDefinition.set_VersionColumn(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.VersionColumnTypeGet">
            <summary>Establecer el shim de ColumnDefinition.get_VersionColumnType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimColumnDefinition.VersionColumnTypeSetNullableOfVersionColumnType">
            <summary>Establecer el shim de ColumnDefinition.set_VersionColumnType(Nullable`1&lt;VersionColumnType&gt; value)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimConventionExtensions">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.ConventionExtensions</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimConventionExtensions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimConventionExtensions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimConventionExtensions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionExtensions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionExtensions.IgnoreComplexIColumnsBuilderConventions">
            <summary>Establecer el shim de ConventionExtensions.IgnoreComplex(IColumnsBuilderConventions conventions)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionExtensions.ToLowerIfStringBoolean">
            <summary>Establecer el shim de ConventionExtensions.ToLowerIf(String s, Boolean clause)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionExtensions.WithSmartConventionsIConventionScanner">
            <summary>Establecer el shim de ConventionExtensions.WithSmartConventions(IConventionScanner scanner)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionExtensions.WithSmartConventionsIConventionScannerBoolean">
            <summary>Establecer el shim de ConventionExtensions.WithSmartConventions(IConventionScanner scanner, Boolean lowercase)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimConventionScanner">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.ConventionScanner</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimConventionScanner.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimConventionScanner.#ctor(NPoco.FluentMappings.ConventionScanner)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimConventionScanner.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.AllInstances.AssemblyAssembly">
            <summary>Establecer el shim de ConventionScanner.Assembly(Assembly assembly)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.AllInstances.ColumnsGet">
            <summary>Establecer el shim de ConventionScanner.get_Columns()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.AllInstances.IncludeTypesFuncOfTypeBoolean">
            <summary>Establecer el shim de ConventionScanner.IncludeTypes(Func`2&lt;Type,Boolean&gt; typeIncludes)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.AllInstances.LazyLoadMappings">
            <summary>Establecer el shim de ConventionScanner.LazyLoadMappings()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.AllInstances.MapNestedTypesWhenFuncOfTypeBoolean">
            <summary>Establecer el shim de ConventionScanner.MapNestedTypesWhen(Func`2&lt;Type,Boolean&gt; mapNestedTypesFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.AllInstances.OverrideMappingsWithIMapArray">
            <summary>Establecer el shim de ConventionScanner.OverrideMappingsWith(IMap[] maps)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.AllInstances.OverrideMappingsWithMappings">
            <summary>Establecer el shim de ConventionScanner.OverrideMappingsWith(Mappings mappings)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.AllInstances.PersistedTypesByFuncOfTypeType">
            <summary>Establecer el shim de ConventionScanner.PersistedTypesBy(Func`2&lt;Type,Type&gt; persistedTypesByFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.AllInstances.PrimaryKeysAutoIncrementedFuncOfTypeBoolean">
            <summary>Establecer el shim de ConventionScanner.PrimaryKeysAutoIncremented(Func`2&lt;Type,Boolean&gt; primaryKeyAutoIncrementFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.AllInstances.PrimaryKeysNamedFuncOfTypeString">
            <summary>Establecer el shim de ConventionScanner.PrimaryKeysNamed(Func`2&lt;Type,String&gt; primaryKeyFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.AllInstances.SequencesNamedFuncOfTypeString">
            <summary>Establecer el shim de ConventionScanner.SequencesNamed(Func`2&lt;Type,String&gt; sequencesFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.AllInstances.TablesNamedFuncOfTypeString">
            <summary>Establecer el shim de ConventionScanner.TablesNamed(Func`2&lt;Type,String&gt; tableFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.AllInstances.TheCallingAssembly">
            <summary>Establecer el shim de ConventionScanner.TheCallingAssembly()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.AssemblyAssembly">
            <summary>Establecer el shim de ConventionScanner.Assembly(Assembly assembly)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimConventionScanner.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimConventionScanner.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimConventionScanner.Bind(NPoco.FluentMappings.IConventionScanner)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.ColumnsGet">
            <summary>Establecer el shim de ConventionScanner.get_Columns()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.ConstructorConventionScannerSettings">
            <summary>Establecer el shim de ConventionScanner.ConventionScanner(ConventionScannerSettings scannerSettings)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.IncludeTypesFuncOfTypeBoolean">
            <summary>Establecer el shim de ConventionScanner.IncludeTypes(Func`2&lt;Type,Boolean&gt; typeIncludes)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.LazyLoadMappings">
            <summary>Establecer el shim de ConventionScanner.LazyLoadMappings()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.MapNestedTypesWhenFuncOfTypeBoolean">
            <summary>Establecer el shim de ConventionScanner.MapNestedTypesWhen(Func`2&lt;Type,Boolean&gt; mapNestedTypesFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.OverrideMappingsWithIMapArray">
            <summary>Establecer el shim de ConventionScanner.OverrideMappingsWith(IMap[] maps)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.OverrideMappingsWithMappings">
            <summary>Establecer el shim de ConventionScanner.OverrideMappingsWith(Mappings mappings)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.PersistedTypesByFuncOfTypeType">
            <summary>Establecer el shim de ConventionScanner.PersistedTypesBy(Func`2&lt;Type,Type&gt; persistedTypesByFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.PrimaryKeysAutoIncrementedFuncOfTypeBoolean">
            <summary>Establecer el shim de ConventionScanner.PrimaryKeysAutoIncremented(Func`2&lt;Type,Boolean&gt; primaryKeyAutoIncrementFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.PrimaryKeysNamedFuncOfTypeString">
            <summary>Establecer el shim de ConventionScanner.PrimaryKeysNamed(Func`2&lt;Type,String&gt; primaryKeyFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.SequencesNamedFuncOfTypeString">
            <summary>Establecer el shim de ConventionScanner.SequencesNamed(Func`2&lt;Type,String&gt; sequencesFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.TablesNamedFuncOfTypeString">
            <summary>Establecer el shim de ConventionScanner.TablesNamed(Func`2&lt;Type,String&gt; tableFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScanner.TheCallingAssembly">
            <summary>Establecer el shim de ConventionScanner.TheCallingAssembly()</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.ConventionScannerSettings</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.#ctor(NPoco.FluentMappings.ConventionScannerSettings)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AliasNamedGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_AliasNamed()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AliasNamedSetFuncOfMemberInfoString">
            <summary>Establecer el shim de ConventionScannerSettings.set_AliasNamed(Func`2&lt;MemberInfo,String&gt; value)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.AliasNamedGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_AliasNamed()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.AliasNamedSetFuncOfMemberInfoString">
            <summary>Establecer el shim de ConventionScannerSettings.set_AliasNamed(Func`2&lt;MemberInfo,String&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.AssembliesGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_Assemblies()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.AssembliesSetHashSetOfAssembly">
            <summary>Establecer el shim de ConventionScannerSettings.set_Assemblies(HashSet`1&lt;Assembly&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ComplexPropertiesWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ComplexPropertiesWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ComplexPropertiesWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_ComplexPropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ComputedPropertiesWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ComputedPropertiesWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ComputedPropertiesWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_ComputedPropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ComputedPropertyTypeAsGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ComputedPropertyTypeAs()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ComputedPropertyTypeAsSetFuncOfMemberInfoComputedColumnType">
            <summary>Establecer el shim de ConventionScannerSettings.set_ComputedPropertyTypeAs(Func`2&lt;MemberInfo,ComputedColumnType&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.DbColumnTypesAsGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_DbColumnTypesAs()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.DbColumnTypesAsSetFuncOfMemberInfoType">
            <summary>Establecer el shim de ConventionScannerSettings.set_DbColumnTypesAs(Func`2&lt;MemberInfo,Type&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.DbColumnWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_DbColumnWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.DbColumnWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_DbColumnWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.DbColumnsNamedGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_DbColumnsNamed()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.DbColumnsNamedSetFuncOfMemberInfoString">
            <summary>Establecer el shim de ConventionScannerSettings.set_DbColumnsNamed(Func`2&lt;MemberInfo,String&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ForceDateTimesToUtcWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ForceDateTimesToUtcWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ForceDateTimesToUtcWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_ForceDateTimesToUtcWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.IgnorePropertiesWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_IgnorePropertiesWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.IgnorePropertiesWhereSetListOfFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_IgnorePropertiesWhere(List`1&lt;Func`2&lt;MemberInfo,Boolean&gt;&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.IncludeTypesGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_IncludeTypes()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.IncludeTypesSetListOfFuncOfTypeBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_IncludeTypes(List`1&lt;Func`2&lt;Type,Boolean&gt;&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.LazyGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_Lazy()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.LazySetBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_Lazy(Boolean value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.MapNestedTypesWhenGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_MapNestedTypesWhen()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.MapNestedTypesWhenSetFuncOfTypeBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_MapNestedTypesWhen(Func`2&lt;Type,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.MappingOverridesGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_MappingOverrides()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.MappingOverridesSetListOfMappings">
            <summary>Establecer el shim de ConventionScannerSettings.set_MappingOverrides(List`1&lt;Mappings&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.PersistedTypesByGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_PersistedTypesBy()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.PersistedTypesBySetFuncOfTypeType">
            <summary>Establecer el shim de ConventionScannerSettings.set_PersistedTypesBy(Func`2&lt;Type,Type&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.PrimaryKeysAutoIncrementedGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_PrimaryKeysAutoIncremented()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.PrimaryKeysAutoIncrementedSetFuncOfTypeBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_PrimaryKeysAutoIncremented(Func`2&lt;Type,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.PrimaryKeysNamedGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_PrimaryKeysNamed()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.PrimaryKeysNamedSetFuncOfTypeString">
            <summary>Establecer el shim de ConventionScannerSettings.set_PrimaryKeysNamed(Func`2&lt;Type,String&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ReferenceDbColumnsNamedGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ReferenceDbColumnsNamed()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ReferenceDbColumnsNamedSetFuncOfMemberInfoString">
            <summary>Establecer el shim de ConventionScannerSettings.set_ReferenceDbColumnsNamed(Func`2&lt;MemberInfo,String&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ReferencePropertiesWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ReferencePropertiesWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ReferencePropertiesWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_ReferencePropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ResultPropertiesWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ResultPropertiesWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ResultPropertiesWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_ResultPropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.SequencesNamedGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_SequencesNamed()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.SequencesNamedSetFuncOfTypeString">
            <summary>Establecer el shim de ConventionScannerSettings.set_SequencesNamed(Func`2&lt;Type,String&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.SerializedWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_SerializedWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.SerializedWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_SerializedWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.TablesNamedGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_TablesNamed()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.TablesNamedSetFuncOfTypeString">
            <summary>Establecer el shim de ConventionScannerSettings.set_TablesNamed(Func`2&lt;Type,String&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.TheCallingAssemblyGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_TheCallingAssembly()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.TheCallingAssemblySetBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_TheCallingAssembly(Boolean value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.UseOutputClauseWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_UseOutputClauseWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.UseOutputClauseWhereSetFuncOfTypeBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_UseOutputClauseWhere(Func`2&lt;Type,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ValueObjectColumnWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ValueObjectColumnWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.ValueObjectColumnWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_ValueObjectColumnWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.VersionPropertiesWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_VersionPropertiesWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.VersionPropertiesWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_VersionPropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.VersionPropertyTypeAsGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_VersionPropertyTypeAs()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AllInstances.VersionPropertyTypeAsSetFuncOfMemberInfoVersionColumnType">
            <summary>Establecer el shim de ConventionScannerSettings.set_VersionPropertyTypeAs(Func`2&lt;MemberInfo,VersionColumnType&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AssembliesGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_Assemblies()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.AssembliesSetHashSetOfAssembly">
            <summary>Establecer el shim de ConventionScannerSettings.set_Assemblies(HashSet`1&lt;Assembly&gt; value)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ComplexPropertiesWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ComplexPropertiesWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ComplexPropertiesWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_ComplexPropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ComputedPropertiesWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ComputedPropertiesWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ComputedPropertiesWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_ComputedPropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ComputedPropertyTypeAsGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ComputedPropertyTypeAs()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ComputedPropertyTypeAsSetFuncOfMemberInfoComputedColumnType">
            <summary>Establecer el shim de ConventionScannerSettings.set_ComputedPropertyTypeAs(Func`2&lt;MemberInfo,ComputedColumnType&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.Constructor">
            <summary>Establecer el shim de ConventionScannerSettings.ConventionScannerSettings()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.DbColumnTypesAsGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_DbColumnTypesAs()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.DbColumnTypesAsSetFuncOfMemberInfoType">
            <summary>Establecer el shim de ConventionScannerSettings.set_DbColumnTypesAs(Func`2&lt;MemberInfo,Type&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.DbColumnWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_DbColumnWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.DbColumnWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_DbColumnWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.DbColumnsNamedGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_DbColumnsNamed()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.DbColumnsNamedSetFuncOfMemberInfoString">
            <summary>Establecer el shim de ConventionScannerSettings.set_DbColumnsNamed(Func`2&lt;MemberInfo,String&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ForceDateTimesToUtcWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ForceDateTimesToUtcWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ForceDateTimesToUtcWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_ForceDateTimesToUtcWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.IgnorePropertiesWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_IgnorePropertiesWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.IgnorePropertiesWhereSetListOfFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_IgnorePropertiesWhere(List`1&lt;Func`2&lt;MemberInfo,Boolean&gt;&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.IncludeTypesGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_IncludeTypes()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.IncludeTypesSetListOfFuncOfTypeBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_IncludeTypes(List`1&lt;Func`2&lt;Type,Boolean&gt;&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.LazyGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_Lazy()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.LazySetBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_Lazy(Boolean value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.MapNestedTypesWhenGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_MapNestedTypesWhen()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.MapNestedTypesWhenSetFuncOfTypeBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_MapNestedTypesWhen(Func`2&lt;Type,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.MappingOverridesGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_MappingOverrides()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.MappingOverridesSetListOfMappings">
            <summary>Establecer el shim de ConventionScannerSettings.set_MappingOverrides(List`1&lt;Mappings&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.PersistedTypesByGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_PersistedTypesBy()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.PersistedTypesBySetFuncOfTypeType">
            <summary>Establecer el shim de ConventionScannerSettings.set_PersistedTypesBy(Func`2&lt;Type,Type&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.PrimaryKeysAutoIncrementedGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_PrimaryKeysAutoIncremented()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.PrimaryKeysAutoIncrementedSetFuncOfTypeBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_PrimaryKeysAutoIncremented(Func`2&lt;Type,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.PrimaryKeysNamedGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_PrimaryKeysNamed()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.PrimaryKeysNamedSetFuncOfTypeString">
            <summary>Establecer el shim de ConventionScannerSettings.set_PrimaryKeysNamed(Func`2&lt;Type,String&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ReferenceDbColumnsNamedGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ReferenceDbColumnsNamed()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ReferenceDbColumnsNamedSetFuncOfMemberInfoString">
            <summary>Establecer el shim de ConventionScannerSettings.set_ReferenceDbColumnsNamed(Func`2&lt;MemberInfo,String&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ReferencePropertiesWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ReferencePropertiesWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ReferencePropertiesWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_ReferencePropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ResultPropertiesWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ResultPropertiesWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ResultPropertiesWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_ResultPropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.SequencesNamedGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_SequencesNamed()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.SequencesNamedSetFuncOfTypeString">
            <summary>Establecer el shim de ConventionScannerSettings.set_SequencesNamed(Func`2&lt;Type,String&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.SerializedWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_SerializedWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.SerializedWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_SerializedWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.TablesNamedGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_TablesNamed()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.TablesNamedSetFuncOfTypeString">
            <summary>Establecer el shim de ConventionScannerSettings.set_TablesNamed(Func`2&lt;Type,String&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.TheCallingAssemblyGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_TheCallingAssembly()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.TheCallingAssemblySetBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_TheCallingAssembly(Boolean value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.UseOutputClauseWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_UseOutputClauseWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.UseOutputClauseWhereSetFuncOfTypeBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_UseOutputClauseWhere(Func`2&lt;Type,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ValueObjectColumnWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_ValueObjectColumnWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.ValueObjectColumnWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_ValueObjectColumnWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.VersionPropertiesWhereGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_VersionPropertiesWhere()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.VersionPropertiesWhereSetFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de ConventionScannerSettings.set_VersionPropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.VersionPropertyTypeAsGet">
            <summary>Establecer el shim de ConventionScannerSettings.get_VersionPropertyTypeAs()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimConventionScannerSettings.VersionPropertyTypeAsSetFuncOfMemberInfoVersionColumnType">
            <summary>Establecer el shim de ConventionScannerSettings.set_VersionPropertyTypeAs(Func`2&lt;MemberInfo,VersionColumnType&gt; value)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimFluentConfig">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.FluentConfig</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimFluentConfig.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimFluentConfig.#ctor(NPoco.FluentMappings.FluentConfig)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimFluentConfig.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentConfig.AllInstances.ConfigGet">
            <summary>Establecer el shim de FluentConfig.get_Config()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentConfig.AllInstances.ConfigSetFuncOfMapperCollectionFluentPocoDataFactory">
            <summary>Establecer el shim de FluentConfig.set_Config(Func`2&lt;MapperCollection,FluentPocoDataFactory&gt; value)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimFluentConfig.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimFluentConfig.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentConfig.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentConfig.ConfigGet">
            <summary>Establecer el shim de FluentConfig.get_Config()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentConfig.ConfigSetFuncOfMapperCollectionFluentPocoDataFactory">
            <summary>Establecer el shim de FluentConfig.set_Config(Func`2&lt;MapperCollection,FluentPocoDataFactory&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentConfig.ConstructorFuncOfMapperCollectionFluentPocoDataFactory">
            <summary>Establecer el shim de FluentConfig.FluentConfig(Func`2&lt;MapperCollection,FluentPocoDataFactory&gt; config)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.FluentMappingConfiguration</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.#ctor(NPoco.FluentMappings.FluentMappingConfiguration)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.ConfigureIMapArray">
            <summary>Establecer el shim de FluentMappingConfiguration.Configure(IMap[] pocoMaps)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.ConfigureMappings">
            <summary>Establecer el shim de FluentMappingConfiguration.Configure(Mappings mappings)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.Constructor">
            <summary>Establecer el shim de FluentMappingConfiguration.FluentMappingConfiguration()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.CreateMappingsConventionScannerSettingsTypeArray">
            <summary>Establecer el shim de FluentMappingConfiguration.CreateMappings(ConventionScannerSettings scannerSettings, Type[] typesOverride)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.FindTheCallingAssembly">
            <summary>Establecer el shim de FluentMappingConfiguration.FindTheCallingAssembly()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.FindTypesConventionScannerSettings">
            <summary>Establecer el shim de FluentMappingConfiguration.FindTypes(ConventionScannerSettings scannerSettings)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.GetColumnDefinitionsConventionScannerSettingsTypeListOfMemberInfoBoolean">
            <summary>Establecer el shim de FluentMappingConfiguration.GetColumnDefinitions(ConventionScannerSettings scannerSettings, Type type, List`1&lt;MemberInfo&gt; memberInfos, Boolean isReferenceProperty)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.MergeAttributeOverridesDictionaryOfTypeTypeDefinition">
            <summary>Establecer el shim de FluentMappingConfiguration.MergeAttributeOverrides(Dictionary`2&lt;Type,TypeDefinition&gt; config)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.MergeOverridesDictionaryOfTypeTypeDefinitionMappings">
            <summary>Establecer el shim de FluentMappingConfiguration.MergeOverrides(Dictionary`2&lt;Type,TypeDefinition&gt; config, Mappings overrideMappings)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.ProcessSettingsActionOfIConventionScanner">
            <summary>Establecer el shim de FluentMappingConfiguration.ProcessSettings(Action`1&lt;IConventionScanner&gt; scanner)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.ScanActionOfIConventionScanner">
            <summary>Establecer el shim de FluentMappingConfiguration.Scan(Action`1&lt;IConventionScanner&gt; scanner)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingConfiguration.SetFactoryMappingsActionOfIConventionScanner">
            <summary>Establecer el shim de FluentMappingConfiguration.SetFactory(Mappings mappings, Action`1&lt;IConventionScanner&gt; scanner)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimFluentMappingsPocoDataBuilder">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.FluentMappingsPocoDataBuilder</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimFluentMappingsPocoDataBuilder.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimFluentMappingsPocoDataBuilder.#ctor(NPoco.FluentMappings.FluentMappingsPocoDataBuilder)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimFluentMappingsPocoDataBuilder.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingsPocoDataBuilder.AllInstances.GetColumnInfoMemberInfoType">
            <summary>Establecer el shim de FluentMappingsPocoDataBuilder.GetColumnInfo(MemberInfo mi, Type type)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingsPocoDataBuilder.AllInstances.ShouldIncludePrivateColumnMemberInfoType">
            <summary>Establecer el shim de FluentMappingsPocoDataBuilder.ShouldIncludePrivateColumn(MemberInfo mi, Type type)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimFluentMappingsPocoDataBuilder.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimFluentMappingsPocoDataBuilder.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingsPocoDataBuilder.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimFluentMappingsPocoDataBuilder.Bind(NPoco.InitializedPocoDataBuilder)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingsPocoDataBuilder.ConstructorTypeMappingsMapperCollection">
            <summary>Establecer el shim de FluentMappingsPocoDataBuilder.FluentMappingsPocoDataBuilder(Type type, Mappings mappings, MapperCollection mapper)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingsPocoDataBuilder.GetColumnInfoMemberInfoType">
            <summary>Establecer el shim de FluentMappingsPocoDataBuilder.GetColumnInfo(MemberInfo mi, Type type)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimFluentMappingsPocoDataBuilder.ShouldIncludePrivateColumnMemberInfoType">
            <summary>Establecer el shim de FluentMappingsPocoDataBuilder.ShouldIncludePrivateColumn(MemberInfo mi, Type type)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimInflector">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.Inflector</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimInflector.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.AddIrregularRuleStringString">
            <summary>Establecer el shim de Inflector.AddIrregularRule(String singular, String plural)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.AddOrdinalSuffixString">
            <summary>Establecer el shim de Inflector.AddOrdinalSuffix(String number)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.AddPluralRuleStringString">
            <summary>Establecer el shim de Inflector.AddPluralRule(String rule, String replacement)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.AddSingularRuleStringString">
            <summary>Establecer el shim de Inflector.AddSingularRule(String rule, String replacement)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.AddUnderscoresString">
            <summary>Establecer el shim de Inflector.AddUnderscores(String pascalCasedWord)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.AddUnknownCountRuleString">
            <summary>Establecer el shim de Inflector.AddUnknownCountRule(String word)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimInflector.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimInflector.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.ConvertUnderscoresToDashesString">
            <summary>Establecer el shim de Inflector.ConvertUnderscoresToDashes(String underscoredWord)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.IsStringNumericString">
            <summary>Establecer el shim de Inflector.IsStringNumeric(String str)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.MakeInitialCapsString">
            <summary>Establecer el shim de Inflector.MakeInitialCaps(String word)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.MakeInitialLowerCaseString">
            <summary>Establecer el shim de Inflector.MakeInitialLowerCase(String word)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.MakePluralString">
            <summary>Establecer el shim de Inflector.MakePlural(String word)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.MakeSingularString">
            <summary>Establecer el shim de Inflector.MakeSingular(String word)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.StaticConstructor">
            <summary>Establecer el shim de Inflector.Inflector()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.ToHumanCaseString">
            <summary>Establecer el shim de Inflector.ToHumanCase(String lowercaseAndUnderscoredWord)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimInflector.ToTitleCaseString">
            <summary>Establecer el shim de Inflector.ToTitleCase(String word)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.ManyColumnBuilder`1</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.#ctor(NPoco.FluentMappings.ManyColumnBuilder{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.AllInstances.ReferenceExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de ManyColumnBuilder`1.Reference(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; member)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.AllInstances.WithDbTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.FluentMappings.ManyColumnBuilder{`0},NPoco.FluentMappings.IManyColumnBuilder{`0}})">
            <summary>Establecer el shim de ManyColumnBuilder`1.WithDbType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.AllInstances.WithDbTypeType">
            <summary>Establecer el shim de ManyColumnBuilder`1.WithDbType(Type type)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.AllInstances.WithNameString">
            <summary>Establecer el shim de ManyColumnBuilder`1.WithName(String name)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.Bind(NPoco.FluentMappings.IManyColumnBuilder{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.ConstructorColumnDefinition">
            <summary>Establecer el shim de ManyColumnBuilder`1.ManyColumnBuilder`1(ColumnDefinition columnDefinition)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.ReferenceExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de ManyColumnBuilder`1.Reference(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; member)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.WithDbTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.FluentMappings.IManyColumnBuilder{`0}})">
            <summary>Establecer el shim de ManyColumnBuilder`1.WithDbType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.WithDbTypeType">
            <summary>Establecer el shim de ManyColumnBuilder`1.WithDbType(Type type)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimManyColumnBuilder`1.WithNameString">
            <summary>Establecer el shim de ManyColumnBuilder`1.WithName(String name)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimMap`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.Map`1</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMap`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMap`1.#ctor(NPoco.FluentMappings.Map{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.ColumnsActionOfColumnConfigurationBuilderOfT0">
            <summary>Establecer el shim de Map`1.Columns(Action`1&lt;ColumnConfigurationBuilder`1&lt;!0&gt;&gt; columnConfiguration)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.ColumnsActionOfColumnConfigurationBuilderOfT0NullableOfBoolean">
            <summary>Establecer el shim de Map`1.Columns(Action`1&lt;ColumnConfigurationBuilder`1&lt;!0&gt;&gt; columnConfiguration, Nullable`1&lt;Boolean&gt; explicitColumns)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.CompositePrimaryKeyExpressionOfFuncOfT0ObjectArray">
            <summary>Establecer el shim de Map`1.CompositePrimaryKey(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt;[] columns)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.PersistedTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.FluentMappings.Map{`0},NPoco.FluentMappings.Map{`0}})">
            <summary>Establecer el shim de Map`1.PersistedType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.PersistedTypeType">
            <summary>Establecer el shim de Map`1.PersistedType(Type type)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.PrimaryKeyExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de Map`1.PrimaryKey(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.PrimaryKeyExpressionOfFuncOfT0ObjectBoolean">
            <summary>Establecer el shim de Map`1.PrimaryKey(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column, Boolean autoIncrement)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.PrimaryKeyExpressionOfFuncOfT0ObjectString">
            <summary>Establecer el shim de Map`1.PrimaryKey(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column, String sequenceName)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.PrimaryKeyString">
            <summary>Establecer el shim de Map`1.PrimaryKey(String primaryKeyColumn)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.PrimaryKeyStringBoolean">
            <summary>Establecer el shim de Map`1.PrimaryKey(String primaryKeyColumn, Boolean autoIncrement)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.PrimaryKeyStringBooleanBoolean">
            <summary>Establecer el shim de Map`1.PrimaryKey(String primaryKeyColumn, Boolean autoIncrement, Boolean useOutputClause)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.PrimaryKeyStringString">
            <summary>Establecer el shim de Map`1.PrimaryKey(String primaryKeyColumn, String sequenceName)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.PrimaryKeyStringStringBoolean">
            <summary>Establecer el shim de Map`1.PrimaryKey(String primaryKeyColumn, String sequenceName, Boolean useOutputClause)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.TableNameString">
            <summary>Establecer el shim de Map`1.TableName(String tableName)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.TypeDefinitionNPocoFluentMappingsIMapget">
            <summary>Establecer el shim de Map`1.NPoco.FluentMappings.IMap.get_TypeDefinition()</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMap`1.AllInstances.UseMapOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NPoco.FluentMappings.Map{`0}})">
            <summary>Establecer el shim de Map`1.UseMap()</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMap`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMap`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMap`1.Bind(NPoco.FluentMappings.IMap)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.ColumnsActionOfColumnConfigurationBuilderOfT0">
            <summary>Establecer el shim de Map`1.Columns(Action`1&lt;ColumnConfigurationBuilder`1&lt;!0&gt;&gt; columnConfiguration)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.ColumnsActionOfColumnConfigurationBuilderOfT0NullableOfBoolean">
            <summary>Establecer el shim de Map`1.Columns(Action`1&lt;ColumnConfigurationBuilder`1&lt;!0&gt;&gt; columnConfiguration, Nullable`1&lt;Boolean&gt; explicitColumns)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.CompositePrimaryKeyExpressionOfFuncOfT0ObjectArray">
            <summary>Establecer el shim de Map`1.CompositePrimaryKey(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt;[] columns)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.Constructor">
            <summary>Establecer el shim de Map`1.Map`1()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.ConstructorTypeDefinition">
            <summary>Establecer el shim de Map`1.Map`1(TypeDefinition petaPocoTypeDefinition)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMap`1.PersistedTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.FluentMappings.Map{`0}})">
            <summary>Establecer el shim de Map`1.PersistedType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.PersistedTypeType">
            <summary>Establecer el shim de Map`1.PersistedType(Type type)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.PrimaryKeyExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de Map`1.PrimaryKey(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.PrimaryKeyExpressionOfFuncOfT0ObjectBoolean">
            <summary>Establecer el shim de Map`1.PrimaryKey(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column, Boolean autoIncrement)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.PrimaryKeyExpressionOfFuncOfT0ObjectString">
            <summary>Establecer el shim de Map`1.PrimaryKey(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column, String sequenceName)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.PrimaryKeyString">
            <summary>Establecer el shim de Map`1.PrimaryKey(String primaryKeyColumn)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.PrimaryKeyStringBoolean">
            <summary>Establecer el shim de Map`1.PrimaryKey(String primaryKeyColumn, Boolean autoIncrement)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.PrimaryKeyStringBooleanBoolean">
            <summary>Establecer el shim de Map`1.PrimaryKey(String primaryKeyColumn, Boolean autoIncrement, Boolean useOutputClause)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.PrimaryKeyStringString">
            <summary>Establecer el shim de Map`1.PrimaryKey(String primaryKeyColumn, String sequenceName)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.PrimaryKeyStringStringBoolean">
            <summary>Establecer el shim de Map`1.PrimaryKey(String primaryKeyColumn, String sequenceName, Boolean useOutputClause)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.TableNameString">
            <summary>Establecer el shim de Map`1.TableName(String tableName)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMap`1.TypeDefinitionNPocoFluentMappingsIMapget">
            <summary>Establecer el shim de Map`1.NPoco.FluentMappings.IMap.get_TypeDefinition()</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMap`1.UseMapOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>Establecer el shim de Map`1.UseMap()</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimMappings">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.Mappings</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMappings.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMappings.#ctor(NPoco.FluentMappings.Mappings)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimMappings.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMappings.AllInstances.ForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.FluentMappings.Mappings,NPoco.FluentMappings.Map{``0}})">
            <summary>Establecer el shim de Mappings.For()</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMappings.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMappings.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMappings.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMappings.BuildMappingsFromMapsIMapArray">
            <summary>Establecer el shim de Mappings.BuildMappingsFromMaps(IMap[] petaPocoMaps)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMappings.Constructor">
            <summary>Establecer el shim de Mappings.Mappings()</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMappings.ForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.FluentMappings.Map{``0}})">
            <summary>Establecer el shim de Mappings.For()</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimMemberHelper`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.MemberHelper`1</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMemberHelper`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMemberHelper`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMemberHelper`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimMemberHelper`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimMemberHelper`1.GetMembersOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Reflection.MemberInfo[]})">
            <summary>Establecer el shim de MemberHelper`1.GetMembers(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; selector)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.PropertyBuilderConventions</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.#ctor(NPoco.FluentMappings.PropertyBuilderConventions)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AliasedFuncOfMemberInfoString">
            <summary>Establecer el shim de PropertyBuilderConventions.Aliased(Func`2&lt;MemberInfo,String&gt; aliasNamedFunc)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances.AliasedFuncOfMemberInfoString">
            <summary>Establecer el shim de PropertyBuilderConventions.Aliased(Func`2&lt;MemberInfo,String&gt; aliasNamedFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances.ComplexPropertiesWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.ComplexPropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; complexPropertiesWhereFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances.ComputedTypeAsFuncOfMemberInfoComputedColumnType">
            <summary>Establecer el shim de PropertyBuilderConventions.ComputedTypeAs(Func`2&lt;MemberInfo,ComputedColumnType&gt; computedPropertyTypeAsFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances.ComputedWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.ComputedWhere(Func`2&lt;MemberInfo,Boolean&gt; computedPropertiesWhereFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances.DbColumnTypeAsFuncOfMemberInfoType">
            <summary>Establecer el shim de PropertyBuilderConventions.DbColumnTypeAs(Func`2&lt;MemberInfo,Type&gt; dbColumnTypeAsFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances.ForceDateTimesToUtcWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.ForceDateTimesToUtcWhere(Func`2&lt;MemberInfo,Boolean&gt; forceDateTimesToUtcWhereFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances.IgnoreWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.IgnoreWhere(Func`2&lt;MemberInfo,Boolean&gt; ignorePropertiesWhereFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances.NamedFuncOfMemberInfoString">
            <summary>Establecer el shim de PropertyBuilderConventions.Named(Func`2&lt;MemberInfo,String&gt; propertiesNamedFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances.ReferenceNamedFuncOfMemberInfoString">
            <summary>Establecer el shim de PropertyBuilderConventions.ReferenceNamed(Func`2&lt;MemberInfo,String&gt; refPropertiesNamedFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances.ReferencePropertiesWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.ReferencePropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; referencePropertiesWhereFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances.ResultWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.ResultWhere(Func`2&lt;MemberInfo,Boolean&gt; resultPropertiesWhereFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances.SerializedWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.SerializedWhere(Func`2&lt;MemberInfo,Boolean&gt; serializedWhereFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances.ValueObjectColumnWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.ValueObjectColumnWhere(Func`2&lt;MemberInfo,Boolean&gt; valueObjectColumnWhere)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances.VersionTypeAsFuncOfMemberInfoVersionColumnType">
            <summary>Establecer el shim de PropertyBuilderConventions.VersionTypeAs(Func`2&lt;MemberInfo,VersionColumnType&gt; versionPropertyTypeAsFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.AllInstances.VersionWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.VersionWhere(Func`2&lt;MemberInfo,Boolean&gt; versionPropertiesWhereFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.Bind(NPoco.FluentMappings.IColumnsBuilderConventions)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.ComplexPropertiesWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.ComplexPropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; complexPropertiesWhereFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.ComputedTypeAsFuncOfMemberInfoComputedColumnType">
            <summary>Establecer el shim de PropertyBuilderConventions.ComputedTypeAs(Func`2&lt;MemberInfo,ComputedColumnType&gt; computedPropertyTypeAsFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.ComputedWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.ComputedWhere(Func`2&lt;MemberInfo,Boolean&gt; computedPropertiesWhereFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.ConstructorConventionScannerSettings">
            <summary>Establecer el shim de PropertyBuilderConventions.PropertyBuilderConventions(ConventionScannerSettings scannerSettings)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.DbColumnTypeAsFuncOfMemberInfoType">
            <summary>Establecer el shim de PropertyBuilderConventions.DbColumnTypeAs(Func`2&lt;MemberInfo,Type&gt; dbColumnTypeAsFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.ForceDateTimesToUtcWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.ForceDateTimesToUtcWhere(Func`2&lt;MemberInfo,Boolean&gt; forceDateTimesToUtcWhereFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.IgnoreWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.IgnoreWhere(Func`2&lt;MemberInfo,Boolean&gt; ignorePropertiesWhereFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.NamedFuncOfMemberInfoString">
            <summary>Establecer el shim de PropertyBuilderConventions.Named(Func`2&lt;MemberInfo,String&gt; propertiesNamedFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.ReferenceNamedFuncOfMemberInfoString">
            <summary>Establecer el shim de PropertyBuilderConventions.ReferenceNamed(Func`2&lt;MemberInfo,String&gt; refPropertiesNamedFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.ReferencePropertiesWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.ReferencePropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; referencePropertiesWhereFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.ResultWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.ResultWhere(Func`2&lt;MemberInfo,Boolean&gt; resultPropertiesWhereFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.SerializedWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.SerializedWhere(Func`2&lt;MemberInfo,Boolean&gt; serializedWhereFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.ValueObjectColumnWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.ValueObjectColumnWhere(Func`2&lt;MemberInfo,Boolean&gt; valueObjectColumnWhere)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.VersionTypeAsFuncOfMemberInfoVersionColumnType">
            <summary>Establecer el shim de PropertyBuilderConventions.VersionTypeAs(Func`2&lt;MemberInfo,VersionColumnType&gt; versionPropertyTypeAsFunc)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimPropertyBuilderConventions.VersionWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el shim de PropertyBuilderConventions.VersionWhere(Func`2&lt;MemberInfo,Boolean&gt; versionPropertiesWhereFunc)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimTypeDefinition">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.FluentMappings.TypeDefinition</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimTypeDefinition.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimTypeDefinition.#ctor(NPoco.FluentMappings.TypeDefinition)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.AutoIncrementGet">
            <summary>Establecer el shim de TypeDefinition.get_AutoIncrement()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.AutoIncrementSetNullableOfBoolean">
            <summary>Establecer el shim de TypeDefinition.set_AutoIncrement(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.ColumnConfigurationGet">
            <summary>Establecer el shim de TypeDefinition.get_ColumnConfiguration()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.ColumnConfigurationSetDictionaryOfStringColumnDefinition">
            <summary>Establecer el shim de TypeDefinition.set_ColumnConfiguration(Dictionary`2&lt;String,ColumnDefinition&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.ExplicitColumnsGet">
            <summary>Establecer el shim de TypeDefinition.get_ExplicitColumns()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.ExplicitColumnsSetNullableOfBoolean">
            <summary>Establecer el shim de TypeDefinition.set_ExplicitColumns(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.PersistedTypeGet">
            <summary>Establecer el shim de TypeDefinition.get_PersistedType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.PersistedTypeSetType">
            <summary>Establecer el shim de TypeDefinition.set_PersistedType(Type value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.PrimaryKeyGet">
            <summary>Establecer el shim de TypeDefinition.get_PrimaryKey()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.PrimaryKeySetString">
            <summary>Establecer el shim de TypeDefinition.set_PrimaryKey(String value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.SequenceNameGet">
            <summary>Establecer el shim de TypeDefinition.get_SequenceName()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.SequenceNameSetString">
            <summary>Establecer el shim de TypeDefinition.set_SequenceName(String value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.TableNameGet">
            <summary>Establecer el shim de TypeDefinition.get_TableName()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.TableNameSetString">
            <summary>Establecer el shim de TypeDefinition.set_TableName(String value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.TypeGet">
            <summary>Establecer el shim de TypeDefinition.get_Type()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.TypeSetType">
            <summary>Establecer el shim de TypeDefinition.set_Type(Type value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.UseOutputClauseGet">
            <summary>Establecer el shim de TypeDefinition.get_UseOutputClause()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AllInstances.UseOutputClauseSetNullableOfBoolean">
            <summary>Establecer el shim de TypeDefinition.set_UseOutputClause(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AutoIncrementGet">
            <summary>Establecer el shim de TypeDefinition.get_AutoIncrement()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.AutoIncrementSetNullableOfBoolean">
            <summary>Establecer el shim de TypeDefinition.set_AutoIncrement(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimTypeDefinition.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.ShimTypeDefinition.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.ColumnConfigurationGet">
            <summary>Establecer el shim de TypeDefinition.get_ColumnConfiguration()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.ColumnConfigurationSetDictionaryOfStringColumnDefinition">
            <summary>Establecer el shim de TypeDefinition.set_ColumnConfiguration(Dictionary`2&lt;String,ColumnDefinition&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.ConstructorType">
            <summary>Establecer el shim de TypeDefinition.TypeDefinition(Type type)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.ExplicitColumnsGet">
            <summary>Establecer el shim de TypeDefinition.get_ExplicitColumns()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.ExplicitColumnsSetNullableOfBoolean">
            <summary>Establecer el shim de TypeDefinition.set_ExplicitColumns(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.PersistedTypeGet">
            <summary>Establecer el shim de TypeDefinition.get_PersistedType()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.PersistedTypeSetType">
            <summary>Establecer el shim de TypeDefinition.set_PersistedType(Type value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.PrimaryKeyGet">
            <summary>Establecer el shim de TypeDefinition.get_PrimaryKey()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.PrimaryKeySetString">
            <summary>Establecer el shim de TypeDefinition.set_PrimaryKey(String value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.SequenceNameGet">
            <summary>Establecer el shim de TypeDefinition.get_SequenceName()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.SequenceNameSetString">
            <summary>Establecer el shim de TypeDefinition.set_SequenceName(String value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.TableNameGet">
            <summary>Establecer el shim de TypeDefinition.get_TableName()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.TableNameSetString">
            <summary>Establecer el shim de TypeDefinition.set_TableName(String value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.TypeGet">
            <summary>Establecer el shim de TypeDefinition.get_Type()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.TypeSetType">
            <summary>Establecer el shim de TypeDefinition.set_Type(Type value)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.UseOutputClauseGet">
            <summary>Establecer el shim de TypeDefinition.get_UseOutputClause()</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.ShimTypeDefinition.UseOutputClauseSetNullableOfBoolean">
            <summary>Establecer el shim de TypeDefinition.set_UseOutputClause(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubColumnBuilder`1">
            <summary>Tipo stub de NPoco.FluentMappings.ColumnBuilder`1</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubColumnBuilder`1.#ctor(NPoco.FluentMappings.ColumnDefinition)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubColumnBuilder`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubColumnBuilder`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubColumnBuilder</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubColumnBuilder`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubColumnBuilder`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubColumnConfigurationBuilder`1">
            <summary>Tipo stub de NPoco.FluentMappings.ColumnConfigurationBuilder`1</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubColumnConfigurationBuilder`1.#ctor(System.Collections.Generic.Dictionary{System.String,NPoco.FluentMappings.ColumnDefinition})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubColumnConfigurationBuilder`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubColumnConfigurationBuilder`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubColumnConfigurationBuilder</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubColumnConfigurationBuilder`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubColumnConfigurationBuilder`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubColumnDefinition">
            <summary>Tipo stub de NPoco.FluentMappings.ColumnDefinition</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubColumnDefinition.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubColumnDefinition.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubColumnDefinition.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubColumnDefinition</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubColumnDefinition.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubColumnDefinition.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubConventionScanner">
            <summary>Tipo stub de NPoco.FluentMappings.ConventionScanner</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubConventionScanner.#ctor(NPoco.FluentMappings.ConventionScannerSettings)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubConventionScanner.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubConventionScanner.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubConventionScanner</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubConventionScanner.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubConventionScanner.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubConventionScannerSettings">
            <summary>Tipo stub de NPoco.FluentMappings.ConventionScannerSettings</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubConventionScannerSettings.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubConventionScannerSettings.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubConventionScannerSettings.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubConventionScannerSettings</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubConventionScannerSettings.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubConventionScannerSettings.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubFluentConfig">
            <summary>Tipo stub de NPoco.FluentMappings.FluentConfig</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubFluentConfig.#ctor(System.Func{NPoco.MapperCollection,NPoco.FluentPocoDataFactory})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubFluentConfig.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubFluentConfig.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubFluentConfig</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubFluentConfig.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubFluentConfig.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubFluentMappingConfiguration">
            <summary>Tipo stub de NPoco.FluentMappings.FluentMappingConfiguration</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubFluentMappingConfiguration.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubFluentMappingConfiguration.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubFluentMappingConfiguration.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubFluentMappingConfiguration</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubFluentMappingConfiguration.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubFluentMappingConfiguration.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubFluentMappingsPocoDataBuilder">
            <summary>Tipo stub de NPoco.FluentMappings.FluentMappingsPocoDataBuilder</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubFluentMappingsPocoDataBuilder.#ctor(System.Type,NPoco.FluentMappings.Mappings,NPoco.MapperCollection)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubFluentMappingsPocoDataBuilder.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubFluentMappingsPocoDataBuilder.GetColumnInfo(System.Reflection.MemberInfo,System.Type)">
            <summary>Establecer el stub de FluentMappingsPocoDataBuilder.GetColumnInfo(MemberInfo mi, Type type)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubFluentMappingsPocoDataBuilder.GetColumnInfoMemberInfoType">
            <summary>Establecer el stub de FluentMappingsPocoDataBuilder.GetColumnInfo(MemberInfo mi, Type type)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubFluentMappingsPocoDataBuilder.GetColumnName(System.String,System.String)">
            <summary>Establecer el stub de PocoDataBuilder.GetColumnName(String prefix, String columnName)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubFluentMappingsPocoDataBuilder.GetColumnNameStringString">
            <summary>Establecer el stub de PocoDataBuilder.GetColumnName(String prefix, String columnName)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubFluentMappingsPocoDataBuilder.GetTableInfo(System.Type,NPoco.ColumnInfo[],System.Collections.Generic.List{System.Reflection.MemberInfo})">
            <summary>Establecer el stub de FluentMappingsPocoDataBuilder.GetTableInfo(Type type, ColumnInfo[] columnInfos, List`1&lt;MemberInfo&gt; memberInfos)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubFluentMappingsPocoDataBuilder.GetTableInfoTypeColumnInfoArrayListOfMemberInfo">
            <summary>Establecer el stub de FluentMappingsPocoDataBuilder.GetTableInfo(Type type, ColumnInfo[] columnInfos, List`1&lt;MemberInfo&gt; memberInfos)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubFluentMappingsPocoDataBuilder.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubFluentMappingsPocoDataBuilder</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubFluentMappingsPocoDataBuilder.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubFluentMappingsPocoDataBuilder.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubFluentMappingsPocoDataBuilder.ShouldIncludePrivateColumn(System.Reflection.MemberInfo,System.Type)">
            <summary>Establecer el stub de FluentMappingsPocoDataBuilder.ShouldIncludePrivateColumn(MemberInfo mi, Type type)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubFluentMappingsPocoDataBuilder.ShouldIncludePrivateColumnMemberInfoType">
            <summary>Establecer el stub de FluentMappingsPocoDataBuilder.ShouldIncludePrivateColumn(MemberInfo mi, Type type)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1">
            <summary>Tipo stub de NPoco.FluentMappings.IColumnBuilder`1</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIColumnBuilder</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.ComplexMappingString">
            <summary>Establecer el stub de IColumnBuilder`1.ComplexMapping(String prefix)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.Computed">
            <summary>Establecer el stub de IColumnBuilder`1.Computed()</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.ComputedComputedColumnType">
            <summary>Establecer el stub de IColumnBuilder`1.Computed(ComputedColumnType computedColumnType)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.ForceToUtcBoolean">
            <summary>Establecer el stub de IColumnBuilder`1.ForceToUtc(Boolean enabled)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.Ignore">
            <summary>Establecer el stub de IColumnBuilder`1.Ignore()</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#ComplexMapping(System.String)">
            <summary>Establecer el stub de IColumnBuilder`1.ComplexMapping(String prefix)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#Computed">
            <summary>Establecer el stub de IColumnBuilder`1.Computed()</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#Computed(NPoco.ComputedColumnType)">
            <summary>Establecer el stub de IColumnBuilder`1.Computed(ComputedColumnType computedColumnType)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#ForceToUtc(System.Boolean)">
            <summary>Establecer el stub de IColumnBuilder`1.ForceToUtc(Boolean enabled)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#Ignore">
            <summary>Establecer el stub de IColumnBuilder`1.Ignore()</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#Reference(NPoco.ReferenceType)">
            <summary>Establecer el stub de IColumnBuilder`1.Reference(ReferenceType referenceType)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#Reference(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},NPoco.ReferenceType)">
            <summary>Establecer el stub de IColumnBuilder`1.Reference(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; member, ReferenceType referenceType)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#Result">
            <summary>Establecer el stub de IColumnBuilder`1.Result()</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#Serialized">
            <summary>Establecer el stub de IColumnBuilder`1.Serialized()</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#ValueObject">
            <summary>Establecer el stub de IColumnBuilder`1.ValueObject()</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#ValueObject(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IColumnBuilder`1.ValueObject(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; member)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#Version">
            <summary>Establecer el stub de IColumnBuilder`1.Version()</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#Version(NPoco.VersionColumnType)">
            <summary>Establecer el stub de IColumnBuilder`1.Version(VersionColumnType versionColumnType)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#WithAlias(System.String)">
            <summary>Establecer el stub de IColumnBuilder`1.WithAlias(String alias)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#WithDbType``1">
            <summary>Establecer el stub de IColumnBuilder`1.WithDbType()</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#WithDbType(System.Type)">
            <summary>Establecer el stub de IColumnBuilder`1.WithDbType(Type type)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#WithName(System.String)">
            <summary>Establecer el stub de IColumnBuilder`1.WithName(String name)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.NPoco#FluentMappings#IColumnBuilder{TModel}#WithName(System.String,System.Boolean)">
            <summary>Establecer el stub de IColumnBuilder`1.WithName(String name, Boolean exactMatch)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.ReferenceExpressionOfFuncOfT0ObjectReferenceType">
            <summary>Establecer el stub de IColumnBuilder`1.Reference(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; member, ReferenceType referenceType)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.ReferenceReferenceType">
            <summary>Establecer el stub de IColumnBuilder`1.Reference(ReferenceType referenceType)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.Result">
            <summary>Establecer el stub de IColumnBuilder`1.Result()</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.Serialized">
            <summary>Establecer el stub de IColumnBuilder`1.Serialized()</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.ValueObject">
            <summary>Establecer el stub de IColumnBuilder`1.ValueObject()</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.ValueObjectExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IColumnBuilder`1.ValueObject(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; member)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.Version">
            <summary>Establecer el stub de IColumnBuilder`1.Version()</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.VersionVersionColumnType">
            <summary>Establecer el stub de IColumnBuilder`1.Version(VersionColumnType versionColumnType)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.WithAliasString">
            <summary>Establecer el stub de IColumnBuilder`1.WithAlias(String alias)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.WithDbTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.FluentMappings.IColumnBuilder{`0}})">
            <summary>Establecer stubs de WithDbType()</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.WithDbTypeType">
            <summary>Establecer el stub de IColumnBuilder`1.WithDbType(Type type)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.WithNameString">
            <summary>Establecer el stub de IColumnBuilder`1.WithName(String name)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnBuilder`1.WithNameStringBoolean">
            <summary>Establecer el stub de IColumnBuilder`1.WithName(String name, Boolean exactMatch)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions">
            <summary>Tipo stub de NPoco.FluentMappings.IColumnsBuilderConventions</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.#ctor">
            <summary>Inicializa una nueva instancia de type StubIColumnsBuilderConventions</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.AliasedFuncOfMemberInfoString">
            <summary>Establecer el stub de IColumnsBuilderConventions.Aliased(Func`2&lt;MemberInfo,String&gt; aliasNamedFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.ComplexPropertiesWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el stub de IColumnsBuilderConventions.ComplexPropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; complexPropertiesWhereFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.ComputedTypeAsFuncOfMemberInfoComputedColumnType">
            <summary>Establecer el stub de IColumnsBuilderConventions.ComputedTypeAs(Func`2&lt;MemberInfo,ComputedColumnType&gt; computedPropertyTypeAsFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.ComputedWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el stub de IColumnsBuilderConventions.ComputedWhere(Func`2&lt;MemberInfo,Boolean&gt; computedPropertiesWhereFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.DbColumnTypeAsFuncOfMemberInfoType">
            <summary>Establecer el stub de IColumnsBuilderConventions.DbColumnTypeAs(Func`2&lt;MemberInfo,Type&gt; dbColumnTypeAsFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.ForceDateTimesToUtcWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el stub de IColumnsBuilderConventions.ForceDateTimesToUtcWhere(Func`2&lt;MemberInfo,Boolean&gt; forceDateTimesToUtcWhereFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.IgnoreWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el stub de IColumnsBuilderConventions.IgnoreWhere(Func`2&lt;MemberInfo,Boolean&gt; ignorePropertiesWhereFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NPoco#FluentMappings#IColumnsBuilderConventions#Aliased(System.Func{System.Reflection.MemberInfo,System.String})">
            <summary>Establecer el stub de IColumnsBuilderConventions.Aliased(Func`2&lt;MemberInfo,String&gt; aliasNamedFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NPoco#FluentMappings#IColumnsBuilderConventions#ComplexPropertiesWhere(System.Func{System.Reflection.MemberInfo,System.Boolean})">
            <summary>Establecer el stub de IColumnsBuilderConventions.ComplexPropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; complexPropertiesWhereFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NPoco#FluentMappings#IColumnsBuilderConventions#ComputedTypeAs(System.Func{System.Reflection.MemberInfo,NPoco.ComputedColumnType})">
            <summary>Establecer el stub de IColumnsBuilderConventions.ComputedTypeAs(Func`2&lt;MemberInfo,ComputedColumnType&gt; computedPropertyTypeAsFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NPoco#FluentMappings#IColumnsBuilderConventions#ComputedWhere(System.Func{System.Reflection.MemberInfo,System.Boolean})">
            <summary>Establecer el stub de IColumnsBuilderConventions.ComputedWhere(Func`2&lt;MemberInfo,Boolean&gt; computedPropertiesWhereFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NPoco#FluentMappings#IColumnsBuilderConventions#DbColumnTypeAs(System.Func{System.Reflection.MemberInfo,System.Type})">
            <summary>Establecer el stub de IColumnsBuilderConventions.DbColumnTypeAs(Func`2&lt;MemberInfo,Type&gt; dbColumnTypeAsFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NPoco#FluentMappings#IColumnsBuilderConventions#ForceDateTimesToUtcWhere(System.Func{System.Reflection.MemberInfo,System.Boolean})">
            <summary>Establecer el stub de IColumnsBuilderConventions.ForceDateTimesToUtcWhere(Func`2&lt;MemberInfo,Boolean&gt; forceDateTimesToUtcWhereFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NPoco#FluentMappings#IColumnsBuilderConventions#IgnoreWhere(System.Func{System.Reflection.MemberInfo,System.Boolean})">
            <summary>Establecer el stub de IColumnsBuilderConventions.IgnoreWhere(Func`2&lt;MemberInfo,Boolean&gt; ignorePropertiesWhereFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NPoco#FluentMappings#IColumnsBuilderConventions#Named(System.Func{System.Reflection.MemberInfo,System.String})">
            <summary>Establecer el stub de IColumnsBuilderConventions.Named(Func`2&lt;MemberInfo,String&gt; propertiesNamedFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NPoco#FluentMappings#IColumnsBuilderConventions#ReferenceNamed(System.Func{System.Reflection.MemberInfo,System.String})">
            <summary>Establecer el stub de IColumnsBuilderConventions.ReferenceNamed(Func`2&lt;MemberInfo,String&gt; refPropertiesNamedFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NPoco#FluentMappings#IColumnsBuilderConventions#ReferencePropertiesWhere(System.Func{System.Reflection.MemberInfo,System.Boolean})">
            <summary>Establecer el stub de IColumnsBuilderConventions.ReferencePropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; referencePropertiesWhereFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NPoco#FluentMappings#IColumnsBuilderConventions#ResultWhere(System.Func{System.Reflection.MemberInfo,System.Boolean})">
            <summary>Establecer el stub de IColumnsBuilderConventions.ResultWhere(Func`2&lt;MemberInfo,Boolean&gt; resultPropertiesWhereFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NPoco#FluentMappings#IColumnsBuilderConventions#SerializedWhere(System.Func{System.Reflection.MemberInfo,System.Boolean})">
            <summary>Establecer el stub de IColumnsBuilderConventions.SerializedWhere(Func`2&lt;MemberInfo,Boolean&gt; serializedWhereFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NPoco#FluentMappings#IColumnsBuilderConventions#ValueObjectColumnWhere(System.Func{System.Reflection.MemberInfo,System.Boolean})">
            <summary>Establecer el stub de IColumnsBuilderConventions.ValueObjectColumnWhere(Func`2&lt;MemberInfo,Boolean&gt; valueObjectColumnWhereFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NPoco#FluentMappings#IColumnsBuilderConventions#VersionTypeAs(System.Func{System.Reflection.MemberInfo,NPoco.VersionColumnType})">
            <summary>Establecer el stub de IColumnsBuilderConventions.VersionTypeAs(Func`2&lt;MemberInfo,VersionColumnType&gt; versionPropertyTypeAsFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NPoco#FluentMappings#IColumnsBuilderConventions#VersionWhere(System.Func{System.Reflection.MemberInfo,System.Boolean})">
            <summary>Establecer el stub de IColumnsBuilderConventions.VersionWhere(Func`2&lt;MemberInfo,Boolean&gt; versionPropertiesWhereFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.NamedFuncOfMemberInfoString">
            <summary>Establecer el stub de IColumnsBuilderConventions.Named(Func`2&lt;MemberInfo,String&gt; propertiesNamedFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.ReferenceNamedFuncOfMemberInfoString">
            <summary>Establecer el stub de IColumnsBuilderConventions.ReferenceNamed(Func`2&lt;MemberInfo,String&gt; refPropertiesNamedFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.ReferencePropertiesWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el stub de IColumnsBuilderConventions.ReferencePropertiesWhere(Func`2&lt;MemberInfo,Boolean&gt; referencePropertiesWhereFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.ResultWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el stub de IColumnsBuilderConventions.ResultWhere(Func`2&lt;MemberInfo,Boolean&gt; resultPropertiesWhereFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.SerializedWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el stub de IColumnsBuilderConventions.SerializedWhere(Func`2&lt;MemberInfo,Boolean&gt; serializedWhereFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.ValueObjectColumnWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el stub de IColumnsBuilderConventions.ValueObjectColumnWhere(Func`2&lt;MemberInfo,Boolean&gt; valueObjectColumnWhereFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.VersionTypeAsFuncOfMemberInfoVersionColumnType">
            <summary>Establecer el stub de IColumnsBuilderConventions.VersionTypeAs(Func`2&lt;MemberInfo,VersionColumnType&gt; versionPropertyTypeAsFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIColumnsBuilderConventions.VersionWhereFuncOfMemberInfoBoolean">
            <summary>Establecer el stub de IColumnsBuilderConventions.VersionWhere(Func`2&lt;MemberInfo,Boolean&gt; versionPropertiesWhereFunc)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubIConventionScanner">
            <summary>Tipo stub de NPoco.FluentMappings.IConventionScanner</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIConventionScanner.#ctor">
            <summary>Inicializa una nueva instancia de type StubIConventionScanner</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIConventionScanner.AssemblyAssembly">
            <summary>Establecer el stub de IConventionScanner.Assembly(Assembly assembly)</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubIConventionScanner.NPoco#FluentMappings#IConventionScanner#Columns">
            <summary>Establecer el stub de IConventionScanner.get_Columns()</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIConventionScanner.ColumnsGet">
            <summary>Establecer el stub de IConventionScanner.get_Columns()</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIConventionScanner.IncludeTypesFuncOfTypeBoolean">
            <summary>Establecer el stub de IConventionScanner.IncludeTypes(Func`2&lt;Type,Boolean&gt; includeTypes)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIConventionScanner.LazyLoadMappings">
            <summary>Establecer el stub de IConventionScanner.LazyLoadMappings()</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIConventionScanner.MapNestedTypesWhenFuncOfTypeBoolean">
            <summary>Establecer el stub de IConventionScanner.MapNestedTypesWhen(Func`2&lt;Type,Boolean&gt; mapNestedTypesFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIConventionScanner.NPoco#FluentMappings#IConventionScanner#Assembly(System.Reflection.Assembly)">
            <summary>Establecer el stub de IConventionScanner.Assembly(Assembly assembly)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIConventionScanner.NPoco#FluentMappings#IConventionScanner#IncludeTypes(System.Func{System.Type,System.Boolean})">
            <summary>Establecer el stub de IConventionScanner.IncludeTypes(Func`2&lt;Type,Boolean&gt; includeTypes)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIConventionScanner.NPoco#FluentMappings#IConventionScanner#LazyLoadMappings">
            <summary>Establecer el stub de IConventionScanner.LazyLoadMappings()</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIConventionScanner.NPoco#FluentMappings#IConventionScanner#MapNestedTypesWhen(System.Func{System.Type,System.Boolean})">
            <summary>Establecer el stub de IConventionScanner.MapNestedTypesWhen(Func`2&lt;Type,Boolean&gt; mapNestedTypesFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIConventionScanner.NPoco#FluentMappings#IConventionScanner#OverrideMappingsWith(NPoco.FluentMappings.Mappings)">
            <summary>Establecer el stub de IConventionScanner.OverrideMappingsWith(Mappings mappings)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIConventionScanner.NPoco#FluentMappings#IConventionScanner#OverrideMappingsWith(NPoco.FluentMappings.IMap[])">
            <summary>Establecer el stub de IConventionScanner.OverrideMappingsWith(IMap[] maps)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIConventionScanner.NPoco#FluentMappings#IConventionScanner#PersistedTypesBy(System.Func{System.Type,System.Type})">
            <summary>Establecer el stub de IConventionScanner.PersistedTypesBy(Func`2&lt;Type,Type&gt; persistedTypesByFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIConventionScanner.NPoco#FluentMappings#IConventionScanner#PrimaryKeysAutoIncremented(System.Func{System.Type,System.Boolean})">
            <summary>Establecer el stub de IConventionScanner.PrimaryKeysAutoIncremented(Func`2&lt;Type,Boolean&gt; primaryKeyAutoIncrementFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIConventionScanner.NPoco#FluentMappings#IConventionScanner#PrimaryKeysNamed(System.Func{System.Type,System.String})">
            <summary>Establecer el stub de IConventionScanner.PrimaryKeysNamed(Func`2&lt;Type,String&gt; primaryKeyFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIConventionScanner.NPoco#FluentMappings#IConventionScanner#SequencesNamed(System.Func{System.Type,System.String})">
            <summary>Establecer el stub de IConventionScanner.SequencesNamed(Func`2&lt;Type,String&gt; sequencesFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIConventionScanner.NPoco#FluentMappings#IConventionScanner#TablesNamed(System.Func{System.Type,System.String})">
            <summary>Establecer el stub de IConventionScanner.TablesNamed(Func`2&lt;Type,String&gt; tableFunc)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIConventionScanner.NPoco#FluentMappings#IConventionScanner#TheCallingAssembly">
            <summary>Establecer el stub de IConventionScanner.TheCallingAssembly()</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIConventionScanner.OverrideMappingsWithIMapArray">
            <summary>Establecer el stub de IConventionScanner.OverrideMappingsWith(IMap[] maps)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIConventionScanner.OverrideMappingsWithMappings">
            <summary>Establecer el stub de IConventionScanner.OverrideMappingsWith(Mappings mappings)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIConventionScanner.PersistedTypesByFuncOfTypeType">
            <summary>Establecer el stub de IConventionScanner.PersistedTypesBy(Func`2&lt;Type,Type&gt; persistedTypesByFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIConventionScanner.PrimaryKeysAutoIncrementedFuncOfTypeBoolean">
            <summary>Establecer el stub de IConventionScanner.PrimaryKeysAutoIncremented(Func`2&lt;Type,Boolean&gt; primaryKeyAutoIncrementFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIConventionScanner.PrimaryKeysNamedFuncOfTypeString">
            <summary>Establecer el stub de IConventionScanner.PrimaryKeysNamed(Func`2&lt;Type,String&gt; primaryKeyFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIConventionScanner.SequencesNamedFuncOfTypeString">
            <summary>Establecer el stub de IConventionScanner.SequencesNamed(Func`2&lt;Type,String&gt; sequencesFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIConventionScanner.TablesNamedFuncOfTypeString">
            <summary>Establecer el stub de IConventionScanner.TablesNamed(Func`2&lt;Type,String&gt; tableFunc)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIConventionScanner.TheCallingAssembly">
            <summary>Establecer el stub de IConventionScanner.TheCallingAssembly()</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubIManyColumnBuilder`1">
            <summary>Tipo stub de NPoco.FluentMappings.IManyColumnBuilder`1</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIManyColumnBuilder`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIManyColumnBuilder</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIManyColumnBuilder`1.NPoco#FluentMappings#IManyColumnBuilder{TModel}#Reference(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IManyColumnBuilder`1.Reference(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; member)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIManyColumnBuilder`1.NPoco#FluentMappings#IManyColumnBuilder{TModel}#WithDbType``1">
            <summary>Establecer el stub de IManyColumnBuilder`1.WithDbType()</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIManyColumnBuilder`1.NPoco#FluentMappings#IManyColumnBuilder{TModel}#WithDbType(System.Type)">
            <summary>Establecer el stub de IManyColumnBuilder`1.WithDbType(Type type)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIManyColumnBuilder`1.NPoco#FluentMappings#IManyColumnBuilder{TModel}#WithName(System.String)">
            <summary>Establecer el stub de IManyColumnBuilder`1.WithName(String name)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIManyColumnBuilder`1.ReferenceExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IManyColumnBuilder`1.Reference(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; member)</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIManyColumnBuilder`1.WithDbTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.FluentMappings.IManyColumnBuilder{`0}})">
            <summary>Establecer stubs de WithDbType()</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIManyColumnBuilder`1.WithDbTypeType">
            <summary>Establecer el stub de IManyColumnBuilder`1.WithDbType(Type type)</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIManyColumnBuilder`1.WithNameString">
            <summary>Establecer el stub de IManyColumnBuilder`1.WithName(String name)</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubIMap">
            <summary>Tipo stub de NPoco.FluentMappings.IMap</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubIMap.#ctor">
            <summary>Inicializa una nueva instancia de type StubIMap</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubIMap.NPoco#FluentMappings#IMap#TypeDefinition">
            <summary>Establecer el stub de IMap.get_TypeDefinition()</summary>
        </member>
        <member name="F:NPoco.FluentMappings.Fakes.StubIMap.TypeDefinitionGet">
            <summary>Establecer el stub de IMap.get_TypeDefinition()</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubManyColumnBuilder`1">
            <summary>Tipo stub de NPoco.FluentMappings.ManyColumnBuilder`1</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubManyColumnBuilder`1.#ctor(NPoco.FluentMappings.ColumnDefinition)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubManyColumnBuilder`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubManyColumnBuilder`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubManyColumnBuilder</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubManyColumnBuilder`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubManyColumnBuilder`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubMap`1">
            <summary>Tipo stub de NPoco.FluentMappings.Map`1</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubMap`1.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubMap`1.#ctor(NPoco.FluentMappings.TypeDefinition)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubMap`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubMap`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMap</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubMap`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubMap`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubMappings">
            <summary>Tipo stub de NPoco.FluentMappings.Mappings</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubMappings.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubMappings.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubMappings.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMappings</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubMappings.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubMappings.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubPropertyBuilderConventions">
            <summary>Tipo stub de NPoco.FluentMappings.PropertyBuilderConventions</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubPropertyBuilderConventions.#ctor(NPoco.FluentMappings.ConventionScannerSettings)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubPropertyBuilderConventions.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubPropertyBuilderConventions.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPropertyBuilderConventions</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubPropertyBuilderConventions.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubPropertyBuilderConventions.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.FluentMappings.Fakes.StubTypeDefinition">
            <summary>Tipo stub de NPoco.FluentMappings.TypeDefinition</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubTypeDefinition.#ctor(System.Type)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubTypeDefinition.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.FluentMappings.Fakes.StubTypeDefinition.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTypeDefinition</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubTypeDefinition.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.FluentMappings.Fakes.StubTypeDefinition.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimAsyncDeleteQueryProvider`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Linq.AsyncDeleteQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncDeleteQueryProvider`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncDeleteQueryProvider`1.#ctor(NPoco.Linq.AsyncDeleteQueryProvider{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimAsyncDeleteQueryProvider`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncDeleteQueryProvider`1.AllInstances.Execute">
            <summary>Establecer el shim de AsyncDeleteQueryProvider`1.Execute()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncDeleteQueryProvider`1.AllInstances.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncDeleteQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncDeleteQueryProvider`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncDeleteQueryProvider`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncDeleteQueryProvider`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncDeleteQueryProvider`1.Bind(NPoco.Linq.IAsyncDeleteQueryProvider{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncDeleteQueryProvider`1.ConstructorIDatabase">
            <summary>Establecer el shim de AsyncDeleteQueryProvider`1.AsyncDeleteQueryProvider`1(IDatabase database)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncDeleteQueryProvider`1.Execute">
            <summary>Establecer el shim de AsyncDeleteQueryProvider`1.Execute()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncDeleteQueryProvider`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncDeleteQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Linq.AsyncQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.#ctor(NPoco.Linq.AsyncQueryProvider{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AddWhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.AddWhere(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.AddWhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.AddWhere(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.Any">
            <summary>Establecer el shim de AsyncQueryProvider`1.Any()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.AnyExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.AtlasSqlExpressionNPocoLinqISimpleQueryProviderExpressionTget">
            <summary>Establecer el shim de AsyncQueryProvider`1.NPoco.Linq.ISimpleQueryProviderExpression&lt;T&gt;.get_AtlasSqlExpression()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.BuildSql">
            <summary>Establecer el shim de AsyncQueryProvider`1.BuildSql()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.Count">
            <summary>Establecer el shim de AsyncQueryProvider`1.Count()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.CountExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.Distinct">
            <summary>Establecer el shim de AsyncQueryProvider`1.Distinct()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.DistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.AsyncQueryProvider{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de AsyncQueryProvider`1.Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.ExecuteQueryAsyncSql">
            <summary>Establecer el shim de AsyncQueryProvider`1.ExecuteQueryAsync(Sql sql)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.First">
            <summary>Establecer el shim de AsyncQueryProvider`1.First()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.FirstExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.FirstOrDefault">
            <summary>Establecer el shim de AsyncQueryProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.FirstOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.FromQueryBuilderOfT0">
            <summary>Establecer el shim de AsyncQueryProvider`1.From(QueryBuilder`1&lt;!0&gt; builder)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.IncludeManyExpressionOfFuncOfT0IListJoinType">
            <summary>Establecer el shim de AsyncQueryProvider`1.IncludeMany(Expression`1&lt;Func`2&lt;!0,IList&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.IncludeOf1ExpressionOfFuncOfT0M0JoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.AsyncQueryProvider{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Linq.JoinType,NPoco.Linq.IAsyncQueryProviderWithIncludes{`0}})">
            <summary>Establecer el shim de AsyncQueryProvider`1.Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.IncludeOf1ExpressionOfFuncOfT0M0StringJoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.AsyncQueryProvider{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,NPoco.Linq.JoinType,NPoco.Linq.IAsyncQueryProviderWithIncludes{`0}})">
            <summary>Establecer el shim de AsyncQueryProvider`1.Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, String tableAlias, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.IncludeOf1JoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.AsyncQueryProvider{`0},NPoco.Linq.JoinType,NPoco.Linq.IAsyncQueryProviderWithIncludes{`0}})">
            <summary>Establecer el shim de AsyncQueryProvider`1.Include(JoinType joinType)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.LimitInt32">
            <summary>Establecer el shim de AsyncQueryProvider`1.Limit(Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.LimitInt32Int32">
            <summary>Establecer el shim de AsyncQueryProvider`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.NPocoLinqINeedDatabaseGetDatabase">
            <summary>Establecer el shim de AsyncQueryProvider`1.NPoco.Linq.INeedDatabase.GetDatabase()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.NPocoLinqINeedSqlGetSql">
            <summary>Establecer el shim de AsyncQueryProvider`1.NPoco.Linq.INeedSql.GetSql()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.OrderByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de AsyncQueryProvider`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.OrderByExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de AsyncQueryProvider`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.ProjectToOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.AsyncQueryProvider{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de AsyncQueryProvider`1.ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.QueryProviderWithIncludesExpressionStringJoinType">
            <summary>Establecer el shim de AsyncQueryProvider`1.QueryProviderWithIncludes(Expression expression, String tableAlias, JoinType joinType)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.Single">
            <summary>Establecer el shim de AsyncQueryProvider`1.Single()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.SingleExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.SingleOrDefault">
            <summary>Establecer el shim de AsyncQueryProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.SingleOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.ThenByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de AsyncQueryProvider`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.ThenByExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de AsyncQueryProvider`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.ThrowIfOneToMany">
            <summary>Establecer el shim de AsyncQueryProvider`1.ThrowIfOneToMany()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.ToArray">
            <summary>Establecer el shim de AsyncQueryProvider`1.ToArray()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.ToDynamicEnumerable">
            <summary>Establecer el shim de AsyncQueryProvider`1.ToDynamicEnumerable()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.ToDynamicList">
            <summary>Establecer el shim de AsyncQueryProvider`1.ToDynamicList()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.ToEnumerable">
            <summary>Establecer el shim de AsyncQueryProvider`1.ToEnumerable()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.ToList">
            <summary>Establecer el shim de AsyncQueryProvider`1.ToList()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.ToPageInt32Int32">
            <summary>Establecer el shim de AsyncQueryProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.UsingAliasString">
            <summary>Establecer el shim de AsyncQueryProvider`1.UsingAlias(String tableAlias)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.WhereSqlFuncOfQueryContextOfT0Sql">
            <summary>Establecer el shim de AsyncQueryProvider`1.WhereSql(Func`2&lt;QueryContext`1&lt;!0&gt;,Sql&gt; queryBuilder)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.WhereSqlSql">
            <summary>Establecer el shim de AsyncQueryProvider`1.WhereSql(Sql sql)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AllInstances.WhereSqlStringObjectArray">
            <summary>Establecer el shim de AsyncQueryProvider`1.WhereSql(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.Any">
            <summary>Establecer el shim de AsyncQueryProvider`1.Any()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AnyExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.AtlasSqlExpressionNPocoLinqISimpleQueryProviderExpressionTget">
            <summary>Establecer el shim de AsyncQueryProvider`1.NPoco.Linq.ISimpleQueryProviderExpression&lt;T&gt;.get_AtlasSqlExpression()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.Bind(NPoco.Linq.INeedDatabase)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.Bind(NPoco.Linq.INeedSql)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.Bind(NPoco.Linq.IAsyncQueryProviderWithIncludes{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.Bind(NPoco.Linq.IAsyncQueryProvider{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.Bind(NPoco.Linq.IAsyncQueryResultProvider{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.Bind(NPoco.Linq.ISimpleQueryProviderExpression{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.BuildSql">
            <summary>Establecer el shim de AsyncQueryProvider`1.BuildSql()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.ConstructorDatabase">
            <summary>Establecer el shim de AsyncQueryProvider`1.AsyncQueryProvider`1(Database database)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.ConstructorDatabaseExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.AsyncQueryProvider`1(Database database, Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.Count">
            <summary>Establecer el shim de AsyncQueryProvider`1.Count()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.CountExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.Distinct">
            <summary>Establecer el shim de AsyncQueryProvider`1.Distinct()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.DistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de AsyncQueryProvider`1.Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.ExecuteQueryAsyncSql">
            <summary>Establecer el shim de AsyncQueryProvider`1.ExecuteQueryAsync(Sql sql)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.First">
            <summary>Establecer el shim de AsyncQueryProvider`1.First()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.FirstExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.FirstOrDefault">
            <summary>Establecer el shim de AsyncQueryProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.FirstOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.FromQueryBuilderOfT0">
            <summary>Establecer el shim de AsyncQueryProvider`1.From(QueryBuilder`1&lt;!0&gt; builder)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.IncludeManyExpressionOfFuncOfT0IListJoinType">
            <summary>Establecer el shim de AsyncQueryProvider`1.IncludeMany(Expression`1&lt;Func`2&lt;!0,IList&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.IncludeOf1ExpressionOfFuncOfT0M0JoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Linq.JoinType,NPoco.Linq.IAsyncQueryProviderWithIncludes{`0}})">
            <summary>Establecer el shim de AsyncQueryProvider`1.Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.IncludeOf1ExpressionOfFuncOfT0M0StringJoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,NPoco.Linq.JoinType,NPoco.Linq.IAsyncQueryProviderWithIncludes{`0}})">
            <summary>Establecer el shim de AsyncQueryProvider`1.Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, String tableAlias, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.IncludeOf1JoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.JoinType,NPoco.Linq.IAsyncQueryProviderWithIncludes{`0}})">
            <summary>Establecer el shim de AsyncQueryProvider`1.Include(JoinType joinType)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.LimitInt32">
            <summary>Establecer el shim de AsyncQueryProvider`1.Limit(Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.LimitInt32Int32">
            <summary>Establecer el shim de AsyncQueryProvider`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.NPocoLinqINeedDatabaseGetDatabase">
            <summary>Establecer el shim de AsyncQueryProvider`1.NPoco.Linq.INeedDatabase.GetDatabase()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.NPocoLinqINeedSqlGetSql">
            <summary>Establecer el shim de AsyncQueryProvider`1.NPoco.Linq.INeedSql.GetSql()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.OrderByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de AsyncQueryProvider`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.OrderByExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de AsyncQueryProvider`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.ProjectToOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de AsyncQueryProvider`1.ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.QueryProviderWithIncludesExpressionStringJoinType">
            <summary>Establecer el shim de AsyncQueryProvider`1.QueryProviderWithIncludes(Expression expression, String tableAlias, JoinType joinType)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.Single">
            <summary>Establecer el shim de AsyncQueryProvider`1.Single()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.SingleExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.SingleOrDefault">
            <summary>Establecer el shim de AsyncQueryProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.SingleOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.ThenByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de AsyncQueryProvider`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.ThenByExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de AsyncQueryProvider`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.ThrowIfOneToMany">
            <summary>Establecer el shim de AsyncQueryProvider`1.ThrowIfOneToMany()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.ToArray">
            <summary>Establecer el shim de AsyncQueryProvider`1.ToArray()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.ToDynamicEnumerable">
            <summary>Establecer el shim de AsyncQueryProvider`1.ToDynamicEnumerable()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.ToDynamicList">
            <summary>Establecer el shim de AsyncQueryProvider`1.ToDynamicList()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.ToEnumerable">
            <summary>Establecer el shim de AsyncQueryProvider`1.ToEnumerable()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.ToList">
            <summary>Establecer el shim de AsyncQueryProvider`1.ToList()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.ToPageInt32Int32">
            <summary>Establecer el shim de AsyncQueryProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.UsingAliasString">
            <summary>Establecer el shim de AsyncQueryProvider`1.UsingAlias(String tableAlias)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.WhereSqlFuncOfQueryContextOfT0Sql">
            <summary>Establecer el shim de AsyncQueryProvider`1.WhereSql(Func`2&lt;QueryContext`1&lt;!0&gt;,Sql&gt; queryBuilder)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.WhereSqlSql">
            <summary>Establecer el shim de AsyncQueryProvider`1.WhereSql(Sql sql)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncQueryProvider`1.WhereSqlStringObjectArray">
            <summary>Establecer el shim de AsyncQueryProvider`1.WhereSql(String sql, Object[] args)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Linq.AsyncUpdateQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.#ctor(NPoco.Linq.AsyncUpdateQueryProvider{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.AllInstances.ExcludeDefaults">
            <summary>Establecer el shim de AsyncUpdateQueryProvider`1.ExcludeDefaults()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.AllInstances.ExecuteT0">
            <summary>Establecer el shim de AsyncUpdateQueryProvider`1.Execute(!0 obj)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.AllInstances.OnlyFieldsExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de AsyncUpdateQueryProvider`1.OnlyFields(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; onlyFields)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.AllInstances.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncUpdateQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.Bind(NPoco.Linq.IAsyncUpdateQueryProvider{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.ConstructorIDatabase">
            <summary>Establecer el shim de AsyncUpdateQueryProvider`1.AsyncUpdateQueryProvider`1(IDatabase database)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.ExcludeDefaults">
            <summary>Establecer el shim de AsyncUpdateQueryProvider`1.ExcludeDefaults()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.ExecuteT0">
            <summary>Establecer el shim de AsyncUpdateQueryProvider`1.Execute(!0 obj)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.OnlyFieldsExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de AsyncUpdateQueryProvider`1.OnlyFields(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; onlyFields)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimAsyncUpdateQueryProvider`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de AsyncUpdateQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimComplexSqlBuilder`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Linq.ComplexSqlBuilder`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimComplexSqlBuilder`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimComplexSqlBuilder`1.#ctor(NPoco.Linq.ComplexSqlBuilder{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimComplexSqlBuilder`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimComplexSqlBuilder`1.AllInstances.BuildJoinIDatabaseSqlExpressionOfT0ListOfJoinDataListOfSelectMemberBooleanBoolean">
            <summary>Establecer el shim de ComplexSqlBuilder`1.BuildJoin(IDatabase database, SqlExpression`1&lt;!0&gt; sqlExpression, List`1&lt;JoinData&gt; joinSqlExpressions, List`1&lt;SelectMember&gt; newMembers, Boolean count, Boolean distinct)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimComplexSqlBuilder`1.AllInstances.GetJoinExpressionsExpressionStringJoinType">
            <summary>Establecer el shim de ComplexSqlBuilder`1.GetJoinExpressions(Expression expression, String tableAlias, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimComplexSqlBuilder`1.AllInstances.GetSqlForProjectionOf1ExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.ComplexSqlBuilder{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,NPoco.Sql})">
            <summary>Establecer el shim de ComplexSqlBuilder`1.GetSqlForProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression, Boolean distinct)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimComplexSqlBuilder`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimComplexSqlBuilder`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimComplexSqlBuilder`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimComplexSqlBuilder`1.BuildJoinIDatabaseSqlExpressionOfT0ListOfJoinDataListOfSelectMemberBooleanBoolean">
            <summary>Establecer el shim de ComplexSqlBuilder`1.BuildJoin(IDatabase database, SqlExpression`1&lt;!0&gt; sqlExpression, List`1&lt;JoinData&gt; joinSqlExpressions, List`1&lt;SelectMember&gt; newMembers, Boolean count, Boolean distinct)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimComplexSqlBuilder`1.BuildJoinSqlIDatabaseListOfJoinDataListOfStringPocoColRef">
            <summary>Establecer el shim de ComplexSqlBuilder`1.BuildJoinSql(IDatabase database, List`1&lt;JoinData&gt; joinSqlExpressions, List`1&lt;StringPocoCol&gt;&amp; cols)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimComplexSqlBuilder`1.ConstructorIDatabasePocoDataSqlExpressionOfT0DictionaryOfStringJoinData">
            <summary>Establecer el shim de ComplexSqlBuilder`1.ComplexSqlBuilder`1(IDatabase database, PocoData pocoData, SqlExpression`1&lt;!0&gt; sqlExpression, Dictionary`2&lt;String,JoinData&gt; joinSqlExpressions)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimComplexSqlBuilder`1.GetJoinExpressionsExpressionStringJoinType">
            <summary>Establecer el shim de ComplexSqlBuilder`1.GetJoinExpressions(Expression expression, String tableAlias, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimComplexSqlBuilder`1.GetSqlForProjectionOf1ExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,NPoco.Sql})">
            <summary>Establecer el shim de ComplexSqlBuilder`1.GetSqlForProjection(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression, Boolean distinct)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Linq.DeleteQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1.#ctor(NPoco.Linq.DeleteQueryProvider{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1.AllInstances.Execute">
            <summary>Establecer el shim de DeleteQueryProvider`1.Execute()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1.AllInstances.ExecuteAsync">
            <summary>Establecer el shim de DeleteQueryProvider`1.ExecuteAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1.AllInstances.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de DeleteQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1.Bind(NPoco.Linq.IAsyncDeleteQueryProvider{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1.Bind(NPoco.Linq.IDeleteQueryProvider{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1.ConstructorIDatabase">
            <summary>Establecer el shim de DeleteQueryProvider`1.DeleteQueryProvider`1(IDatabase database)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1.Execute">
            <summary>Establecer el shim de DeleteQueryProvider`1.Execute()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1.ExecuteAsync">
            <summary>Establecer el shim de DeleteQueryProvider`1.ExecuteAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimDeleteQueryProvider`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de DeleteQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimJoinData">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Linq.JoinData</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimJoinData.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimJoinData.#ctor(NPoco.Linq.JoinData)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimJoinData.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.AllInstances.JoinTypeGet">
            <summary>Establecer el shim de JoinData.get_JoinType()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.AllInstances.JoinTypeSetJoinType">
            <summary>Establecer el shim de JoinData.set_JoinType(JoinType value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.AllInstances.OnSqlGet">
            <summary>Establecer el shim de JoinData.get_OnSql()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.AllInstances.OnSqlSetString">
            <summary>Establecer el shim de JoinData.set_OnSql(String value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.AllInstances.PocoMemberGet">
            <summary>Establecer el shim de JoinData.get_PocoMember()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.AllInstances.PocoMemberJoinGet">
            <summary>Establecer el shim de JoinData.get_PocoMemberJoin()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.AllInstances.PocoMemberJoinSetPocoMember">
            <summary>Establecer el shim de JoinData.set_PocoMemberJoin(PocoMember value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.AllInstances.PocoMemberSetPocoMember">
            <summary>Establecer el shim de JoinData.set_PocoMember(PocoMember value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.AllInstances.PocoMembersGet">
            <summary>Establecer el shim de JoinData.get_PocoMembers()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.AllInstances.PocoMembersSetListOfPocoMember">
            <summary>Establecer el shim de JoinData.set_PocoMembers(List`1&lt;PocoMember&gt; value)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimJoinData.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimJoinData.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.Constructor">
            <summary>Establecer el shim de JoinData.JoinData()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.JoinTypeGet">
            <summary>Establecer el shim de JoinData.get_JoinType()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.JoinTypeSetJoinType">
            <summary>Establecer el shim de JoinData.set_JoinType(JoinType value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.OnSqlGet">
            <summary>Establecer el shim de JoinData.get_OnSql()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.OnSqlSetString">
            <summary>Establecer el shim de JoinData.set_OnSql(String value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.PocoMemberGet">
            <summary>Establecer el shim de JoinData.get_PocoMember()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.PocoMemberJoinGet">
            <summary>Establecer el shim de JoinData.get_PocoMemberJoin()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.PocoMemberJoinSetPocoMember">
            <summary>Establecer el shim de JoinData.set_PocoMemberJoin(PocoMember value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.PocoMemberSetPocoMember">
            <summary>Establecer el shim de JoinData.set_PocoMember(PocoMember value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.PocoMembersGet">
            <summary>Establecer el shim de JoinData.get_PocoMembers()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimJoinData.PocoMembersSetListOfPocoMember">
            <summary>Establecer el shim de JoinData.set_PocoMembers(List`1&lt;PocoMember&gt; value)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimQueryBuilder`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Linq.QueryBuilder`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryBuilder`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryBuilder`1.#ctor(NPoco.Linq.QueryBuilder{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimQueryBuilder`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.AllInstances.DataGet">
            <summary>Establecer el shim de QueryBuilder`1.get_Data()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.AllInstances.DataSetQueryBuilderDataOfT0">
            <summary>Establecer el shim de QueryBuilder`1.set_Data(QueryBuilderData`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.AllInstances.LimitInt32">
            <summary>Establecer el shim de QueryBuilder`1.Limit(Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.AllInstances.LimitInt32Int32">
            <summary>Establecer el shim de QueryBuilder`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.AllInstances.OrderByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilder`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; orderByDescendingExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.AllInstances.OrderByExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilder`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; orderByExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.AllInstances.ThenByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilder`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; thenByDescendingExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.AllInstances.ThenByExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilder`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; thenByExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.AllInstances.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryBuilder`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryBuilder`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryBuilder`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.Constructor">
            <summary>Establecer el shim de QueryBuilder`1.QueryBuilder`1()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.DataGet">
            <summary>Establecer el shim de QueryBuilder`1.get_Data()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.DataSetQueryBuilderDataOfT0">
            <summary>Establecer el shim de QueryBuilder`1.set_Data(QueryBuilderData`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.LimitInt32">
            <summary>Establecer el shim de QueryBuilder`1.Limit(Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.LimitInt32Int32">
            <summary>Establecer el shim de QueryBuilder`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.OrderByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilder`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; orderByDescendingExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.OrderByExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilder`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; orderByExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.ThenByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilder`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; thenByDescendingExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.ThenByExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilder`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; thenByExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilder`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryBuilder`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimQueryBuilderData`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Linq.QueryBuilderData`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryBuilderData`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryBuilderData`1.#ctor(NPoco.Linq.QueryBuilderData{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimQueryBuilderData`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.AllInstances.OrderByDescendingExpressionGet">
            <summary>Establecer el shim de QueryBuilderData`1.get_OrderByDescendingExpression()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.AllInstances.OrderByDescendingExpressionSetExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilderData`1.set_OrderByDescendingExpression(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.AllInstances.OrderByExpressionGet">
            <summary>Establecer el shim de QueryBuilderData`1.get_OrderByExpression()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.AllInstances.OrderByExpressionSetExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilderData`1.set_OrderByExpression(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.AllInstances.RowsGet">
            <summary>Establecer el shim de QueryBuilderData`1.get_Rows()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.AllInstances.RowsSetNullableOfInt32">
            <summary>Establecer el shim de QueryBuilderData`1.set_Rows(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.AllInstances.SkipGet">
            <summary>Establecer el shim de QueryBuilderData`1.get_Skip()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.AllInstances.SkipSetNullableOfInt32">
            <summary>Establecer el shim de QueryBuilderData`1.set_Skip(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.AllInstances.ThenByDescendingExpressionGet">
            <summary>Establecer el shim de QueryBuilderData`1.get_ThenByDescendingExpression()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.AllInstances.ThenByDescendingExpressionSetListOfExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilderData`1.set_ThenByDescendingExpression(List`1&lt;Expression`1&lt;Func`2&lt;!0,Object&gt;&gt;&gt; value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.AllInstances.ThenByExpressionGet">
            <summary>Establecer el shim de QueryBuilderData`1.get_ThenByExpression()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.AllInstances.ThenByExpressionSetListOfExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilderData`1.set_ThenByExpression(List`1&lt;Expression`1&lt;Func`2&lt;!0,Object&gt;&gt;&gt; value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.AllInstances.WhereExpressionGet">
            <summary>Establecer el shim de QueryBuilderData`1.get_WhereExpression()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.AllInstances.WhereExpressionSetExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryBuilderData`1.set_WhereExpression(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; value)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryBuilderData`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryBuilderData`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.Constructor">
            <summary>Establecer el shim de QueryBuilderData`1.QueryBuilderData`1()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.OrderByDescendingExpressionGet">
            <summary>Establecer el shim de QueryBuilderData`1.get_OrderByDescendingExpression()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.OrderByDescendingExpressionSetExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilderData`1.set_OrderByDescendingExpression(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.OrderByExpressionGet">
            <summary>Establecer el shim de QueryBuilderData`1.get_OrderByExpression()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.OrderByExpressionSetExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilderData`1.set_OrderByExpression(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.RowsGet">
            <summary>Establecer el shim de QueryBuilderData`1.get_Rows()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.RowsSetNullableOfInt32">
            <summary>Establecer el shim de QueryBuilderData`1.set_Rows(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.SkipGet">
            <summary>Establecer el shim de QueryBuilderData`1.get_Skip()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.SkipSetNullableOfInt32">
            <summary>Establecer el shim de QueryBuilderData`1.set_Skip(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.ThenByDescendingExpressionGet">
            <summary>Establecer el shim de QueryBuilderData`1.get_ThenByDescendingExpression()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.ThenByDescendingExpressionSetListOfExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilderData`1.set_ThenByDescendingExpression(List`1&lt;Expression`1&lt;Func`2&lt;!0,Object&gt;&gt;&gt; value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.ThenByExpressionGet">
            <summary>Establecer el shim de QueryBuilderData`1.get_ThenByExpression()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.ThenByExpressionSetListOfExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryBuilderData`1.set_ThenByExpression(List`1&lt;Expression`1&lt;Func`2&lt;!0,Object&gt;&gt;&gt; value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.WhereExpressionGet">
            <summary>Establecer el shim de QueryBuilderData`1.get_WhereExpression()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryBuilderData`1.WhereExpressionSetExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryBuilderData`1.set_WhereExpression(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; value)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimQueryContext`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Linq.QueryContext`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryContext`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryContext`1.#ctor(NPoco.Linq.QueryContext{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimQueryContext`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryContext`1.AllInstances.DatabaseTypeGet">
            <summary>Establecer el shim de QueryContext`1.get_DatabaseType()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryContext`1.AllInstances.GetAliasForExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryContext`1.GetAliasFor(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryContext`1.AllInstances.GetPocoDataForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.QueryContext{`0},NPoco.PocoData})">
            <summary>Establecer el shim de QueryContext`1.GetPocoDataFor()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryContext`1.AllInstances.PocoDataGet">
            <summary>Establecer el shim de QueryContext`1.get_PocoData()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryContext`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryContext`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryContext`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryContext`1.ConstructorDatabasePocoDataDictionaryOfStringJoinData">
            <summary>Establecer el shim de QueryContext`1.QueryContext`1(Database database, PocoData pocoData, Dictionary`2&lt;String,JoinData&gt; joinExpressions)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryContext`1.DatabaseTypeGet">
            <summary>Establecer el shim de QueryContext`1.get_DatabaseType()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryContext`1.GetAliasForExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryContext`1.GetAliasFor(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; propertyExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryContext`1.GetPocoDataForOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.PocoData})">
            <summary>Establecer el shim de QueryContext`1.GetPocoDataFor()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryContext`1.PocoDataGet">
            <summary>Establecer el shim de QueryContext`1.get_PocoData()</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimQueryProvider`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Linq.QueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.#ctor(NPoco.Linq.QueryProvider{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.Any">
            <summary>Establecer el shim de QueryProvider`1.Any()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.AnyAsync">
            <summary>Establecer el shim de QueryProvider`1.AnyAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.AnyAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.AnyAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.AnyExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.Count">
            <summary>Establecer el shim de QueryProvider`1.Count()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.CountAsync">
            <summary>Establecer el shim de QueryProvider`1.CountAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.CountAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.CountExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.Distinct">
            <summary>Establecer el shim de QueryProvider`1.Distinct()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.DistinctAsync">
            <summary>Establecer el shim de QueryProvider`1.DistinctAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.DistinctAsyncOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.QueryProvider{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de QueryProvider`1.DistinctAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.DistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.QueryProvider{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de QueryProvider`1.Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.ExecuteQuerySql">
            <summary>Establecer el shim de QueryProvider`1.ExecuteQuery(Sql sql)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.First">
            <summary>Establecer el shim de QueryProvider`1.First()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.FirstAsync">
            <summary>Establecer el shim de QueryProvider`1.FirstAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.FirstAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.FirstAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.FirstExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.FirstOrDefault">
            <summary>Establecer el shim de QueryProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.FirstOrDefaultAsync">
            <summary>Establecer el shim de QueryProvider`1.FirstOrDefaultAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.FirstOrDefaultAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.FirstOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.FromQueryBuilderOfT0">
            <summary>Establecer el shim de QueryProvider`1.From(QueryBuilder`1&lt;!0&gt; builder)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.IncludeManyExpressionOfFuncOfT0IListJoinType">
            <summary>Establecer el shim de QueryProvider`1.IncludeMany(Expression`1&lt;Func`2&lt;!0,IList&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.IncludeOf1ExpressionOfFuncOfT0M0JoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.QueryProvider{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Linq.JoinType,NPoco.Linq.IQueryProviderWithIncludes{`0}})">
            <summary>Establecer el shim de QueryProvider`1.Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.IncludeOf1ExpressionOfFuncOfT0M0StringJoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.QueryProvider{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,NPoco.Linq.JoinType,NPoco.Linq.IQueryProviderWithIncludes{`0}})">
            <summary>Establecer el shim de QueryProvider`1.Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, String tableAlias, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.IncludeOf1JoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.QueryProvider{`0},NPoco.Linq.JoinType,NPoco.Linq.IQueryProviderWithIncludes{`0}})">
            <summary>Establecer el shim de QueryProvider`1.Include(JoinType joinType)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.LimitInt32">
            <summary>Establecer el shim de QueryProvider`1.Limit(Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.LimitInt32Int32">
            <summary>Establecer el shim de QueryProvider`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.OrderByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryProvider`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.OrderByExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryProvider`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.ProjectToAsyncOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.QueryProvider{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de QueryProvider`1.ProjectToAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.ProjectToOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.QueryProvider{`0},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de QueryProvider`1.ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.Single">
            <summary>Establecer el shim de QueryProvider`1.Single()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.SingleAsync">
            <summary>Establecer el shim de QueryProvider`1.SingleAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.SingleAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.SingleExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.SingleOrDefault">
            <summary>Establecer el shim de QueryProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.SingleOrDefaultAsync">
            <summary>Establecer el shim de QueryProvider`1.SingleOrDefaultAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.SingleOrDefaultAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.SingleOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.SingleOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.ThenByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryProvider`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.ThenByExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryProvider`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.ToArray">
            <summary>Establecer el shim de QueryProvider`1.ToArray()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.ToArrayAsync">
            <summary>Establecer el shim de QueryProvider`1.ToArrayAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.ToEnumerable">
            <summary>Establecer el shim de QueryProvider`1.ToEnumerable()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.ToEnumerableAsync">
            <summary>Establecer el shim de QueryProvider`1.ToEnumerableAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.ToList">
            <summary>Establecer el shim de QueryProvider`1.ToList()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.ToListAsync">
            <summary>Establecer el shim de QueryProvider`1.ToListAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.ToPageAsyncInt32Int32">
            <summary>Establecer el shim de QueryProvider`1.ToPageAsync(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.ToPageInt32Int32">
            <summary>Establecer el shim de QueryProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.UsingAliasString">
            <summary>Establecer el shim de QueryProvider`1.UsingAlias(String empty)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.WhereSqlFuncOfQueryContextOfT0Sql">
            <summary>Establecer el shim de QueryProvider`1.WhereSql(Func`2&lt;QueryContext`1&lt;!0&gt;,Sql&gt; queryBuilder)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.WhereSqlSql">
            <summary>Establecer el shim de QueryProvider`1.WhereSql(Sql sql)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AllInstances.WhereSqlStringObjectArray">
            <summary>Establecer el shim de QueryProvider`1.WhereSql(String sql, Object[] args)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.Any">
            <summary>Establecer el shim de QueryProvider`1.Any()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AnyAsync">
            <summary>Establecer el shim de QueryProvider`1.AnyAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AnyAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.AnyAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.AnyExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.Bind(NPoco.Linq.INeedDatabase)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.Bind(NPoco.Linq.INeedSql)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.Bind(NPoco.Linq.IAsyncQueryProviderWithIncludes{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.Bind(NPoco.Linq.IAsyncQueryProvider{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.Bind(NPoco.Linq.IAsyncQueryResultProvider{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.Bind(NPoco.Linq.IQueryProviderWithIncludes{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.Bind(NPoco.Linq.IQueryProvider{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.Bind(NPoco.Linq.IQueryResultProvider{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.Bind(NPoco.Linq.ISimpleQueryProviderExpression{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.ConstructorDatabase">
            <summary>Establecer el shim de QueryProvider`1.QueryProvider`1(Database database)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.ConstructorDatabaseExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.QueryProvider`1(Database database, Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.Count">
            <summary>Establecer el shim de QueryProvider`1.Count()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.CountAsync">
            <summary>Establecer el shim de QueryProvider`1.CountAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.CountAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.CountExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.Distinct">
            <summary>Establecer el shim de QueryProvider`1.Distinct()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.DistinctAsync">
            <summary>Establecer el shim de QueryProvider`1.DistinctAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.DistinctAsyncOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de QueryProvider`1.DistinctAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.DistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de QueryProvider`1.Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.ExecuteQuerySql">
            <summary>Establecer el shim de QueryProvider`1.ExecuteQuery(Sql sql)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.First">
            <summary>Establecer el shim de QueryProvider`1.First()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.FirstAsync">
            <summary>Establecer el shim de QueryProvider`1.FirstAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.FirstAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.FirstAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.FirstExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.FirstOrDefault">
            <summary>Establecer el shim de QueryProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.FirstOrDefaultAsync">
            <summary>Establecer el shim de QueryProvider`1.FirstOrDefaultAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.FirstOrDefaultAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.FirstOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.FromQueryBuilderOfT0">
            <summary>Establecer el shim de QueryProvider`1.From(QueryBuilder`1&lt;!0&gt; builder)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.IncludeManyExpressionOfFuncOfT0IListJoinType">
            <summary>Establecer el shim de QueryProvider`1.IncludeMany(Expression`1&lt;Func`2&lt;!0,IList&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.IncludeOf1ExpressionOfFuncOfT0M0JoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Linq.JoinType,NPoco.Linq.IQueryProviderWithIncludes{`0}})">
            <summary>Establecer el shim de QueryProvider`1.Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.IncludeOf1ExpressionOfFuncOfT0M0StringJoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,NPoco.Linq.JoinType,NPoco.Linq.IQueryProviderWithIncludes{`0}})">
            <summary>Establecer el shim de QueryProvider`1.Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, String tableAlias, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.IncludeOf1JoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.JoinType,NPoco.Linq.IQueryProviderWithIncludes{`0}})">
            <summary>Establecer el shim de QueryProvider`1.Include(JoinType joinType)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.LimitInt32">
            <summary>Establecer el shim de QueryProvider`1.Limit(Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.LimitInt32Int32">
            <summary>Establecer el shim de QueryProvider`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.OrderByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryProvider`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.OrderByExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryProvider`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.ProjectToAsyncOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer el shim de QueryProvider`1.ProjectToAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimQueryProvider`1.ProjectToOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{``0}})">
            <summary>Establecer el shim de QueryProvider`1.ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.Single">
            <summary>Establecer el shim de QueryProvider`1.Single()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.SingleAsync">
            <summary>Establecer el shim de QueryProvider`1.SingleAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.SingleAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.SingleExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.SingleOrDefault">
            <summary>Establecer el shim de QueryProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.SingleOrDefaultAsync">
            <summary>Establecer el shim de QueryProvider`1.SingleOrDefaultAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.SingleOrDefaultAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.SingleOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.SingleOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.ThenByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryProvider`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.ThenByExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de QueryProvider`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.ToArray">
            <summary>Establecer el shim de QueryProvider`1.ToArray()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.ToArrayAsync">
            <summary>Establecer el shim de QueryProvider`1.ToArrayAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.ToEnumerable">
            <summary>Establecer el shim de QueryProvider`1.ToEnumerable()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.ToEnumerableAsync">
            <summary>Establecer el shim de QueryProvider`1.ToEnumerableAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.ToList">
            <summary>Establecer el shim de QueryProvider`1.ToList()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.ToListAsync">
            <summary>Establecer el shim de QueryProvider`1.ToListAsync()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.ToPageAsyncInt32Int32">
            <summary>Establecer el shim de QueryProvider`1.ToPageAsync(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.ToPageInt32Int32">
            <summary>Establecer el shim de QueryProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.UsingAliasString">
            <summary>Establecer el shim de QueryProvider`1.UsingAlias(String empty)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de QueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.WhereSqlFuncOfQueryContextOfT0Sql">
            <summary>Establecer el shim de QueryProvider`1.WhereSql(Func`2&lt;QueryContext`1&lt;!0&gt;,Sql&gt; queryBuilder)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.WhereSqlSql">
            <summary>Establecer el shim de QueryProvider`1.WhereSql(Sql sql)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimQueryProvider`1.WhereSqlStringObjectArray">
            <summary>Establecer el shim de QueryProvider`1.WhereSql(String sql, Object[] args)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimStringPocoCol">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Linq.StringPocoCol</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimStringPocoCol.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimStringPocoCol.#ctor(NPoco.Linq.StringPocoCol)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimStringPocoCol.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimStringPocoCol.AllInstances.PocoColumnGet">
            <summary>Establecer el shim de StringPocoCol.get_PocoColumn()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimStringPocoCol.AllInstances.PocoColumnSetPocoColumnArray">
            <summary>Establecer el shim de StringPocoCol.set_PocoColumn(PocoColumn[] value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimStringPocoCol.AllInstances.StringColGet">
            <summary>Establecer el shim de StringPocoCol.get_StringCol()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimStringPocoCol.AllInstances.StringColSetString">
            <summary>Establecer el shim de StringPocoCol.set_StringCol(String value)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimStringPocoCol.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimStringPocoCol.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimStringPocoCol.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimStringPocoCol.Constructor">
            <summary>Establecer el shim de StringPocoCol.StringPocoCol()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimStringPocoCol.PocoColumnGet">
            <summary>Establecer el shim de StringPocoCol.get_PocoColumn()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimStringPocoCol.PocoColumnSetPocoColumnArray">
            <summary>Establecer el shim de StringPocoCol.set_PocoColumn(PocoColumn[] value)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimStringPocoCol.StringColGet">
            <summary>Establecer el shim de StringPocoCol.get_StringCol()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimStringPocoCol.StringColSetString">
            <summary>Establecer el shim de StringPocoCol.set_StringCol(String value)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.Linq.UpdateQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.#ctor(NPoco.Linq.UpdateQueryProvider{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.AllInstances.ExcludeDefaults">
            <summary>Establecer el shim de UpdateQueryProvider`1.ExcludeDefaults()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.AllInstances.ExecuteAsyncT0">
            <summary>Establecer el shim de UpdateQueryProvider`1.ExecuteAsync(!0 obj)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.AllInstances.ExecuteT0">
            <summary>Establecer el shim de UpdateQueryProvider`1.Execute(!0 obj)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.AllInstances.OnlyFieldsExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de UpdateQueryProvider`1.OnlyFields(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; onlyFields)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.AllInstances.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de UpdateQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.Bind(NPoco.Linq.IAsyncUpdateQueryProvider{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.Bind(NPoco.Linq.IUpdateQueryProvider{`0})">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.ConstructorIDatabase">
            <summary>Establecer el shim de UpdateQueryProvider`1.UpdateQueryProvider`1(IDatabase database)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.ExcludeDefaults">
            <summary>Establecer el shim de UpdateQueryProvider`1.ExcludeDefaults()</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.ExecuteAsyncT0">
            <summary>Establecer el shim de UpdateQueryProvider`1.ExecuteAsync(!0 obj)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.ExecuteT0">
            <summary>Establecer el shim de UpdateQueryProvider`1.Execute(!0 obj)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.OnlyFieldsExpressionOfFuncOfT0Object">
            <summary>Establecer el shim de UpdateQueryProvider`1.OnlyFields(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; onlyFields)</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.ShimUpdateQueryProvider`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el shim de UpdateQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubAsyncDeleteQueryProvider`1">
            <summary>Tipo stub de NPoco.Linq.AsyncDeleteQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubAsyncDeleteQueryProvider`1.#ctor(NPoco.IDatabase)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubAsyncDeleteQueryProvider`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubAsyncDeleteQueryProvider`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAsyncDeleteQueryProvider</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubAsyncDeleteQueryProvider`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubAsyncDeleteQueryProvider`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubAsyncQueryProvider`1">
            <summary>Tipo stub de NPoco.Linq.AsyncQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubAsyncQueryProvider`1.#ctor(NPoco.Database)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubAsyncQueryProvider`1.#ctor(NPoco.Database,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubAsyncQueryProvider`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubAsyncQueryProvider`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAsyncQueryProvider</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubAsyncQueryProvider`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubAsyncQueryProvider`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubAsyncUpdateQueryProvider`1">
            <summary>Tipo stub de NPoco.Linq.AsyncUpdateQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubAsyncUpdateQueryProvider`1.#ctor(NPoco.IDatabase)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubAsyncUpdateQueryProvider`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubAsyncUpdateQueryProvider`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAsyncUpdateQueryProvider</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubAsyncUpdateQueryProvider`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubAsyncUpdateQueryProvider`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubComplexSqlBuilder`1">
            <summary>Tipo stub de NPoco.Linq.ComplexSqlBuilder`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubComplexSqlBuilder`1.#ctor(NPoco.IDatabase,NPoco.PocoData,NPoco.Expressions.SqlExpression{`0},System.Collections.Generic.Dictionary{System.String,NPoco.Linq.JoinData})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubComplexSqlBuilder`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubComplexSqlBuilder`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubComplexSqlBuilder</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubComplexSqlBuilder`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubComplexSqlBuilder`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubDeleteQueryProvider`1">
            <summary>Tipo stub de NPoco.Linq.DeleteQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubDeleteQueryProvider`1.#ctor(NPoco.IDatabase)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubDeleteQueryProvider`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubDeleteQueryProvider`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDeleteQueryProvider</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubDeleteQueryProvider`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubDeleteQueryProvider`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubIAsyncDeleteQueryProvider`1">
            <summary>Tipo stub de NPoco.Linq.IAsyncDeleteQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncDeleteQueryProvider`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIAsyncDeleteQueryProvider</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncDeleteQueryProvider`1.Execute">
            <summary>Establecer el stub de IAsyncDeleteQueryProvider`1.Execute()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncDeleteQueryProvider`1.NPoco#Linq#IAsyncDeleteQueryProvider{T}#Execute">
            <summary>Establecer el stub de IAsyncDeleteQueryProvider`1.Execute()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncDeleteQueryProvider`1.NPoco#Linq#IAsyncDeleteQueryProvider{T}#Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncDeleteQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncDeleteQueryProvider`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncDeleteQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1">
            <summary>Tipo stub de NPoco.Linq.IAsyncQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIAsyncQueryProvider</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.Any">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Any()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.AnyExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.Count">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Count()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.CountExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.Distinct">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Distinct()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.DistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.First">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.First()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.FirstExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.FirstOrDefault">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.FirstOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.FromQueryBuilderOfT0">
            <summary>Establecer el stub de IAsyncQueryProvider`1.From(QueryBuilder`1&lt;!0&gt; builder)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.LimitInt32">
            <summary>Establecer el stub de IAsyncQueryProvider`1.Limit(Int32 rows)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.LimitInt32Int32">
            <summary>Establecer el stub de IAsyncQueryProvider`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryProvider{T}#From(NPoco.Linq.QueryBuilder{`0})">
            <summary>Establecer el stub de IAsyncQueryProvider`1.From(QueryBuilder`1&lt;!0&gt; builder)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryProvider{T}#Limit(System.Int32)">
            <summary>Establecer el stub de IAsyncQueryProvider`1.Limit(Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryProvider{T}#Limit(System.Int32,System.Int32)">
            <summary>Establecer el stub de IAsyncQueryProvider`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryProvider{T}#OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IAsyncQueryProvider`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryProvider{T}#OrderByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IAsyncQueryProvider`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryProvider{T}#ThenBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IAsyncQueryProvider`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryProvider{T}#ThenByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IAsyncQueryProvider`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryProvider{T}#Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryProvider{T}#WhereSql(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryProvider`1.WhereSql(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryProvider{T}#WhereSql(System.Func{NPoco.Linq.QueryContext{`0},NPoco.Sql})">
            <summary>Establecer el stub de IAsyncQueryProvider`1.WhereSql(Func`2&lt;QueryContext`1&lt;!0&gt;,Sql&gt; queryBuilder)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryProvider{T}#WhereSql(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryProvider`1.WhereSql(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Any">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Any()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Any(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Count">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Count()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Distinct">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Distinct()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Distinct``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#First">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.First()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#First(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#FirstOrDefault">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#ProjectTo``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Single">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Single()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#SingleOrDefault">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#SingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#ToArray">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToArray()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#ToEnumerable">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToEnumerable()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#ToList">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToList()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#ToPage(System.Int32,System.Int32)">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.OrderByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IAsyncQueryProvider`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.OrderByExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IAsyncQueryProvider`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.ProjectToOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.Single">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Single()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.SingleExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.SingleOrDefault">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.SingleOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.ThenByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IAsyncQueryProvider`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.ThenByExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IAsyncQueryProvider`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.ToArray">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToArray()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.ToEnumerable">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToEnumerable()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.ToList">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToList()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.ToPageInt32Int32">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.WhereSqlFuncOfQueryContextOfT0Sql">
            <summary>Establecer el stub de IAsyncQueryProvider`1.WhereSql(Func`2&lt;QueryContext`1&lt;!0&gt;,Sql&gt; queryBuilder)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.WhereSqlSql">
            <summary>Establecer el stub de IAsyncQueryProvider`1.WhereSql(Sql sql)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProvider`1.WhereSqlStringObjectArray">
            <summary>Establecer el stub de IAsyncQueryProvider`1.WhereSql(String sql, Object[] args)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1">
            <summary>Tipo stub de NPoco.Linq.IAsyncQueryProviderWithIncludes`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIAsyncQueryProviderWithIncludes</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.Any">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Any()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.AnyExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.Count">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Count()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.CountExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.Distinct">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Distinct()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.DistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.First">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.First()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.FirstExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.FirstOrDefault">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.FirstOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.FromQueryBuilderOfT0">
            <summary>Establecer el stub de IAsyncQueryProvider`1.From(QueryBuilder`1&lt;!0&gt; builder)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.IncludeManyExpressionOfFuncOfT0IListJoinType">
            <summary>Establecer el stub de IAsyncQueryProviderWithIncludes`1.IncludeMany(Expression`1&lt;Func`2&lt;!0,IList&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.IncludeOf1ExpressionOfFuncOfT0M0JoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Linq.JoinType,NPoco.Linq.IAsyncQueryProviderWithIncludes{`0}})">
            <summary>Establecer stubs de Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.IncludeOf1ExpressionOfFuncOfT0M0StringJoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,NPoco.Linq.JoinType,NPoco.Linq.IAsyncQueryProviderWithIncludes{`0}})">
            <summary>Establecer stubs de Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, String tableAlias, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.IncludeOf1JoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.JoinType,NPoco.Linq.IAsyncQueryProviderWithIncludes{`0}})">
            <summary>Establecer stubs de Include(JoinType joinType)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.LimitInt32">
            <summary>Establecer el stub de IAsyncQueryProvider`1.Limit(Int32 rows)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.LimitInt32Int32">
            <summary>Establecer el stub de IAsyncQueryProvider`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProviderWithIncludes{T}#Include``1(NPoco.Linq.JoinType)">
            <summary>Establecer el stub de IAsyncQueryProviderWithIncludes`1.Include(JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProviderWithIncludes{T}#Include``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Linq.JoinType)">
            <summary>Establecer el stub de IAsyncQueryProviderWithIncludes`1.Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProviderWithIncludes{T}#Include``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,NPoco.Linq.JoinType)">
            <summary>Establecer el stub de IAsyncQueryProviderWithIncludes`1.Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, String tableAlias, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProviderWithIncludes{T}#IncludeMany(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.IList}},NPoco.Linq.JoinType)">
            <summary>Establecer el stub de IAsyncQueryProviderWithIncludes`1.IncludeMany(Expression`1&lt;Func`2&lt;!0,IList&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProviderWithIncludes{T}#UsingAlias(System.String)">
            <summary>Establecer el stub de IAsyncQueryProviderWithIncludes`1.UsingAlias(String empty)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProvider{T}#From(NPoco.Linq.QueryBuilder{`0})">
            <summary>Establecer el stub de IAsyncQueryProvider`1.From(QueryBuilder`1&lt;!0&gt; builder)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProvider{T}#Limit(System.Int32)">
            <summary>Establecer el stub de IAsyncQueryProvider`1.Limit(Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProvider{T}#Limit(System.Int32,System.Int32)">
            <summary>Establecer el stub de IAsyncQueryProvider`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProvider{T}#OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IAsyncQueryProvider`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProvider{T}#OrderByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IAsyncQueryProvider`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProvider{T}#ThenBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IAsyncQueryProvider`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProvider{T}#ThenByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IAsyncQueryProvider`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProvider{T}#Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProvider{T}#WhereSql(NPoco.Sql)">
            <summary>Establecer el stub de IAsyncQueryProvider`1.WhereSql(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProvider{T}#WhereSql(System.Func{NPoco.Linq.QueryContext{`0},NPoco.Sql})">
            <summary>Establecer el stub de IAsyncQueryProvider`1.WhereSql(Func`2&lt;QueryContext`1&lt;!0&gt;,Sql&gt; queryBuilder)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryProvider{T}#WhereSql(System.String,System.Object[])">
            <summary>Establecer el stub de IAsyncQueryProvider`1.WhereSql(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Any">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Any()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Any(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Count">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Count()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Distinct``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Distinct">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Distinct()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#First">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.First()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#First(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#FirstOrDefault">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#ProjectTo``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Single">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Single()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#SingleOrDefault">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#SingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#ToArray">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToArray()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#ToEnumerable">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToEnumerable()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#ToList">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToList()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.NPoco#Linq#IAsyncQueryResultProvider{T}#ToPage(System.Int32,System.Int32)">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.OrderByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IAsyncQueryProvider`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.OrderByExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IAsyncQueryProvider`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.ProjectToOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.Single">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Single()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.SingleExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.SingleOrDefault">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.SingleOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.ThenByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IAsyncQueryProvider`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.ThenByExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IAsyncQueryProvider`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.ToArray">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToArray()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.ToEnumerable">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToEnumerable()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.ToList">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToList()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.ToPageInt32Int32">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.UsingAliasString">
            <summary>Establecer el stub de IAsyncQueryProviderWithIncludes`1.UsingAlias(String empty)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.WhereSqlFuncOfQueryContextOfT0Sql">
            <summary>Establecer el stub de IAsyncQueryProvider`1.WhereSql(Func`2&lt;QueryContext`1&lt;!0&gt;,Sql&gt; queryBuilder)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.WhereSqlSql">
            <summary>Establecer el stub de IAsyncQueryProvider`1.WhereSql(Sql sql)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryProviderWithIncludes`1.WhereSqlStringObjectArray">
            <summary>Establecer el stub de IAsyncQueryProvider`1.WhereSql(String sql, Object[] args)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1">
            <summary>Tipo stub de NPoco.Linq.IAsyncQueryResultProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIAsyncQueryResultProvider</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.Any">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Any()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.AnyExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.Count">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Count()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.CountExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.Distinct">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Distinct()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.DistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.First">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.First()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.FirstExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.FirstOrDefault">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.FirstOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Any">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Any()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Any(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Count">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Count()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Distinct">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Distinct()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Distinct``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#First">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.First()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#First(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#FirstOrDefault">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#ProjectTo``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Single">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Single()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#SingleOrDefault">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#SingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#ToArray">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToArray()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#ToEnumerable">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToEnumerable()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#ToList">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToList()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.NPoco#Linq#IAsyncQueryResultProvider{T}#ToPage(System.Int32,System.Int32)">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.ProjectToOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.Single">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Single()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.SingleExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.SingleOrDefault">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.SingleOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.ToArray">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToArray()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.ToEnumerable">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToEnumerable()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.ToList">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToList()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncQueryResultProvider`1.ToPageInt32Int32">
            <summary>Establecer el stub de IAsyncQueryResultProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubIAsyncUpdateQueryProvider`1">
            <summary>Tipo stub de NPoco.Linq.IAsyncUpdateQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncUpdateQueryProvider`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIAsyncUpdateQueryProvider</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncUpdateQueryProvider`1.ExcludeDefaults">
            <summary>Establecer el stub de IAsyncUpdateQueryProvider`1.ExcludeDefaults()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncUpdateQueryProvider`1.ExecuteT0">
            <summary>Establecer el stub de IAsyncUpdateQueryProvider`1.Execute(!0 obj)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncUpdateQueryProvider`1.NPoco#Linq#IAsyncUpdateQueryProvider{T}#ExcludeDefaults">
            <summary>Establecer el stub de IAsyncUpdateQueryProvider`1.ExcludeDefaults()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncUpdateQueryProvider`1.NPoco#Linq#IAsyncUpdateQueryProvider{T}#Execute(`0)">
            <summary>Establecer el stub de IAsyncUpdateQueryProvider`1.Execute(!0 obj)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncUpdateQueryProvider`1.NPoco#Linq#IAsyncUpdateQueryProvider{T}#OnlyFields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IAsyncUpdateQueryProvider`1.OnlyFields(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; onlyFields)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIAsyncUpdateQueryProvider`1.NPoco#Linq#IAsyncUpdateQueryProvider{T}#Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IAsyncUpdateQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncUpdateQueryProvider`1.OnlyFieldsExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IAsyncUpdateQueryProvider`1.OnlyFields(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; onlyFields)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIAsyncUpdateQueryProvider`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IAsyncUpdateQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubIDeleteQueryProvider`1">
            <summary>Tipo stub de NPoco.Linq.IDeleteQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIDeleteQueryProvider`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIDeleteQueryProvider</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIDeleteQueryProvider`1.Execute">
            <summary>Establecer el stub de IDeleteQueryProvider`1.Execute()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIDeleteQueryProvider`1.ExecuteAsync">
            <summary>Establecer el stub de IDeleteQueryProvider`1.ExecuteAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIDeleteQueryProvider`1.NPoco#Linq#IDeleteQueryProvider{T}#Execute">
            <summary>Establecer el stub de IDeleteQueryProvider`1.Execute()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIDeleteQueryProvider`1.NPoco#Linq#IDeleteQueryProvider{T}#ExecuteAsync">
            <summary>Establecer el stub de IDeleteQueryProvider`1.ExecuteAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIDeleteQueryProvider`1.NPoco#Linq#IDeleteQueryProvider{T}#Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IDeleteQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIDeleteQueryProvider`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IDeleteQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubINeedDatabase">
            <summary>Tipo stub de NPoco.Linq.INeedDatabase</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubINeedDatabase.#ctor">
            <summary>Inicializa una nueva instancia de type StubINeedDatabase</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubINeedDatabase.GetDatabase">
            <summary>Establecer el stub de INeedDatabase.GetDatabase()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubINeedDatabase.NPoco#Linq#INeedDatabase#GetDatabase">
            <summary>Establecer el stub de INeedDatabase.GetDatabase()</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubINeedSql">
            <summary>Tipo stub de NPoco.Linq.INeedSql</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubINeedSql.#ctor">
            <summary>Inicializa una nueva instancia de type StubINeedSql</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubINeedSql.GetSql">
            <summary>Establecer el stub de INeedSql.GetSql()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubINeedSql.NPoco#Linq#INeedSql#GetSql">
            <summary>Establecer el stub de INeedSql.GetSql()</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubIQueryProvider`1">
            <summary>Tipo stub de NPoco.Linq.IQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIQueryProvider</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.Any">
            <summary>Establecer el stub de IQueryResultProvider`1.Any()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.AnyAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.AnyAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.AnyAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.AnyAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.AnyExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.Count">
            <summary>Establecer el stub de IQueryResultProvider`1.Count()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.CountAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.CountAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.CountAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.CountExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.Distinct">
            <summary>Establecer el stub de IQueryResultProvider`1.Distinct()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.DistinctAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.DistinctAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.DistinctAsyncOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de DistinctAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.DistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.First">
            <summary>Establecer el stub de IQueryResultProvider`1.First()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.FirstAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.FirstAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.FirstExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.FirstOrDefault">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.FirstOrDefaultAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefaultAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.FirstOrDefaultAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.FirstOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.FromQueryBuilderOfT0">
            <summary>Establecer el stub de IQueryProvider`1.From(QueryBuilder`1&lt;!0&gt; builder)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.LimitInt32">
            <summary>Establecer el stub de IQueryProvider`1.Limit(Int32 rows)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.LimitInt32Int32">
            <summary>Establecer el stub de IQueryProvider`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryProvider{T}#From(NPoco.Linq.QueryBuilder{`0})">
            <summary>Establecer el stub de IQueryProvider`1.From(QueryBuilder`1&lt;!0&gt; builder)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryProvider{T}#Limit(System.Int32)">
            <summary>Establecer el stub de IQueryProvider`1.Limit(Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryProvider{T}#Limit(System.Int32,System.Int32)">
            <summary>Establecer el stub de IQueryProvider`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryProvider{T}#OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IQueryProvider`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryProvider{T}#OrderByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IQueryProvider`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryProvider{T}#ThenBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IQueryProvider`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryProvider{T}#ThenByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IQueryProvider`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryProvider{T}#Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryProvider{T}#WhereSql(NPoco.Sql)">
            <summary>Establecer el stub de IQueryProvider`1.WhereSql(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryProvider{T}#WhereSql(System.Func{NPoco.Linq.QueryContext{`0},NPoco.Sql})">
            <summary>Establecer el stub de IQueryProvider`1.WhereSql(Func`2&lt;QueryContext`1&lt;!0&gt;,Sql&gt; queryBuilder)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryProvider{T}#WhereSql(System.String,System.Object[])">
            <summary>Establecer el stub de IQueryProvider`1.WhereSql(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#Any">
            <summary>Establecer el stub de IQueryResultProvider`1.Any()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#Any(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#AnyAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.AnyAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#AnyAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.AnyAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#Count">
            <summary>Establecer el stub de IQueryResultProvider`1.Count()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#CountAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.CountAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#Distinct``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IQueryResultProvider`1.Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#Distinct">
            <summary>Establecer el stub de IQueryResultProvider`1.Distinct()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#DistinctAsync``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IQueryResultProvider`1.DistinctAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#DistinctAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.DistinctAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#First">
            <summary>Establecer el stub de IQueryResultProvider`1.First()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#First(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#FirstAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#FirstAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#FirstOrDefault">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#FirstOrDefaultAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefaultAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#ProjectTo``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IQueryResultProvider`1.ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#ProjectToAsync``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IQueryResultProvider`1.ProjectToAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#Single">
            <summary>Establecer el stub de IQueryResultProvider`1.Single()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#SingleAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#SingleAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#SingleOrDefault">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#SingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#SingleOrDefaultAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefaultAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#SingleOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToArray">
            <summary>Establecer el stub de IQueryResultProvider`1.ToArray()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToArrayAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToArrayAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToDynamicEnumerable">
            <summary>Establecer el stub de IQueryResultProvider`1.ToDynamicEnumerable()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToDynamicList">
            <summary>Establecer el stub de IQueryResultProvider`1.ToDynamicList()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToEnumerable">
            <summary>Establecer el stub de IQueryResultProvider`1.ToEnumerable()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToEnumerableAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToEnumerableAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToList">
            <summary>Establecer el stub de IQueryResultProvider`1.ToList()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToListAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToListAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToPage(System.Int32,System.Int32)">
            <summary>Establecer el stub de IQueryResultProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToPageAsync(System.Int32,System.Int32)">
            <summary>Establecer el stub de IQueryResultProvider`1.ToPageAsync(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.OrderByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IQueryProvider`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.OrderByExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IQueryProvider`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.ProjectToAsyncOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de ProjectToAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProvider`1.ProjectToOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.Single">
            <summary>Establecer el stub de IQueryResultProvider`1.Single()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.SingleAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.SingleAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.SingleExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.SingleOrDefault">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.SingleOrDefaultAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefaultAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.SingleOrDefaultAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.SingleOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.ThenByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IQueryProvider`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.ThenByExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IQueryProvider`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.ToArray">
            <summary>Establecer el stub de IQueryResultProvider`1.ToArray()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.ToArrayAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToArrayAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.ToDynamicEnumerable">
            <summary>Establecer el stub de IQueryResultProvider`1.ToDynamicEnumerable()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.ToDynamicList">
            <summary>Establecer el stub de IQueryResultProvider`1.ToDynamicList()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.ToEnumerable">
            <summary>Establecer el stub de IQueryResultProvider`1.ToEnumerable()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.ToEnumerableAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToEnumerableAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.ToList">
            <summary>Establecer el stub de IQueryResultProvider`1.ToList()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.ToListAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToListAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.ToPageAsyncInt32Int32">
            <summary>Establecer el stub de IQueryResultProvider`1.ToPageAsync(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.ToPageInt32Int32">
            <summary>Establecer el stub de IQueryResultProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.WhereSqlFuncOfQueryContextOfT0Sql">
            <summary>Establecer el stub de IQueryProvider`1.WhereSql(Func`2&lt;QueryContext`1&lt;!0&gt;,Sql&gt; queryBuilder)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.WhereSqlSql">
            <summary>Establecer el stub de IQueryProvider`1.WhereSql(Sql sql)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProvider`1.WhereSqlStringObjectArray">
            <summary>Establecer el stub de IQueryProvider`1.WhereSql(String sql, Object[] args)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1">
            <summary>Tipo stub de NPoco.Linq.IQueryProviderWithIncludes`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIQueryProviderWithIncludes</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.Any">
            <summary>Establecer el stub de IQueryResultProvider`1.Any()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.AnyAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.AnyAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.AnyAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.AnyAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.AnyExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.Count">
            <summary>Establecer el stub de IQueryResultProvider`1.Count()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.CountAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.CountAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.CountAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.CountExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.Distinct">
            <summary>Establecer el stub de IQueryResultProvider`1.Distinct()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.DistinctAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.DistinctAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.DistinctAsyncOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de DistinctAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.DistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.First">
            <summary>Establecer el stub de IQueryResultProvider`1.First()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.FirstAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.FirstAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.FirstExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.FirstOrDefault">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.FirstOrDefaultAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefaultAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.FirstOrDefaultAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.FirstOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.FromQueryBuilderOfT0">
            <summary>Establecer el stub de IQueryProvider`1.From(QueryBuilder`1&lt;!0&gt; builder)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.IncludeManyExpressionOfFuncOfT0IListJoinType">
            <summary>Establecer el stub de IQueryProviderWithIncludes`1.IncludeMany(Expression`1&lt;Func`2&lt;!0,IList&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.IncludeOf1ExpressionOfFuncOfT0M0JoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Linq.JoinType,NPoco.Linq.IQueryProviderWithIncludes{`0}})">
            <summary>Establecer stubs de Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.IncludeOf1ExpressionOfFuncOfT0M0StringJoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,NPoco.Linq.JoinType,NPoco.Linq.IQueryProviderWithIncludes{`0}})">
            <summary>Establecer stubs de Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, String tableAlias, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.IncludeOf1JoinType``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NPoco.Linq.JoinType,NPoco.Linq.IQueryProviderWithIncludes{`0}})">
            <summary>Establecer stubs de Include(JoinType joinType)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.LimitInt32">
            <summary>Establecer el stub de IQueryProvider`1.Limit(Int32 rows)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.LimitInt32Int32">
            <summary>Establecer el stub de IQueryProvider`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProviderWithIncludes{T}#Include``1(NPoco.Linq.JoinType)">
            <summary>Establecer el stub de IQueryProviderWithIncludes`1.Include(JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProviderWithIncludes{T}#Include``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},NPoco.Linq.JoinType)">
            <summary>Establecer el stub de IQueryProviderWithIncludes`1.Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProviderWithIncludes{T}#Include``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,NPoco.Linq.JoinType)">
            <summary>Establecer el stub de IQueryProviderWithIncludes`1.Include(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; expression, String tableAlias, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProviderWithIncludes{T}#IncludeMany(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.IList}},NPoco.Linq.JoinType)">
            <summary>Establecer el stub de IQueryProviderWithIncludes`1.IncludeMany(Expression`1&lt;Func`2&lt;!0,IList&gt;&gt; expression, JoinType joinType)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProviderWithIncludes{T}#UsingAlias(System.String)">
            <summary>Establecer el stub de IQueryProviderWithIncludes`1.UsingAlias(String empty)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProvider{T}#From(NPoco.Linq.QueryBuilder{`0})">
            <summary>Establecer el stub de IQueryProvider`1.From(QueryBuilder`1&lt;!0&gt; builder)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProvider{T}#Limit(System.Int32)">
            <summary>Establecer el stub de IQueryProvider`1.Limit(Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProvider{T}#Limit(System.Int32,System.Int32)">
            <summary>Establecer el stub de IQueryProvider`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProvider{T}#OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IQueryProvider`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProvider{T}#OrderByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IQueryProvider`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProvider{T}#ThenBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IQueryProvider`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProvider{T}#ThenByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IQueryProvider`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProvider{T}#Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProvider{T}#WhereSql(NPoco.Sql)">
            <summary>Establecer el stub de IQueryProvider`1.WhereSql(Sql sql)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProvider{T}#WhereSql(System.Func{NPoco.Linq.QueryContext{`0},NPoco.Sql})">
            <summary>Establecer el stub de IQueryProvider`1.WhereSql(Func`2&lt;QueryContext`1&lt;!0&gt;,Sql&gt; queryBuilder)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryProvider{T}#WhereSql(System.String,System.Object[])">
            <summary>Establecer el stub de IQueryProvider`1.WhereSql(String sql, Object[] args)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#Any">
            <summary>Establecer el stub de IQueryResultProvider`1.Any()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#Any(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#AnyAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.AnyAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#AnyAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.AnyAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#Count">
            <summary>Establecer el stub de IQueryResultProvider`1.Count()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#CountAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.CountAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#Distinct``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IQueryResultProvider`1.Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#Distinct">
            <summary>Establecer el stub de IQueryResultProvider`1.Distinct()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#DistinctAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.DistinctAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#DistinctAsync``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IQueryResultProvider`1.DistinctAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#First">
            <summary>Establecer el stub de IQueryResultProvider`1.First()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#First(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#FirstAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#FirstAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#FirstOrDefault">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#FirstOrDefaultAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefaultAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#ProjectTo``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IQueryResultProvider`1.ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#ProjectToAsync``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IQueryResultProvider`1.ProjectToAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#Single">
            <summary>Establecer el stub de IQueryResultProvider`1.Single()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#SingleAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#SingleAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#SingleOrDefault">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#SingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#SingleOrDefaultAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefaultAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#SingleOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#ToArray">
            <summary>Establecer el stub de IQueryResultProvider`1.ToArray()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#ToArrayAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToArrayAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#ToDynamicEnumerable">
            <summary>Establecer el stub de IQueryResultProvider`1.ToDynamicEnumerable()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#ToDynamicList">
            <summary>Establecer el stub de IQueryResultProvider`1.ToDynamicList()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#ToEnumerable">
            <summary>Establecer el stub de IQueryResultProvider`1.ToEnumerable()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#ToEnumerableAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToEnumerableAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#ToList">
            <summary>Establecer el stub de IQueryResultProvider`1.ToList()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#ToListAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToListAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#ToPage(System.Int32,System.Int32)">
            <summary>Establecer el stub de IQueryResultProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.NPoco#Linq#IQueryResultProvider{T}#ToPageAsync(System.Int32,System.Int32)">
            <summary>Establecer el stub de IQueryResultProvider`1.ToPageAsync(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.OrderByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IQueryProvider`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.OrderByExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IQueryProvider`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.ProjectToAsyncOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de ProjectToAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.ProjectToOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.Single">
            <summary>Establecer el stub de IQueryResultProvider`1.Single()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.SingleAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.SingleAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.SingleExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.SingleOrDefault">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.SingleOrDefaultAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefaultAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.SingleOrDefaultAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.SingleOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.ThenByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IQueryProvider`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.ThenByExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IQueryProvider`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; column)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.ToArray">
            <summary>Establecer el stub de IQueryResultProvider`1.ToArray()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.ToArrayAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToArrayAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.ToDynamicEnumerable">
            <summary>Establecer el stub de IQueryResultProvider`1.ToDynamicEnumerable()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.ToDynamicList">
            <summary>Establecer el stub de IQueryResultProvider`1.ToDynamicList()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.ToEnumerable">
            <summary>Establecer el stub de IQueryResultProvider`1.ToEnumerable()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.ToEnumerableAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToEnumerableAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.ToList">
            <summary>Establecer el stub de IQueryResultProvider`1.ToList()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.ToListAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToListAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.ToPageAsyncInt32Int32">
            <summary>Establecer el stub de IQueryResultProvider`1.ToPageAsync(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.ToPageInt32Int32">
            <summary>Establecer el stub de IQueryResultProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.UsingAliasString">
            <summary>Establecer el stub de IQueryProviderWithIncludes`1.UsingAlias(String empty)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.WhereSqlFuncOfQueryContextOfT0Sql">
            <summary>Establecer el stub de IQueryProvider`1.WhereSql(Func`2&lt;QueryContext`1&lt;!0&gt;,Sql&gt; queryBuilder)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.WhereSqlSql">
            <summary>Establecer el stub de IQueryProvider`1.WhereSql(Sql sql)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryProviderWithIncludes`1.WhereSqlStringObjectArray">
            <summary>Establecer el stub de IQueryProvider`1.WhereSql(String sql, Object[] args)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubIQueryResultProvider`1">
            <summary>Tipo stub de NPoco.Linq.IQueryResultProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIQueryResultProvider</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.Any">
            <summary>Establecer el stub de IQueryResultProvider`1.Any()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.AnyAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.AnyAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.AnyAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.AnyAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.AnyExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.Count">
            <summary>Establecer el stub de IQueryResultProvider`1.Count()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.CountAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.CountAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.CountAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.CountExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.Distinct">
            <summary>Establecer el stub de IQueryResultProvider`1.Distinct()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.DistinctAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.DistinctAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.DistinctAsyncOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de DistinctAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.DistinctOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.First">
            <summary>Establecer el stub de IQueryResultProvider`1.First()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.FirstAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.FirstAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.FirstExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.FirstOrDefault">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.FirstOrDefaultAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefaultAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.FirstOrDefaultAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.FirstOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#Any">
            <summary>Establecer el stub de IQueryResultProvider`1.Any()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#Any(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.Any(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#AnyAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.AnyAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#AnyAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.AnyAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#Count">
            <summary>Establecer el stub de IQueryResultProvider`1.Count()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.Count(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#CountAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.CountAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#CountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.CountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#Distinct``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IQueryResultProvider`1.Distinct(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#Distinct">
            <summary>Establecer el stub de IQueryResultProvider`1.Distinct()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#DistinctAsync``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IQueryResultProvider`1.DistinctAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#DistinctAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.DistinctAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#First">
            <summary>Establecer el stub de IQueryResultProvider`1.First()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#First(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.First(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#FirstAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#FirstAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#FirstOrDefault">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefault()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#FirstOrDefaultAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefaultAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#FirstOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.FirstOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#ProjectTo``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IQueryResultProvider`1.ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#ProjectToAsync``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>Establecer el stub de IQueryResultProvider`1.ProjectToAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#Single">
            <summary>Establecer el stub de IQueryResultProvider`1.Single()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#SingleAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#SingleAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#SingleOrDefault">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#SingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#SingleOrDefaultAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefaultAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#SingleOrDefaultAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToArray">
            <summary>Establecer el stub de IQueryResultProvider`1.ToArray()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToArrayAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToArrayAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToDynamicEnumerable">
            <summary>Establecer el stub de IQueryResultProvider`1.ToDynamicEnumerable()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToDynamicList">
            <summary>Establecer el stub de IQueryResultProvider`1.ToDynamicList()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToEnumerable">
            <summary>Establecer el stub de IQueryResultProvider`1.ToEnumerable()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToEnumerableAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToEnumerableAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToList">
            <summary>Establecer el stub de IQueryResultProvider`1.ToList()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToListAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToListAsync()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToPage(System.Int32,System.Int32)">
            <summary>Establecer el stub de IQueryResultProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.NPoco#Linq#IQueryResultProvider{T}#ToPageAsync(System.Int32,System.Int32)">
            <summary>Establecer el stub de IQueryResultProvider`1.ToPageAsync(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.ProjectToAsyncOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Threading.Tasks.Task{System.Collections.Generic.List{``0}}})">
            <summary>Establecer stubs de ProjectToAsync(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIQueryResultProvider`1.ProjectToOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.List{``0}})">
            <summary>Establecer stubs de ProjectTo(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; projectionExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.Single">
            <summary>Establecer el stub de IQueryResultProvider`1.Single()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.SingleAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.SingleAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.SingleExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.Single(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.SingleOrDefault">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefault()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.SingleOrDefaultAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefaultAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.SingleOrDefaultAsyncExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefaultAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.SingleOrDefaultExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IQueryResultProvider`1.SingleOrDefault(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.ToArray">
            <summary>Establecer el stub de IQueryResultProvider`1.ToArray()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.ToArrayAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToArrayAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.ToDynamicEnumerable">
            <summary>Establecer el stub de IQueryResultProvider`1.ToDynamicEnumerable()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.ToDynamicList">
            <summary>Establecer el stub de IQueryResultProvider`1.ToDynamicList()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.ToEnumerable">
            <summary>Establecer el stub de IQueryResultProvider`1.ToEnumerable()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.ToEnumerableAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToEnumerableAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.ToList">
            <summary>Establecer el stub de IQueryResultProvider`1.ToList()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.ToListAsync">
            <summary>Establecer el stub de IQueryResultProvider`1.ToListAsync()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.ToPageAsyncInt32Int32">
            <summary>Establecer el stub de IQueryResultProvider`1.ToPageAsync(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIQueryResultProvider`1.ToPageInt32Int32">
            <summary>Establecer el stub de IQueryResultProvider`1.ToPage(Int32 page, Int32 pageSize)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubISimpleQueryProviderExpression`1">
            <summary>Tipo stub de NPoco.Linq.ISimpleQueryProviderExpression`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubISimpleQueryProviderExpression`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubISimpleQueryProviderExpression</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubISimpleQueryProviderExpression`1.NPoco#Linq#ISimpleQueryProviderExpression{TModel}#AtlasSqlExpression">
            <summary>Establecer el stub de ISimpleQueryProviderExpression`1.get_AtlasSqlExpression()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubISimpleQueryProviderExpression`1.AtlasSqlExpressionGet">
            <summary>Establecer el stub de ISimpleQueryProviderExpression`1.get_AtlasSqlExpression()</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubIUpdateQueryProvider`1">
            <summary>Tipo stub de NPoco.Linq.IUpdateQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIUpdateQueryProvider`1.#ctor">
            <summary>Inicializa una nueva instancia de type StubIUpdateQueryProvider</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIUpdateQueryProvider`1.ExcludeDefaults">
            <summary>Establecer el stub de IUpdateQueryProvider`1.ExcludeDefaults()</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIUpdateQueryProvider`1.ExecuteAsyncT0">
            <summary>Establecer el stub de IUpdateQueryProvider`1.ExecuteAsync(!0 obj)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIUpdateQueryProvider`1.ExecuteT0">
            <summary>Establecer el stub de IUpdateQueryProvider`1.Execute(!0 obj)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIUpdateQueryProvider`1.NPoco#Linq#IUpdateQueryProvider{T}#ExcludeDefaults">
            <summary>Establecer el stub de IUpdateQueryProvider`1.ExcludeDefaults()</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIUpdateQueryProvider`1.NPoco#Linq#IUpdateQueryProvider{T}#Execute(`0)">
            <summary>Establecer el stub de IUpdateQueryProvider`1.Execute(!0 obj)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIUpdateQueryProvider`1.NPoco#Linq#IUpdateQueryProvider{T}#ExecuteAsync(`0)">
            <summary>Establecer el stub de IUpdateQueryProvider`1.ExecuteAsync(!0 obj)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIUpdateQueryProvider`1.NPoco#Linq#IUpdateQueryProvider{T}#OnlyFields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de IUpdateQueryProvider`1.OnlyFields(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; onlyFields)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubIUpdateQueryProvider`1.NPoco#Linq#IUpdateQueryProvider{T}#Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de IUpdateQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIUpdateQueryProvider`1.OnlyFieldsExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de IUpdateQueryProvider`1.OnlyFields(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; onlyFields)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubIUpdateQueryProvider`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de IUpdateQueryProvider`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubJoinData">
            <summary>Tipo stub de NPoco.Linq.JoinData</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubJoinData.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubJoinData.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubJoinData.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubJoinData</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubJoinData.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubJoinData.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubQueryBuilder`1">
            <summary>Tipo stub de NPoco.Linq.QueryBuilder`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryBuilder`1.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubQueryBuilder`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryBuilder`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubQueryBuilder</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubQueryBuilder`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubQueryBuilder`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryBuilder`1.Limit(System.Int32)">
            <summary>Establecer el stub de QueryBuilder`1.Limit(Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryBuilder`1.Limit(System.Int32,System.Int32)">
            <summary>Establecer el stub de QueryBuilder`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubQueryBuilder`1.LimitInt32">
            <summary>Establecer el stub de QueryBuilder`1.Limit(Int32 rows)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubQueryBuilder`1.LimitInt32Int32">
            <summary>Establecer el stub de QueryBuilder`1.Limit(Int32 skip, Int32 rows)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryBuilder`1.OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de QueryBuilder`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; orderByExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryBuilder`1.OrderByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de QueryBuilder`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; orderByDescendingExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubQueryBuilder`1.OrderByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de QueryBuilder`1.OrderByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; orderByDescendingExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubQueryBuilder`1.OrderByExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de QueryBuilder`1.OrderBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; orderByExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryBuilder`1.ThenBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de QueryBuilder`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; thenByExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryBuilder`1.ThenByDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Establecer el stub de QueryBuilder`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; thenByDescendingExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubQueryBuilder`1.ThenByDescendingExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de QueryBuilder`1.ThenByDescending(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; thenByDescendingExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubQueryBuilder`1.ThenByExpressionOfFuncOfT0Object">
            <summary>Establecer el stub de QueryBuilder`1.ThenBy(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; thenByExpression)</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryBuilder`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Establecer el stub de QueryBuilder`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="F:NPoco.Linq.Fakes.StubQueryBuilder`1.WhereExpressionOfFuncOfT0Boolean">
            <summary>Establecer el stub de QueryBuilder`1.Where(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; whereExpression)</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubQueryBuilderData`1">
            <summary>Tipo stub de NPoco.Linq.QueryBuilderData`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryBuilderData`1.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubQueryBuilderData`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryBuilderData`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubQueryBuilderData</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubQueryBuilderData`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubQueryBuilderData`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubQueryContext`1">
            <summary>Tipo stub de NPoco.Linq.QueryContext`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryContext`1.#ctor(NPoco.Database,NPoco.PocoData,System.Collections.Generic.Dictionary{System.String,NPoco.Linq.JoinData})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubQueryContext`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryContext`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubQueryContext</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubQueryContext`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubQueryContext`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubQueryProvider`1">
            <summary>Tipo stub de NPoco.Linq.QueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryProvider`1.#ctor(NPoco.Database)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryProvider`1.#ctor(NPoco.Database,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubQueryProvider`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubQueryProvider`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubQueryProvider</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubQueryProvider`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubQueryProvider`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubStringPocoCol">
            <summary>Tipo stub de NPoco.Linq.StringPocoCol</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubStringPocoCol.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubStringPocoCol.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubStringPocoCol.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubStringPocoCol</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubStringPocoCol.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubStringPocoCol.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.Linq.Fakes.StubUpdateQueryProvider`1">
            <summary>Tipo stub de NPoco.Linq.UpdateQueryProvider`1</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubUpdateQueryProvider`1.#ctor(NPoco.IDatabase)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubUpdateQueryProvider`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.Linq.Fakes.StubUpdateQueryProvider`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubUpdateQueryProvider</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubUpdateQueryProvider`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.Linq.Fakes.StubUpdateQueryProvider`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimArrayMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.RowMappers.ArrayMapper</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimArrayMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimArrayMapper.#ctor(NPoco.RowMappers.ArrayMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimArrayMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimArrayMapper.AllInstances.InitDbDataReaderPocoData">
            <summary>Establecer el shim de ArrayMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimArrayMapper.AllInstances.MapDbDataReaderRowMapperContext">
            <summary>Establecer el shim de ArrayMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimArrayMapper.AllInstances.ShouldMapPocoData">
            <summary>Establecer el shim de ArrayMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimArrayMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimArrayMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimArrayMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimArrayMapper.Bind(NPoco.RowMappers.IRowMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimArrayMapper.Constructor">
            <summary>Establecer el shim de ArrayMapper.ArrayMapper()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimArrayMapper.InitDbDataReaderPocoData">
            <summary>Establecer el shim de ArrayMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimArrayMapper.MapDbDataReaderRowMapperContext">
            <summary>Establecer el shim de ArrayMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimArrayMapper.ShouldMapPocoData">
            <summary>Establecer el shim de ArrayMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimDictionaryMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.RowMappers.DictionaryMapper</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimDictionaryMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimDictionaryMapper.#ctor(NPoco.RowMappers.DictionaryMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimDictionaryMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimDictionaryMapper.AllInstances.InitDbDataReaderPocoData">
            <summary>Establecer el shim de DictionaryMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimDictionaryMapper.AllInstances.MapDbDataReaderRowMapperContext">
            <summary>Establecer el shim de DictionaryMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimDictionaryMapper.AllInstances.ShouldMapPocoData">
            <summary>Establecer el shim de DictionaryMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimDictionaryMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimDictionaryMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimDictionaryMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimDictionaryMapper.Bind(NPoco.RowMappers.IRowMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimDictionaryMapper.Constructor">
            <summary>Establecer el shim de DictionaryMapper.DictionaryMapper()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimDictionaryMapper.InitDbDataReaderPocoData">
            <summary>Establecer el shim de DictionaryMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimDictionaryMapper.MapDbDataReaderRowMapperContext">
            <summary>Establecer el shim de DictionaryMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimDictionaryMapper.ShouldMapPocoData">
            <summary>Establecer el shim de DictionaryMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimDynamicPocoMember">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.RowMappers.DynamicPocoMember</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimDynamicPocoMember.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimDynamicPocoMember.#ctor(NPoco.RowMappers.DynamicPocoMember)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimDynamicPocoMember.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimDynamicPocoMember.AllInstances.GetValueObject">
            <summary>Establecer el shim de DynamicPocoMember.GetValue(Object target)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimDynamicPocoMember.AllInstances.SetValueObjectObject">
            <summary>Establecer el shim de DynamicPocoMember.SetValue(Object target, Object value)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimDynamicPocoMember.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimDynamicPocoMember.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimDynamicPocoMember.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimDynamicPocoMember.Constructor">
            <summary>Establecer el shim de DynamicPocoMember.DynamicPocoMember()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimDynamicPocoMember.GetValueObject">
            <summary>Establecer el shim de DynamicPocoMember.GetValue(Object target)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimDynamicPocoMember.SetValueObjectObject">
            <summary>Establecer el shim de DynamicPocoMember.SetValue(Object target, Object value)</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimGroupResult`1">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.RowMappers.GroupResult`1</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimGroupResult`1.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimGroupResult`1.#ctor(NPoco.RowMappers.GroupResult{`0})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimGroupResult`1.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.AllInstances.CountGet">
            <summary>Establecer el shim de GroupResult`1.get_Count()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.AllInstances.CountSetInt32">
            <summary>Establecer el shim de GroupResult`1.set_Count(Int32 value)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.AllInstances.ItemGet">
            <summary>Establecer el shim de GroupResult`1.get_Item()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.AllInstances.ItemSetString">
            <summary>Establecer el shim de GroupResult`1.set_Item(String value)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.AllInstances.KeyGet">
            <summary>Establecer el shim de GroupResult`1.get_Key()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.AllInstances.KeySetT0">
            <summary>Establecer el shim de GroupResult`1.set_Key(!0 value)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.AllInstances.SubItemsGet">
            <summary>Establecer el shim de GroupResult`1.get_SubItems()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.AllInstances.SubItemsSetIEnumerableOfGroupResultOfT0">
            <summary>Establecer el shim de GroupResult`1.set_SubItems(IEnumerable`1&lt;GroupResult`1&lt;!0&gt;&gt; value)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.AllInstances.ToString01">
            <summary>Establecer el shim de GroupResult`1.ToString()</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimGroupResult`1.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimGroupResult`1.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.Constructor">
            <summary>Establecer el shim de GroupResult`1.GroupResult`1()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.CountGet">
            <summary>Establecer el shim de GroupResult`1.get_Count()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.CountSetInt32">
            <summary>Establecer el shim de GroupResult`1.set_Count(Int32 value)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.ItemGet">
            <summary>Establecer el shim de GroupResult`1.get_Item()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.ItemSetString">
            <summary>Establecer el shim de GroupResult`1.set_Item(String value)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.KeyGet">
            <summary>Establecer el shim de GroupResult`1.get_Key()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.KeySetT0">
            <summary>Establecer el shim de GroupResult`1.set_Key(!0 value)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.SubItemsGet">
            <summary>Establecer el shim de GroupResult`1.get_SubItems()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.SubItemsSetIEnumerableOfGroupResultOfT0">
            <summary>Establecer el shim de GroupResult`1.set_SubItems(IEnumerable`1&lt;GroupResult`1&lt;!0&gt;&gt; value)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimGroupResult`1.ToString">
            <summary>Establecer el shim de GroupResult`1.ToString()</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimMyEnumerableExtensions">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.RowMappers.MyEnumerableExtensions</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimMyEnumerableExtensions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimMyEnumerableExtensions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimMyEnumerableExtensions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimMyEnumerableExtensions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimMyEnumerableExtensions.GroupByManyOf1IEnumerableOfM0FuncOfM0StringStringInt32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String,System.Int32,System.Collections.Generic.IEnumerable{NPoco.RowMappers.GroupResult{``0}}})">
            <summary>Establecer el shim de MyEnumerableExtensions.GroupByMany(IEnumerable`1&lt;!!0&gt; elements, Func`2&lt;!!0,String&gt; stringFunc, String splitBy, Int32 i)</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimPosName">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.RowMappers.PosName</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimPosName.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimPosName.#ctor(NPoco.RowMappers.PosName)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimPosName.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPosName.AllInstances.NameGet">
            <summary>Establecer el shim de PosName.get_Name()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPosName.AllInstances.NameSetString">
            <summary>Establecer el shim de PosName.set_Name(String value)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPosName.AllInstances.PosGet">
            <summary>Establecer el shim de PosName.get_Pos()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPosName.AllInstances.PosSetInt32">
            <summary>Establecer el shim de PosName.set_Pos(Int32 value)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimPosName.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimPosName.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPosName.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPosName.Constructor">
            <summary>Establecer el shim de PosName.PosName()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPosName.NameGet">
            <summary>Establecer el shim de PosName.get_Name()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPosName.NameSetString">
            <summary>Establecer el shim de PosName.set_Name(String value)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPosName.PosGet">
            <summary>Establecer el shim de PosName.get_Pos()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPosName.PosSetInt32">
            <summary>Establecer el shim de PosName.set_Pos(Int32 value)</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimPropertyMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.RowMappers.PropertyMapper</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimPropertyMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimPropertyMapper.#ctor(NPoco.RowMappers.PropertyMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimPropertyMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.AllInstances.BuildMapPlanDbDataReaderPocoData">
            <summary>Establecer el shim de PropertyMapper.BuildMapPlan(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.AllInstances.BuildMapPlansGroupResultOfPosNameDbDataReaderPocoDataListOfPocoMember">
            <summary>Establecer el shim de PropertyMapper.BuildMapPlans(GroupResult`1&lt;PosName&gt; groupedName, DbDataReader dataReader, PocoData pocoData, List`1&lt;PocoMember&gt; pocoMembers)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.AllInstances.InitDbDataReaderPocoData">
            <summary>Establecer el shim de PropertyMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.AllInstances.MapDbDataReaderRowMapperContext">
            <summary>Establecer el shim de PropertyMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.AllInstances.MapValueGroupResultOfPosNameObjectArrayFuncOfObjectObjectObjectPocoColumnObject">
            <summary>Establecer el shim de PropertyMapper.MapValue(GroupResult`1&lt;PosName&gt; posName, Object[] values, Func`2&lt;Object,Object&gt; converter, Object instance, PocoColumn pocoColumn, Object defaultValue)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.AllInstances.ShouldMapPocoData">
            <summary>Establecer el shim de PropertyMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimPropertyMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimPropertyMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimPropertyMapper.Bind(NPoco.RowMappers.IRowMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.BuildMapPlanDbDataReaderPocoData">
            <summary>Establecer el shim de PropertyMapper.BuildMapPlan(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.BuildMapPlansGroupResultOfPosNameDbDataReaderPocoDataListOfPocoMember">
            <summary>Establecer el shim de PropertyMapper.BuildMapPlans(GroupResult`1&lt;PosName&gt; groupedName, DbDataReader dataReader, PocoData pocoData, List`1&lt;PocoMember&gt; pocoMembers)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.Constructor">
            <summary>Establecer el shim de PropertyMapper.PropertyMapper()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.CreateDynamicDictionaryPocoMembersIEnumerableOfGroupResultOfPosNamePocoDataType">
            <summary>Establecer el shim de PropertyMapper.CreateDynamicDictionaryPocoMembers(IEnumerable`1&lt;GroupResult`1&lt;PosName&gt;&gt; subItems, PocoData pocoData, Type type)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.InitDbDataReaderPocoData">
            <summary>Establecer el shim de PropertyMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.IsEqualStringStringBoolean">
            <summary>Establecer el shim de PropertyMapper.IsEqual(String name, String value, Boolean exactMatch)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.MapDbDataReaderRowMapperContext">
            <summary>Establecer el shim de PropertyMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.MapValueGroupResultOfPosNameObjectArrayFuncOfObjectObjectObjectPocoColumnObject">
            <summary>Establecer el shim de PropertyMapper.MapValue(GroupResult`1&lt;PosName&gt; posName, Object[] values, Func`2&lt;Object,Object&gt; converter, Object instance, PocoColumn pocoColumn, Object defaultValue)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapper.ShouldMapPocoData">
            <summary>Establecer el shim de PropertyMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimPropertyMapperNameConvention">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.RowMappers.PropertyMapperNameConvention</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimPropertyMapperNameConvention.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimPropertyMapperNameConvention.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimPropertyMapperNameConvention.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapperNameConvention.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapperNameConvention.ConvertFromNewConventionIEnumerableOfPosNamePocoData">
            <summary>Establecer el shim de PropertyMapperNameConvention.ConvertFromNewConvention(IEnumerable`1&lt;PosName&gt; posNames, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapperNameConvention.ConvertFromOldConventionIEnumerableOfPosNameListOfPocoMember">
            <summary>Establecer el shim de PropertyMapperNameConvention.ConvertFromOldConvention(IEnumerable`1&lt;PosName&gt; posNames, List`1&lt;PocoMember&gt; pocoMembers)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapperNameConvention.FindMemberIEnumerableOfPocoMemberString">
            <summary>Establecer el shim de PropertyMapperNameConvention.FindMember(IEnumerable`1&lt;PocoMember&gt; pocoMembers, String name)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapperNameConvention.IsPocoMemberEqualPocoMemberString">
            <summary>Establecer el shim de PropertyMapperNameConvention.IsPocoMemberEqual(PocoMember pocoMember, String name)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimPropertyMapperNameConvention.StaticConstructor">
            <summary>Establecer el shim de PropertyMapperNameConvention.PropertyMapperNameConvention()</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimRowMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.RowMappers.RowMapper</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimRowMapper.#ctor(NPoco.RowMappers.RowMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimRowMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimRowMapper.AllInstances.GetColumnNamesDbDataReaderPocoData">
            <summary>Establecer el shim de RowMapper.GetColumnNames(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimRowMapper.AllInstances.InitDbDataReaderPocoData">
            <summary>Establecer el shim de RowMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimRowMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimRowMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimRowMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimRowMapper.Bind(NPoco.RowMappers.IRowMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimRowMapper.Constructor">
            <summary>Establecer el shim de RowMapper.RowMapper()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimRowMapper.GetColumnNamesDbDataReaderPocoData">
            <summary>Establecer el shim de RowMapper.GetColumnNames(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimRowMapper.GetConverterPocoDataPocoColumnTypeType">
            <summary>Establecer el shim de RowMapper.GetConverter(PocoData pocoData, PocoColumn pocoColumn, Type sourceType, Type desType)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimRowMapper.InitDbDataReaderPocoData">
            <summary>Establecer el shim de RowMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimRowMapperContext">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.RowMappers.RowMapperContext</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimRowMapperContext.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimRowMapperContext.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimRowMapperContext.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimRowMapperContext.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimRowMapperContext.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.RowMappers.ValueTupleRowMapper</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.#ctor(NPoco.RowMappers.ValueTupleRowMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.AllInstances.InitDbDataReaderPocoData">
            <summary>Establecer el shim de ValueTupleRowMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.AllInstances.MapDbDataReaderRowMapperContext">
            <summary>Establecer el shim de ValueTupleRowMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.AllInstances.ShouldMapPocoData">
            <summary>Establecer el shim de ValueTupleRowMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.Bind(NPoco.RowMappers.IRowMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.ConstructorMapperCollection">
            <summary>Establecer el shim de ValueTupleRowMapper.ValueTupleRowMapper(MapperCollection mappers)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.CreateRowMapperTypeMapperCollectionDbDataReader">
            <summary>Establecer el shim de ValueTupleRowMapper.CreateRowMapper(Type type, MapperCollection mappers, DbDataReader dataReader)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.CreateTupleExpressionTypeMapperCollectionDbDataReaderParameterExpressionInt32">
            <summary>Establecer el shim de ValueTupleRowMapper.CreateTupleExpression(Type type, MapperCollection mappers, DbDataReader dataReader, ParameterExpression reader, Int32 fieldIndex)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.GetRowMapperTypeMapperCollectionDbDataReader">
            <summary>Establecer el shim de ValueTupleRowMapper.GetRowMapper(Type type, MapperCollection mappers, DbDataReader dataReader)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.InitDbDataReaderPocoData">
            <summary>Establecer el shim de ValueTupleRowMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.IsValueTupleType">
            <summary>Establecer el shim de ValueTupleRowMapper.IsValueTuple(Type type)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.MapDbDataReaderRowMapperContext">
            <summary>Establecer el shim de ValueTupleRowMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.ShouldMapPocoData">
            <summary>Establecer el shim de ValueTupleRowMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTupleRowMapper.StaticConstructor">
            <summary>Establecer el shim de ValueTupleRowMapper.ValueTupleRowMapper()</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimValueTypeMapper">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.RowMappers.ValueTypeMapper</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimValueTypeMapper.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimValueTypeMapper.#ctor(NPoco.RowMappers.ValueTypeMapper)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.ShimValueTypeMapper.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTypeMapper.AllInstances.InitDbDataReaderPocoData">
            <summary>Establecer el shim de ValueTypeMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTypeMapper.AllInstances.MapDbDataReaderRowMapperContext">
            <summary>Establecer el shim de ValueTypeMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTypeMapper.AllInstances.ShouldMapPocoData">
            <summary>Establecer el shim de ValueTypeMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimValueTypeMapper.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimValueTypeMapper.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTypeMapper.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.ShimValueTypeMapper.Bind(NPoco.RowMappers.IRowMapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTypeMapper.Constructor">
            <summary>Establecer el shim de ValueTypeMapper.ValueTypeMapper()</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTypeMapper.InitDbDataReaderPocoData">
            <summary>Establecer el shim de ValueTypeMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTypeMapper.MapDbDataReaderRowMapperContext">
            <summary>Establecer el shim de ValueTypeMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.ShimValueTypeMapper.ShouldMapPocoData">
            <summary>Establecer el shim de ValueTypeMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.StubArrayMapper">
            <summary>Tipo stub de NPoco.RowMappers.ArrayMapper</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubArrayMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubArrayMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubArrayMapper.Init(System.Data.Common.DbDataReader,NPoco.PocoData)">
            <summary>Establecer el stub de ArrayMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubArrayMapper.InitDbDataReaderPocoData">
            <summary>Establecer el stub de ArrayMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubArrayMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubArrayMapper</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubArrayMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubArrayMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubArrayMapper.Map(System.Data.Common.DbDataReader,NPoco.RowMappers.RowMapperContext)">
            <summary>Establecer el stub de ArrayMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubArrayMapper.MapDbDataReaderRowMapperContext">
            <summary>Establecer el stub de ArrayMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubArrayMapper.ShouldMap(NPoco.PocoData)">
            <summary>Establecer el stub de ArrayMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubArrayMapper.ShouldMapPocoData">
            <summary>Establecer el stub de ArrayMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.StubDictionaryMapper">
            <summary>Tipo stub de NPoco.RowMappers.DictionaryMapper</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubDictionaryMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubDictionaryMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubDictionaryMapper.Init(System.Data.Common.DbDataReader,NPoco.PocoData)">
            <summary>Establecer el stub de DictionaryMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubDictionaryMapper.InitDbDataReaderPocoData">
            <summary>Establecer el stub de DictionaryMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubDictionaryMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDictionaryMapper</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubDictionaryMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubDictionaryMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubDictionaryMapper.Map(System.Data.Common.DbDataReader,NPoco.RowMappers.RowMapperContext)">
            <summary>Establecer el stub de DictionaryMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubDictionaryMapper.MapDbDataReaderRowMapperContext">
            <summary>Establecer el stub de DictionaryMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubDictionaryMapper.ShouldMap(NPoco.PocoData)">
            <summary>Establecer el stub de DictionaryMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubDictionaryMapper.ShouldMapPocoData">
            <summary>Establecer el stub de DictionaryMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.StubDynamicPocoMember">
            <summary>Tipo stub de NPoco.RowMappers.DynamicPocoMember</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubDynamicPocoMember.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubDynamicPocoMember.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubDynamicPocoMember.Create(System.Data.Common.DbDataReader)">
            <summary>Establecer el stub de PocoMember.Create(DbDataReader dataReader)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubDynamicPocoMember.CreateDbDataReader">
            <summary>Establecer el stub de PocoMember.Create(DbDataReader dataReader)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubDynamicPocoMember.GetValue(System.Object)">
            <summary>Establecer el stub de DynamicPocoMember.GetValue(Object target)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubDynamicPocoMember.GetValueObject">
            <summary>Establecer el stub de DynamicPocoMember.GetValue(Object target)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubDynamicPocoMember.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDynamicPocoMember</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubDynamicPocoMember.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubDynamicPocoMember.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubDynamicPocoMember.SetValue(System.Object,System.Object)">
            <summary>Establecer el stub de DynamicPocoMember.SetValue(Object target, Object value)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubDynamicPocoMember.SetValueObjectObject">
            <summary>Establecer el stub de DynamicPocoMember.SetValue(Object target, Object value)</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.StubGroupResult`1">
            <summary>Tipo stub de NPoco.RowMappers.GroupResult`1</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubGroupResult`1.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubGroupResult`1.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubGroupResult`1.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubGroupResult</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubGroupResult`1.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubGroupResult`1.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubGroupResult`1.ToString">
            <summary>Establecer el stub de GroupResult`1.ToString()</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubGroupResult`1.ToString01">
            <summary>Establecer el stub de GroupResult`1.ToString()</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.StubIRowMapper">
            <summary>Tipo stub de NPoco.RowMappers.IRowMapper</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubIRowMapper.#ctor">
            <summary>Inicializa una nueva instancia de type StubIRowMapper</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubIRowMapper.InitDbDataReaderPocoData">
            <summary>Establecer el stub de IRowMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubIRowMapper.MapDbDataReaderRowMapperContext">
            <summary>Establecer el stub de IRowMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubIRowMapper.NPoco#RowMappers#IRowMapper#Init(System.Data.Common.DbDataReader,NPoco.PocoData)">
            <summary>Establecer el stub de IRowMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubIRowMapper.NPoco#RowMappers#IRowMapper#Map(System.Data.Common.DbDataReader,NPoco.RowMappers.RowMapperContext)">
            <summary>Establecer el stub de IRowMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubIRowMapper.NPoco#RowMappers#IRowMapper#ShouldMap(NPoco.PocoData)">
            <summary>Establecer el stub de IRowMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubIRowMapper.ShouldMapPocoData">
            <summary>Establecer el stub de IRowMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.StubPosName">
            <summary>Tipo stub de NPoco.RowMappers.PosName</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubPosName.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubPosName.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubPosName.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPosName</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubPosName.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubPosName.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.StubPropertyMapper">
            <summary>Tipo stub de NPoco.RowMappers.PropertyMapper</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubPropertyMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubPropertyMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubPropertyMapper.Init(System.Data.Common.DbDataReader,NPoco.PocoData)">
            <summary>Establecer el stub de PropertyMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubPropertyMapper.InitDbDataReaderPocoData">
            <summary>Establecer el stub de PropertyMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubPropertyMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPropertyMapper</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubPropertyMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubPropertyMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubPropertyMapper.Map(System.Data.Common.DbDataReader,NPoco.RowMappers.RowMapperContext)">
            <summary>Establecer el stub de PropertyMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubPropertyMapper.MapDbDataReaderRowMapperContext">
            <summary>Establecer el stub de PropertyMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubPropertyMapper.ShouldMap(NPoco.PocoData)">
            <summary>Establecer el stub de PropertyMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubPropertyMapper.ShouldMapPocoData">
            <summary>Establecer el stub de PropertyMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.StubRowMapper">
            <summary>Tipo stub de NPoco.RowMappers.RowMapper</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubRowMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubRowMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubRowMapper.Init(System.Data.Common.DbDataReader,NPoco.PocoData)">
            <summary>Establecer el stub de RowMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubRowMapper.InitDbDataReaderPocoData">
            <summary>Establecer el stub de RowMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubRowMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRowMapper</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubRowMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubRowMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubRowMapper.Map(System.Data.Common.DbDataReader,NPoco.RowMappers.RowMapperContext)">
            <summary>Establecer el stub de RowMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubRowMapper.MapDbDataReaderRowMapperContext">
            <summary>Establecer el stub de RowMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubRowMapper.ShouldMap(NPoco.PocoData)">
            <summary>Establecer el stub de RowMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubRowMapper.ShouldMapPocoData">
            <summary>Establecer el stub de RowMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.StubValueTupleRowMapper">
            <summary>Tipo stub de NPoco.RowMappers.ValueTupleRowMapper</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubValueTupleRowMapper.#ctor(NPoco.MapperCollection)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubValueTupleRowMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubValueTupleRowMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubValueTupleRowMapper</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubValueTupleRowMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubValueTupleRowMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:NPoco.RowMappers.Fakes.StubValueTypeMapper">
            <summary>Tipo stub de NPoco.RowMappers.ValueTypeMapper</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubValueTypeMapper.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubValueTypeMapper.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubValueTypeMapper.Init(System.Data.Common.DbDataReader,NPoco.PocoData)">
            <summary>Establecer el stub de ValueTypeMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubValueTypeMapper.InitDbDataReaderPocoData">
            <summary>Establecer el stub de ValueTypeMapper.Init(DbDataReader dataReader, PocoData pocoData)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubValueTypeMapper.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubValueTypeMapper</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubValueTypeMapper.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:NPoco.RowMappers.Fakes.StubValueTypeMapper.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubValueTypeMapper.Map(System.Data.Common.DbDataReader,NPoco.RowMappers.RowMapperContext)">
            <summary>Establecer el stub de ValueTypeMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubValueTypeMapper.MapDbDataReaderRowMapperContext">
            <summary>Establecer el stub de ValueTypeMapper.Map(DbDataReader dataReader, RowMapperContext context)</summary>
        </member>
        <member name="M:NPoco.RowMappers.Fakes.StubValueTypeMapper.ShouldMap(NPoco.PocoData)">
            <summary>Establecer el stub de ValueTypeMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="F:NPoco.RowMappers.Fakes.StubValueTypeMapper.ShouldMapPocoData">
            <summary>Establecer el stub de ValueTypeMapper.ShouldMap(PocoData pocoData)</summary>
        </member>
        <member name="T:NPoco.fastJSON.Fakes.ShimDatasetSchema">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.fastJSON.DatasetSchema</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimDatasetSchema.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimDatasetSchema.#ctor(NPoco.fastJSON.DatasetSchema)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.fastJSON.Fakes.ShimDatasetSchema.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimDatasetSchema.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimDatasetSchema.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimDatasetSchema.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimDatasetSchema.Constructor">
            <summary>Establecer el shim de DatasetSchema.DatasetSchema()</summary>
        </member>
        <member name="T:NPoco.fastJSON.Fakes.ShimJSON">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.fastJSON.JSON</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimJSON.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.BeautifyString">
            <summary>Establecer el shim de JSON.Beautify(String input)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.BeautifyStringByte">
            <summary>Establecer el shim de JSON.Beautify(String input, Byte spaces)</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimJSON.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimJSON.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.ClearReflectionCache">
            <summary>Establecer el shim de JSON.ClearReflectionCache()</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.CreateLongStringInt32Int32">
            <summary>Establecer el shim de JSON.CreateLong(String s, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.DeepCopyObject">
            <summary>Establecer el shim de JSON.DeepCopy(Object obj)</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimJSON.DeepCopyOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Establecer el shim de JSON.DeepCopy(!!0 obj)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.FillObjectObjectString">
            <summary>Establecer el shim de JSON.FillObject(Object input, String json)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.ParseString">
            <summary>Establecer el shim de JSON.Parse(String json)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.RegisterCustomTypeTypeSerializeDeserialize">
            <summary>Establecer el shim de JSON.RegisterCustomType(Type type, Serialize serializer, Deserialize deserializer)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.StaticConstructor">
            <summary>Establecer el shim de JSON.JSON()</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.ToDynamicString">
            <summary>Establecer el shim de JSON.ToDynamic(String json)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.ToJSONObject">
            <summary>Establecer el shim de JSON.ToJSON(Object obj)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.ToJSONObjectJSONParameters">
            <summary>Establecer el shim de JSON.ToJSON(Object obj, JSONParameters param)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.ToNiceJSONObject">
            <summary>Establecer el shim de JSON.ToNiceJSON(Object obj)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.ToNiceJSONObjectJSONParameters">
            <summary>Establecer el shim de JSON.ToNiceJSON(Object obj, JSONParameters param)</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimJSON.ToObjectOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Establecer el shim de JSON.ToObject(String json)</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimJSON.ToObjectOf1StringJSONParameters``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,NPoco.fastJSON.JSONParameters,``0})">
            <summary>Establecer el shim de JSON.ToObject(String json, JSONParameters param)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.ToObjectString">
            <summary>Establecer el shim de JSON.ToObject(String json)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.ToObjectStringJSONParameters">
            <summary>Establecer el shim de JSON.ToObject(String json, JSONParameters param)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.ToObjectStringType">
            <summary>Establecer el shim de JSON.ToObject(String json, Type type)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSON.ToObjectStringTypeJSONParameters">
            <summary>Establecer el shim de JSON.ToObject(String json, Type type, JSONParameters par)</summary>
        </member>
        <member name="T:NPoco.fastJSON.Fakes.ShimJSONParameters">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.fastJSON.JSONParameters</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimJSONParameters.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimJSONParameters.#ctor(NPoco.fastJSON.JSONParameters)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:NPoco.fastJSON.Fakes.ShimJSONParameters.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSONParameters.AllInstances.FixValues">
            <summary>Establecer el shim de JSONParameters.FixValues()</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSONParameters.AllInstances.MakeCopy">
            <summary>Establecer el shim de JSONParameters.MakeCopy()</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimJSONParameters.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimJSONParameters.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSONParameters.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSONParameters.Constructor">
            <summary>Establecer el shim de JSONParameters.JSONParameters()</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSONParameters.FixValues">
            <summary>Establecer el shim de JSONParameters.FixValues()</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimJSONParameters.MakeCopy">
            <summary>Establecer el shim de JSONParameters.MakeCopy()</summary>
        </member>
        <member name="T:NPoco.fastJSON.Fakes.ShimSafeDictionary`2">
            <summary>Tipo de correcciones de compatibilidad (shim) de NPoco.fastJSON.SafeDictionary`2</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.#ctor(NPoco.fastJSON.SafeDictionary{`0,`1})">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.AddT0T1">
            <summary>Establecer el shim de SafeDictionary`2.Add(!0 key, !1 value)</summary>
        </member>
        <member name="T:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.AllInstances.AddT0T1">
            <summary>Establecer el shim de SafeDictionary`2.Add(!0 key, !1 value)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.AllInstances.CountGet">
            <summary>Establecer el shim de SafeDictionary`2.get_Count()</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.AllInstances.ItemGetT0">
            <summary>Establecer el shim de SafeDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.AllInstances.ItemSetT0T1">
            <summary>Establecer el shim de SafeDictionary`2.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.AllInstances.TryGetValueT0T1Out">
            <summary>Establecer el shim de SafeDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.Constructor">
            <summary>Establecer el shim de SafeDictionary`2.SafeDictionary`2()</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.ConstructorInt32">
            <summary>Establecer el shim de SafeDictionary`2.SafeDictionary`2(Int32 capacity)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.CountGet">
            <summary>Establecer el shim de SafeDictionary`2.get_Count()</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.ItemGetT0">
            <summary>Establecer el shim de SafeDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.ItemSetT0T1">
            <summary>Establecer el shim de SafeDictionary`2.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:NPoco.fastJSON.Fakes.ShimSafeDictionary`2.TryGetValueT0T1Out">
            <summary>Establecer el shim de SafeDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
    </members>
</doc>
